{"version":3,"mappings":"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","names":["ZonesStateService","constructor","_service","_dialog","this","BehaviorSubject","_loading","asObservable","item","combineLatest","all_item","_change","pipe","debounceTime","switchMap","d","__awaiter","PlaceZone","next","details","Promise","all","querySystems","zone_id","id","limit","map","total","toPromise","catch","_","listZoneTriggers","listMetadata","length","queryZones","parent","systems","triggers","metadata","children","list","data","catchError","shareReplay","of","setTimeout","getValue","active_item","selectTrigger","ref","open","SelectItemModalComponent","service_name","query_fn","queryTriggers","q","resp","race","componentInstance","event","first","reason","afterClosed","close","zone","addTrigger","replaceItem","trigger","updateZone","Object","unique","removeTrigger","openConfirmModal","title","content","name","icon","type","class","filter","t","err","notifyError","statusText","message","notifySuccess","i0","factory","ZonesComponent","BaseClass","_route","_router","super","extensions","extensionsForItem","updateTabList","console","log","tab_list","count","concat","ngOnInit","subscription","counts","subscribe","selectors","defaults","baseUrl","breaks","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","html","encode","test","replace","unescapeTest","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","regex","opt","source","obj","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","base","href","prot","decodeURIComponent","unescape","e","indexOf","baseUrls","justDomain","rtrim","relativeBase","protocol","domain","resolveUrl","encodeURI","noopTest","exec","target","key","i","arguments","prototype","hasOwnProperty","call","tableRow","cells","match","offset","str","escaped","curr","split","trim","shift","pop","splice","push","c","invert","l","suffLen","currChar","substr","warn","pattern","result","cap","link","raw","lexer","escape","text","state","inLink","token","tokens","inlineTokens","options","space","src","rules","block","newline","code","codeBlockStyle","fences","matchIndentToCode","indentToCode","node","matchIndentInNode","indentInNode","slice","join","indentCodeCompensation","lang","heading","trimmed","depth","inline","hr","blockquote","blockTokens","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","trimLeft","search","nextBulletRegex","Math","min","task","checked","trimRight","top","spacers","hasMultipleLineBreaks","every","chars","lineBreaks","char","pre","def","tag","table","header","splitCells","align","rows","j","k","row","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","b","level","findClosingBracket","linkLen","outputLink","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","edit","_label","_title","bullet","listItemStart","_tag","_comment","normal","merge","reflinkSearch","out","charCodeAt","random","toString","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","create","Tokenizer","inlineQueue","Lexer","lex","lastToken","cutSrc","lastParagraphClipped","some","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","a","s","errMsg","error","Error","keepPrevChar","keys","includes","lastIndexOf","repeatString","startInline","infostring","quote","slugger","slug","body","listitem","checkbox","tablerow","tablecell","flags","cleanUrl","image","seen","serialize","value","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Renderer","textRenderer","TextRenderer","Slugger","parser","Parser","parse","parseInline","l2","l3","cell","itemBody","ret","renderers","unshift","callback","checkSanitizeDeprecation","marked","done","pending","setOptions","newDefaults","changeDefaults","getDefaults","use","args","opts","childTokens","hasExtensions","pack","ext","prevRenderer","apply","prop","prevTokenizer","lexInline","ZoneAboutComponent","parsed_description","_a","description","tag_list","tags","$localize","ZoneSystemsComponent","_state","filter$","sys","ctx","ctx_r9","oxw","ZoneTriggersComponent","loading","ZoneChildrenComponent","zones","$event","ctx_r13","ctx_r17","ctx_r20","ctx_r24","ZoneMetadataComponent","_schemas","validateName","name_list","control","generateForms","newMetadata","floor","new","editMetadataDetails","field","MetadataDetailsModalComponent","maxWidth","form","form_map","deleteMetadata","ConfirmModalComponent","CONFIRM_METADATA","removeMetadata","response","saveMetadata","markAllAsTouched","valid","controls","updateMetadata","JSON","findIndex","edited","stringify","group","FormGroup","FormControl","Validators","editors","undefined","validateJSONString","schema","valueChanges","getSchema","schema_map","ROUTES","path","component","ExtensionOutletComponent","SettingsHistoryViewComponent","redirectTo","AppZonesModule","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","SharedContentModule"],"sources":["./apps/backoffice/src/app/zones/zones-state.service.ts","./apps/backoffice/src/app/zones/zones.component.ts","./node_modules/marked/lib/marked.esm.js","./apps/backoffice/src/app/zones/zone-about.component.ts","./apps/backoffice/src/app/zones/zone-systems.component.ts","./apps/backoffice/src/app/zones/zone-triggers.component.ts","./apps/backoffice/src/app/zones/zone-children.component.ts","./apps/backoffice/src/app/zones/zone-metadata.component.ts","./apps/backoffice/src/app/zones/zones.routes.ts","./apps/backoffice/src/app/zones/zones.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    listZoneTriggers,\n    PlaceMetadata,\n    PlaceTrigger,\n    PlaceZone,\n    querySystems,\n    queryTriggers,\n    queryZones,\n    listMetadata,\n    updateZone,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { catchError, debounceTime, first, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { openConfirmModal, unique } from '../common/general';\nimport { ActiveItemService } from '../common/item.service';\nimport { notifyError, notifySuccess } from '../common/notifications';\nimport {\n    SelectItemModalComponent,\n    SelectItemModalData,\n} from '../overlays/select-item-modal/select-item-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ZonesStateService {\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _change = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly item = this._service.item;\n\n    public readonly counts = combineLatest([this._service.all_item, this._change]).pipe(\n        debounceTime(300),\n        switchMap(async (d) => {\n            const [item] = d;\n            if (!(item instanceof PlaceZone)) return {};\n            this._loading.next(true);\n            const details = await Promise.all([\n                querySystems({ zone_id: item.id, limit: 1 })\n                    .pipe(map((d) => d.total))\n                    .toPromise()\n                    .catch((_) => 0),\n                listZoneTriggers(item.id)\n                    .pipe(map((d) => d.total))\n                    .toPromise()\n                    .catch((_) => 0),\n                listMetadata(item.id)\n                    .pipe(map((d) => d.length))\n                    .toPromise()\n                    .catch((_) => 0),\n                queryZones({ parent: item.id, limit: 1 })\n                    .pipe(map((d) => d.total))\n                    .toPromise()\n                    .catch((_) => 0),\n            ]);\n            const [systems, triggers, metadata, children] = details;\n            this._loading.next(false);\n            return {\n                systems,\n                triggers,\n                metadata,\n                children,\n            };\n        })\n    );\n\n    public readonly systems = this.item.pipe(\n        switchMap((item) => {\n            if (!(item instanceof PlaceZone)) return [];\n            return querySystems({ zone_id: item.id });\n        }),\n        map((list) => list.data),\n        catchError((_) => []),\n        shareReplay()\n    );\n\n    public readonly triggers = this.item.pipe(\n        switchMap((item) => {\n            if (!(item instanceof PlaceZone)) return [];\n            return listZoneTriggers(item.id);\n        }),\n        map((list) => list.data),\n        catchError((_) => []),\n        shareReplay()\n    );\n\n    public readonly metadata: Observable<PlaceMetadata[]> = this.item.pipe(\n        switchMap((item) => {\n            if (!(item instanceof PlaceZone)) return of([]);\n            return listMetadata(item.id);\n        }),\n        catchError((_) => []),\n        shareReplay(1)\n    );\n\n    public readonly children = this.item.pipe(\n        switchMap((item) => {\n            if (!(item instanceof PlaceZone)) return [];\n            return queryZones({ parent: item.id });\n        }),\n        map((list) => list.data),\n        catchError((_) => []),\n        shareReplay()\n    );\n\n    public get active_item(): PlaceZone {\n        return this._service.active_item as any;\n    }\n\n    constructor(private _service: ActiveItemService, private _dialog: MatDialog) {\n        setTimeout(() => this._change.next(!this._change.getValue()), 1000);\n    }\n\n    public async selectTrigger() {\n        const ref = this._dialog.open<SelectItemModalComponent, SelectItemModalData>(\n            SelectItemModalComponent,\n            {\n                data: {\n                    service_name: 'Triggers',\n                    query_fn: (_) => queryTriggers({ q: _ }).pipe(map((resp) => resp.data)),\n                },\n            }\n        );\n        const details = await Promise.race([\n            ref.componentInstance.event.pipe(first((_) => _.reason === 'action')).toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (!details || !details.reason) return ref.close();\n        const zone = await this.addTrigger(ref.componentInstance.item);\n        ref.close();\n        if (zone) this._service.replaceItem(zone);\n    }\n\n    public async addTrigger(trigger: PlaceTrigger) {\n        return updateZone(this.active_item.id, {\n            ...this.active_item,\n            triggers: unique([...this.active_item.triggers, trigger.id]),\n        }).toPromise();\n    }\n\n    public async removeTrigger(trigger: PlaceTrigger) {\n        const details = await openConfirmModal(\n            {\n                title: `Remove trigger`,\n                content: `<p>Are you sure you want remove trigger \"${trigger.name}\"?</p><p>Configuration will be updated <strong>immediately</strong>.</p>`,\n                icon: { type: 'icon', class: 'backoffice-trash' },\n            },\n            this._dialog\n        );\n        if (!details || !details.reason) return;\n        const zone = await updateZone(this.active_item.id, {\n            ...this.active_item,\n            triggers: this.active_item.triggers.filter((t) => t !== trigger.id),\n        })\n            .toPromise()\n            .catch((err) => {\n                details.close();\n                notifyError(\n                    `Error removing trigger ${trigger.id} from zone. Error: ${\n                        err.statusText || err.message || err\n                    }`\n                );\n                throw err;\n            });\n        details.close();\n        notifySuccess(`Successfully removed trigger from zone.`);\n        if (zone) this._service.replaceItem(zone);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { BaseClass } from '../common/base.class';\nimport { extensionsForItem } from '../common/api';\nimport { ZonesStateService } from './zones-state.service';\nimport { HashMap } from '../common/types';\n\n@Component({\n    selector: 'app-zones',\n    template: `\n        <div class=\"flex-1 flex-col sm:flex-row flex h-full w-full relative\">\n            <sidebar\n                heading=\"Zones\"\n                name=\"zones\"\n                class=\"absolute top-0 left-0 h-12 w-full sm:h-full sm:static\"\n            ></sidebar>\n            <item-display\n                name=\"zone\"\n                route=\"zones\"\n                [tabs]=\"tab_list\"\n                class=\"flex-1 relative mt-12 sm:mt-0 w-full sm:w-1/2\"\n            ></item-display>\n        </div>\n    `,\n    styles: [\n        `\n            sidebar {\n                transition: height 300ms;\n            }\n            @media screen and (min-width: 640px) {\n                sidebar {\n                    width: 20em !important;\n                }\n            }\n        `,\n    ],\n})\nexport class ZonesComponent extends BaseClass implements OnInit {\n    public readonly name = 'zones';\n\n    public tab_list = [];\n\n    public get extensions() {\n        return extensionsForItem(this._service.active_item, this.name);\n    }\n\n    public updateTabList(details: HashMap<number>) {\n        console.log('Details:', details);\n        this.tab_list = [\n            { id: 'about', name: 'About', icon: { class: 'backoffice-info-with-circle' } },\n            {\n                id: 'systems',\n                name: 'Systems',\n                count: details.systems,\n                icon: { class: 'backoffice-documents' },\n            },\n            {\n                id: 'triggers',\n                name: 'Triggers',\n                count: details.triggers,\n                icon: { class: 'backoffice-stopwatch' },\n            },\n            {\n                id: 'metadata',\n                name: 'Metadata',\n                count: details.metadata,\n                icon: { class: 'backoffice-gist' },\n            },\n            {\n                id: 'children',\n                name: 'Children',\n                count: details.children,\n                icon: { class: 'backoffice-flow-tree' },\n            },\n            { id: 'history', name: 'Settings History', icon: { class: 'backoffice-clock' } },\n        ].concat(this.extensions);\n    }\n\n    constructor(\n        protected _service: ZonesStateService,\n        protected _route: ActivatedRoute,\n        protected _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item',\n            this._service.counts.subscribe((details) => this.updateTabList(details))\n        );\n        this.updateTabList({});\n    }\n}\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (!cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text, [])\n    };\n    lexer.state.inLink = false;\n    return token;\n  } else {\n    return {\n      type: 'image',\n      raw,\n      href,\n      title,\n      text: escape(text)\n    };\n  }\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      const token = {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text: text,\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *> ?/gm, '');\n\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens: this.lexer.blockTokens(text, []),\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?: [^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0];\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            line = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(line)) {\n              break;\n            }\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) { // Dedent if possible\n              itemContents += '\\n' + line.slice(indent);\n            } else if (!blankLine) { // Until blank line, item doesn't need indentation\n              itemContents += '\\n' + line;\n            } else { // Otherwise, improper indentation ends this item\n              break;\n            }\n\n            if (!blankLine && !line.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw: raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n        const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n        const hasMultipleLineBreaks = spacers.every(t => {\n          const chars = t.raw.split('');\n          let lineBreaks = 0;\n          for (const char of chars) {\n            if (char === '\\n') {\n              lineBreaks += 1;\n            }\n            if (lineBreaks > 1) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n\n        if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n          // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n          list.loose = true;\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        token.type = 'paragraph';\n        token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.tokens = [];\n        this.lexer.inline(token.text, token.tokens);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href: cap[2],\n        title: cap[3]\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = [];\n          this.lexer.inlineTokens(item.header[j].text, item.header[j].tokens);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = [];\n            this.lexer.inlineTokens(row[k].text, row[k].tokens);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      const token = {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const token = {\n        type: 'paragraph',\n        raw: cap[0],\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      const token = {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link || !link.href) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = src.slice(1, lLength + match.index + rLength);\n          return {\n            type: 'em',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text,\n            tokens: this.lexer.inlineTokens(text, [])\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = src.slice(2, lLength + match.index + rLength - 1);\n        return {\n          type: 'strong',\n          raw: src.slice(0, lLength + match.index + rLength + 1),\n          text,\n          tokens: this.lexer.inlineTokens(text, [])\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2], [])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)( [^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //        () Skip orphan delim inside strong    (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\ninline.escapedEmSt = /\\\\\\*|\\\\_/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\n/**\n * smartypants text replacement\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n')\n      .replace(/\\t/g, '    ');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/^ +$/gm, '');\n    }\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens) {\n    this.inlineQueue.push({ src, tokens });\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  blockquote(quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  }\n\n  html(html) {\n    return html;\n  }\n\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      return '<h'\n        + level\n        + ' id=\"'\n        + this.options.headerPrefix\n        + slugger.slug(raw)\n        + '\">'\n        + text\n        + '</h'\n        + level\n        + '>\\n';\n    }\n    // ignore IDs\n    return '<h' + level + '>' + text + '</h' + level + '>\\n';\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  listitem(text) {\n    return '<li>' + text + '</li>\\n';\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  paragraph(text) {\n    return '<p>' + text + '</p>\\n';\n  }\n\n  table(header, body) {\n    if (body) body = '<tbody>' + body + '</tbody>';\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  tablerow(content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? '<' + type + ' align=\"' + flags.align + '\">'\n      : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  }\n\n  // span level renderer\n  strong(text) {\n    return '<strong>' + text + '</strong>';\n  }\n\n  em(text) {\n    return '<em>' + text + '</em>';\n  }\n\n  codespan(text) {\n    return '<code>' + text + '</code>';\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  del(text) {\n    return '<del>' + text + '</del>';\n  }\n\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} options\n   * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          if (opt.walkTokens) {\n            marked.walkTokens(tokens, opt.walkTokens);\n          }\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const opts = merge({}, ...args);\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n  let hasExtensions;\n\n  args.forEach((pack) => {\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      hasExtensions = true;\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        pack.walkTokens.call(this, token);\n        if (walkTokens) {\n          walkTokens.call(this, token);\n        }\n      };\n    }\n\n    if (hasExtensions) {\n      opts.extensions = extensions;\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  for (const token of tokens) {\n    callback.call(marked, token);\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          marked.walkTokens(cell.tokens, callback);\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            marked.walkTokens(cell.tokens, callback);\n          }\n        }\n        break;\n      }\n      case 'list': {\n        marked.walkTokens(token.items, callback);\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            marked.walkTokens(token[childTokens], callback);\n          });\n        } else if (token.tokens) {\n          marked.walkTokens(token.tokens, callback);\n        }\n      }\n    }\n  }\n};\n\n/**\n * Parse Inline\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","import { Component } from '@angular/core';\nimport { PlaceZone, PlaceSystem } from '@placeos/ts-client';\n\nimport { ZonesStateService } from './zones-state.service';\n\nimport { marked } from 'marked';\n\n@Component({\n    selector: 'zone-about',\n    template: `\n        <header\n            class=\"font-medium text-lg\"\n            *ngIf=\"(systems | async)?.length\"\n            i18n=\"@@execHeader\"\n        >\n            Execute Command\n        </header>\n        <section *ngIf=\"(systems | async)?.length\" class=\"mb-4\">\n            <mat-form-field appearance=\"outline\" class=\"h-12\">\n                <mat-select\n                    [(ngModel)]=\"active_system\"\n                    placeholder=\"Select system\"\n                >\n                    <mat-option\n                        *ngFor=\"let system of systems | async\"\n                        [value]=\"system\"\n                    >\n                        {{ system.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <execute-method-field\n                *ngIf=\"active_system && active_system.id\"\n                [system]=\"active_system\"\n            ></execute-method-field>\n        </section>\n        <section class=\"space-y-2\">\n            <div class=\"flex items-center space-x-2\" *ngIf=\"item?.parent_id\">\n                <label i18n=\"@@zoneParentLabel\">Parent ID:</label>\n                <div class=\"value underline\">\n                    <a [routerLink]=\"['/zones', item?.parent_id, 'about']\">{{\n                        item?.parent_id\n                    }}</a>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"item?.created_at\">\n                <label i18n=\"@@zoneCreatedAtLabel\">Created:</label>\n                <div class=\"value\">\n                    {{ item?.created_at * 1000 | dateFrom }}\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"item?.updated_at\">\n                <label i18n=\"@@zoneUpdatedAtLabel\">Updated:</label>\n                <div class=\"value\">\n                    {{ item?.updated_at * 1000 | dateFrom }}\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"item?.location\">\n                <label i18n=\"@@zoneLocationLabel\">Location:</label>\n                <div class=\"value\">{{ item?.location }}</div>\n            </div>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"item?.code\">\n                <label i18n=\"@@zoneCodeLabel\">Code:</label>\n                <div class=\"value\">{{ item?.code }}</div>\n            </div>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"item?.type\">\n                <label i18n=\"@@zoneTypeLabel\">Type:&nbsp;</label>\n                <div class=\"value\">{{ item?.type }}</div>\n            </div>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"item?.count\">\n                <label i18n=\"@@zoneCountLabel\">Count:</label>\n                <div class=\"value\">{{ item?.count }}</div>\n            </div>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"item?.capacity\">\n                <label i18n=\"@@zoneCapacityLabel\">Capacity:</label>\n                <div class=\"value\">{{ item?.capacity }}</div>\n            </div>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"item?.map_id\">\n                <label i18n=\"@@zoneMapLabel\">Map:</label>\n                <a class=\"underline\" [href]=\"item?.map_id\">{{\n                    item?.map_id\n                }}</a>\n            </div>\n        </section>\n        <header\n            class=\"font-medium text-lg\"\n            *ngIf=\"item?.description\"\n            i18n=\"@@descriptionLabel\"\n        >\n            Description\n        </header>\n        <section\n            class=\"description\"\n            *ngIf=\"item?.description\"\n            [innerHTML]=\"parsed_description\"\n        ></section>\n        <section class=\"flex space-x-2 mt-1\" *ngIf=\"item && tag_list\">\n            <label class=\"my-1\" for=\"tags\" i18n=\"@@zoneTagsLabel\">Tags:</label>\n            <div\n                class=\"value\"\n                *ngIf=\"tag_list && tag_list.length; else empty_tag_state\"\n            >\n                <mat-chip-list name=\"tags\">\n                    <mat-chip *ngFor=\"let tag of tag_list\">{{ tag }}</mat-chip>\n                </mat-chip-list>\n            </div>\n        </section>\n        <hr class=\"my-4\" />\n        <header class=\"font-medium text-lg\" i18n=\"@@settingsLabel\">\n            Settings\n        </header>\n        <section *ngIf=\"item?.settings; else load_state\">\n            <a-settings-form\n                [merge]=\"true\"\n                [id]=\"item?.id\"\n                [settings]=\"item?.settings\"\n            ></a-settings-form>\n        </section>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8\">\n                <mat-spinner class=\"mb-4\" diameter=\"48\"></mat-spinner>\n                <p i18n=\"@@zoneLoadingLabel\">Loading zone settings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_tag_state>\n            <p class=\"text-center py-1\" i18n=\"@@zoneTagsEmpty\">\n                &lt;No Tags&gt;\n            </p>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                padding: 1rem;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class ZoneAboutComponent {\n    /** List of associated systems */\n    public readonly systems = this._service.systems;\n    /** Selected system */\n    public active_system: PlaceSystem;\n\n    public get item(): PlaceZone {\n        return this._service.active_item as any;\n    }\n\n    public get parsed_description() {\n        return this.item ? marked(this.item?.description) : '';\n    }\n\n    /** List of tags associated with the zone */\n    public get tag_list(): string[] {\n        return this.item ? this.item?.tags : [];\n    }\n\n    constructor(private _service: ZonesStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { combineLatest, BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ZonesStateService } from './zones-state.service';\n\n@Component({\n    selector: 'zone-systems',\n    template: `\n        <div class=\"flex\">\n            <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                <app-icon\n                    matPrefix\n                    class=\"text-lg\"\n                    className=\"backoffice-magnifying-glass\"\n                ></app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"''\"\n                    (ngModelChange)=\"filter$.next($event)\"\n                    name=\"search-filter\"\n                    placeholder=\"Filter Systems\"\n                />\n            </mat-form-field>\n        </div>\n        <div role=\"table\" *ngIf=\"(systems | async)?.length; else empty_state\">\n            <div table-head>\n                <div class=\"flex-1 p-2\" i18n=\"@@systemTableName\">Name</div>\n                <div class=\"w-28 p-2\" i18n=\"@@systemTablePanelCount\">No. Modules</div>\n                <div class=\"w-32 p-2\" i18n=\"@@systemTableCreated\">Created</div>\n            </div>\n            <div table-body>\n                <div table-row *ngFor=\"let item of systems | async\">\n                    <div class=\"flex-1 p-2 underline\">\n                        <a\n                            [routerLink]=\"['/systems', item.id]\"\n                            [matTooltip]=\"item.id\"\n                            matTooltipPosition=\"right\"\n                        >\n                            {{ item.name }}\n                        </a>\n                    </div>\n                    <div class=\"w-28 p-2\">{{ item.modules.length }}</div>\n                    <div class=\"w-32 p-2\">{{ item?.created_at * 1000 | dateFrom }}</div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8\">\n                <p i18n=\"@@systemTableEmpty\">No systems found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                padding: 1rem;\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class ZoneSystemsComponent {\n    public readonly filter$ = new BehaviorSubject<string>('');\n\n    public readonly systems = combineLatest([this.filter$, this._state.systems]).pipe(\n        map((details) => {\n            const [filter, systems] = details;\n            const search = filter.toLowerCase();\n            return !filter\n                ? systems\n                : systems.filter((sys) => sys.name.toLowerCase().includes(search));\n        })\n    );\n\n    constructor(private _state: ZonesStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { PlaceZone } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ZonesStateService } from './zones-state.service';\n\n@Component({\n    selector: 'zone-triggers',\n    template: `\n        <section class=\"flex items-center mb-4 space-x-2\">\n            <button mat-button style=\"min-width: 8rem\" (click)=\"selectTrigger()\">\n                Add Trigger\n            </button>\n            <mat-form-field appearance=\"outline\" class=\"h-12 flex-1\">\n                <app-icon matPrefix className=\"backoffice-magnifying-glass text-xl mr-2\"></app-icon>\n                <input\n                    [ngModel]=\"''\"\n                    (ngModelChange)=\"filter$.next($event)\"\n                    matInput\n                    placeholder=\"Filter triggers...\"\n                    class=\"rounded-none\"\n                />\n            </mat-form-field>\n        </section>\n        <section>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <div\n                    role=\"table\"\n                    class=\"overflow-x-auto\"\n                    *ngIf=\"(triggers | async)?.length; else empty_state\"\n                >\n                    <div table-head>\n                        <div flex class=\"flex-1 p-2\" i18n=\"@@nameLabel\">Name</div>\n                        <div class=\"w-28 p-2\" i18n=\"@@descriptionLabel\">Added</div>\n                        <div class=\"w-32 p-2\"></div>\n                    </div>\n                    <div table-body class=\"overflow-y-auto\">\n                        <div table-row *ngFor=\"let trigger of triggers | async; let i = index\">\n                            <div flex class=\"flex-1 p-2\">\n                                <a class=\"truncate\" [routerLink]=\"['/triggers', trigger.id]\">{{\n                                    trigger.name\n                                }}</a>\n                            </div>\n                            <div desc class=\"w-28 p-2\">\n                                {{ +trigger.created_at * 1000 | dateFrom }}\n                            </div>\n                            <div class=\"w-32 p-2 items-center justify-center\">\n                                <button mat-icon-button (click)=\"deleteTrigger(trigger)\">\n                                    <app-icon className=\"backoffice-trash\"></app-icon>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n        </section>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 mx-auto\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>Loading triggers...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 mx-auto\">\n                <p>No triggers for zone</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                padding: 1rem;\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class ZoneTriggersComponent {\n    public readonly filter$ = new BehaviorSubject<string>('');\n    /** List of triggers associated with the zone */\n    public readonly triggers = combineLatest([this.filter$, this._state.triggers]).pipe(\n        map((details) => {\n            const [filter, systems] = details;\n            const search = filter.toLowerCase();\n            return !filter\n                ? systems\n                : systems.filter((sys) => sys.name.toLowerCase().includes(search));\n        })\n    );\n\n    public readonly loading = this._state.loading;\n\n    public readonly selectTrigger = () => this._state.selectTrigger();\n    public readonly deleteTrigger = (t) => this._state.removeTrigger(t);\n\n    public get item(): PlaceZone {\n        return this._state.active_item as any;\n    }\n\n    constructor(private _state: ZonesStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { PlaceZone } from '@placeos/ts-client';\nimport { combineLatest, BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ZonesStateService } from './zones-state.service';\n\n@Component({\n    selector: 'zone-children',\n    template: `\n        <div class=\"flex items-center\">\n            <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                <app-icon class=\"text-lg\" matPrefix className=\"backoffice-magnifying-glass\"></app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"''\"\n                    (ngModelChange)=\"filter$.next($event)\"\n                    name=\"search-filter\"\n                    placeholder=\"Filter Zones\"\n                    i18n-placeholder=\"@@zoneChildrenTableFilter\"\n                />\n            </mat-form-field>\n        </div>\n        <div role=\"table\" *ngIf=\"(children | async)?.length > 0; else empty_state\">\n            <div table-head>\n                <div class=\"flex-1 p-2\" i18n=\"@@zoneChildrenTableName\">Name</div>\n                <div class=\"w-3/5 p-2\" i18n=\"@@descriptionLabel\">Description</div>\n            </div>\n            <div table-body>\n                <div table-row *ngFor=\"let item of children | async\">\n                    <div class=\"flex-1 p-2 underline\">\n                        <a\n                            [routerLink]=\"['/zone', item.id]\"\n                            routerLinkActive=\"router-link-active\"\n                            [matTooltip]=\"item.id\"\n                        >\n                            {{ item.name }} (<span class=\"id\">{{ item.id }}</span\n                            >)\n                        </a>\n                    </div>\n                    <div class=\"w-3/5 p-2\">{{ item.description }}</div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8\" i18n=\"@@zoneChildrenTableEmpty\">\n                No child zones found\n            </div>\n        </ng-template>\n    `,\n    styles: [`\n        :host {\n            padding: 1rem;\n            width: 100%;\n            height: 100%;\n        }\n    `],\n})\nexport class ZoneChildrenComponent {\n    public readonly filter$ = new BehaviorSubject<string>('');\n    /** List of triggers associated with the zone */\n    public readonly children = combineLatest([this.filter$, this._state.children]).pipe(\n        map((details) => {\n            const [filter, zones] = details;\n            const search = filter.toLowerCase();\n            return !filter ? zones : zones.filter((sys) => sys.name.toLowerCase().includes(search));\n        })\n    );\n\n    public readonly loading = this._state.loading;\n\n    public get item(): PlaceZone {\n        return this._state.active_item as any;\n    }\n\n    constructor(private _state: ZonesStateService) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n    PlaceMetadata,\n    removeMetadata,\n    updateMetadata,\n    PlaceZone,\n} from '@placeos/ts-client';\n\nimport { BaseClass } from 'apps/backoffice/src/app/common/base.class';\nimport { HashMap } from 'apps/backoffice/src/app/common/types';\nimport {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport { validateJSONString } from 'apps/backoffice/src/app/common/validation';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MetadataDetailsModalComponent } from 'apps/backoffice/src/app/overlays/metadata-details-modal/metadata-details-modal.component';\nimport {\n    ConfirmModalComponent,\n    CONFIRM_METADATA,\n} from 'apps/backoffice/src/app/overlays/confirm-modal/confirm-modal.component';\nimport {\n    notifySuccess,\n    notifyError,\n} from 'apps/backoffice/src/app/common/notifications';\nimport { ZonesStateService } from './zones-state.service';\nimport { SchemaStateService } from '../engine/schema-state.service';\n\n@Component({\n    selector: 'zone-metadata',\n    template: `\n        <div class=\"p-4\" *ngIf=\"item\">\n            <button\n                mat-button\n                (click)=\"newMetadata()\"\n                i18n=\"@@addMetadataAction\"\n            >\n                Add new Metadata Field\n            </button>\n            <div class=\"mt-4\" *ngIf=\"metadata?.length; else empty_state\">\n                <mat-accordion>\n                    <ng-container *ngFor=\"let item of metadata\">\n                        <mat-expansion-panel\n                            [class.no-padding]=\"true\"\n                            *ngIf=\"form_map[item.name]\"\n                            [formGroup]=\"form_map[item.name]\"\n                        >\n                            <mat-expansion-panel-header>\n                                <mat-panel-title>\n                                    <div edit class=\"flex-1\">\n                                        {{\n                                            form_map[item.name].controls.name\n                                                .value\n                                        }}\n                                    </div>\n                                    <ng-container *ngIf=\"edited[item.name]\">\n                                        <button\n                                            mat-button\n                                            save\n                                            *ngIf=\"\n                                                !loading[item.name];\n                                                else load_state\n                                            \"\n                                            (click)=\"$event.stopPropagation()\"\n                                            (click)=\"saveMetadata(item)\"\n                                            i18n=\"@@saveAction\"\n                                        >\n                                            Save\n                                        </button>\n                                    </ng-container>\n                                    <button\n                                        mat-icon-button\n                                        matTooltip=\"Edit Metadata Settings\"\n                                        (click)=\"\n                                            editMetadataDetails(item);\n                                            $event.stopPropagation()\n                                        \"\n                                    >\n                                        <app-icon\n                                            [icon]=\"{\n                                                class: 'backoffice-edit'\n                                            }\"\n                                        ></app-icon>\n                                    </button>\n                                    <div class=\"contents\" *ngIf=\"!item.new\">\n                                        <button\n                                            mat-icon-button\n                                            matTooltip=\"Remove Metadata\"\n                                            (click)=\"deleteMetadata(item.name)\"\n                                        >\n                                            <app-icon\n                                                [icon]=\"{\n                                                    class: 'backoffice-trash'\n                                                }\"\n                                            ></app-icon>\n                                        </button>\n                                    </div>\n                                </mat-panel-title>\n                            </mat-expansion-panel-header>\n                            <div class=\"settings\">\n                                <settings-form-field\n                                    formControlName=\"details\"\n                                    lang=\"json\"\n                                    [schema]=\"this.schema_map[item.name]\"\n                                    [readonly]=\"false\"\n                                ></settings-form-field>\n                            </div>\n                        </mat-expansion-panel>\n                    </ng-container>\n                </mat-accordion>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"p-8 text-center\" i18n=\"@@zoneMetadataEmpty\">\n                No zone metadata found\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [edit] app-icon {\n                opacity: 0;\n                transition: opacity 200ms;\n            }\n\n            [edit]:hover app-icon {\n                opacity: 1;\n            }\n\n            mat-panel-title {\n                display: flex;\n                align-items: center;\n                height: 1.2em;\n                overflow: visible;\n            }\n\n            mat-panel-title [save] {\n                font-size: 0.8em;\n                background: none;\n                border: none;\n                text-decoration: underline;\n                color: inherit;\n            }\n\n            mat-form-field {\n                height: 3em;\n            }\n\n            .settings {\n                width: 100%;\n            }\n\n            .contents {\n                display: flex;\n                justify-content: flex-end;\n                flex: 1;\n                min-width: 2em;\n            }\n\n            .contents button {\n                text-decoration: none;\n            }\n        `,\n    ],\n})\nexport class ZoneMetadataComponent extends BaseClass implements OnInit {\n    /** List of metadata associated with the zone */\n    public metadata: PlaceMetadata[];\n    /** Map of form field groups to metadata fields */\n    public form_map: HashMap<FormGroup> = {};\n    /** Map of metadata fields to whether they have been edited */\n    public edited: HashMap<boolean> = {};\n    /** Map of metadata properties to whether they are saving */\n    public loading: HashMap<boolean> = {};\n    /** Map of metadata schemas to the associated metadata */\n    public schema_map: HashMap<HashMap | string> = {};\n\n    public get item(): PlaceZone {\n        return this._service.active_item as any;\n    }\n\n    private validateName(name_list: string[]) {\n        return (control: AbstractControl) => {\n            return name_list.indexOf(control.value) >= 0\n                ? { name: true }\n                : null;\n        };\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _service: ZonesStateService,\n        private _schemas: SchemaStateService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'metadata',\n            this._service.metadata.subscribe((d) => {\n                this.metadata = d || [];\n                this.generateForms();\n            })\n        );\n    }\n\n    public newMetadata() {\n        if (!this.metadata) this.metadata = [];\n        this.metadata.push({\n            name: `new_field_${Math.floor(Math.random() * 999_999_999)}`,\n            description: '',\n            new: true,\n            details: {},\n        } as any);\n        this.generateForms();\n    }\n\n    public editMetadataDetails(field: PlaceMetadata) {\n        const form = this.form_map[field.name];\n        this._dialog.open(MetadataDetailsModalComponent, {\n            maxWidth: '95vw',\n            data: {\n                form,\n            },\n        });\n    }\n\n    /**\n     * Delete the given metadata field\n     * @param field Name of the field to remove\n     */\n    public deleteMetadata(field: string) {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: `Kill process`,\n                content: `\n                    <p>Are you sure you want delete the metadata property \"${field}\"?</p>\n                `,\n                icon: { type: 'icon', class: 'backoffice-trash' },\n            },\n        });\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done') {\n                    removeMetadata(this.item.id, { name: field }).subscribe(\n                        () => {\n                            notifySuccess(\n                                `Successfully removed \"${field}\" metadata.`\n                            );\n                            this.metadata = this.metadata.filter(\n                                (prop) => prop.name !== field\n                            );\n                            this.generateForms();\n                        },\n                        (err) =>\n                            notifyError(\n                                `Error removing old \"${field}\" metadata. Error: ${\n                                    err.response || err.message || err\n                                }`\n                            )\n                    );\n                }\n                ref.close();\n            })\n        );\n    }\n\n    public saveMetadata(field: PlaceMetadata) {\n        const form = this.form_map[field.name];\n        form.markAllAsTouched();\n        if (!form.valid)\n            return notifyError(\n                `JSON for property \"${form.controls.name.value}\" is invalid`\n            );\n        const value = form.value;\n        this.loading[field.name] = true;\n        updateMetadata(this.item.id, {\n            ...value,\n            details: JSON.parse(value.details),\n        }).subscribe(\n            (item: PlaceMetadata) => {\n                this.loading[field.name] = false;\n                const index = this.metadata.findIndex(\n                    (i) => i.name === field.name\n                );\n                this.edited[field.name] = false;\n                if (field.name !== item.name) {\n                    removeMetadata(this.item.id, field)\n                        .toPromise()\n                        .catch((err) =>\n                            notifyError(\n                                `Error removing old \"${\n                                    field.name\n                                }\" metadata. Error: ${JSON.stringify(\n                                    err.response || err.message || err\n                                )}`\n                            )\n                        );\n                }\n                if (index >= 0) {\n                    this.metadata.splice(index, 1, {\n                        ...item,\n                        new: false,\n                    } as any);\n                }\n                notifySuccess(`Saved \"${value.name}\" metadata.`);\n                this.generateForms();\n            },\n            (err) => {\n                this.loading[field.name] = false;\n                notifyError(\n                    `Error saving \"${\n                        value.name\n                    }\" metadata. Error: ${JSON.stringify(\n                        err.response || err.message || err\n                    )}`\n                );\n            }\n        );\n    }\n\n    private generateForms() {\n        delete this.form_map;\n        this.form_map = {};\n        this.metadata.forEach((group) => {\n            const details =\n                typeof group.details === 'string'\n                    ? JSON.parse(group.details)\n                    : group.details;\n            this.form_map[group.name] = new FormGroup({\n                name: new FormControl(group.name, [\n                    Validators.required,\n                    this.validateName(\n                        this.metadata\n                            .filter((i) => i.name !== group.name)\n                            .map((i) => i.name)\n                    ),\n                ]),\n                description: new FormControl(group.description),\n                editors: new FormControl(group.editors),\n                details: new FormControl(\n                    JSON.stringify(details || {}, undefined, 4),\n                    [Validators.required, validateJSONString]\n                ),\n                schema: new FormControl(group.schema),\n            });\n            this.subscription(\n                `${group.name}_changes`,\n                this.form_map[group.name].valueChanges.subscribe(\n                    () => (this.edited[group.name] = true)\n                )\n            );\n            this.subscription(\n                `${group.name}_schema`,\n                this.form_map[\n                    group.name\n                ].controls.schema.valueChanges.subscribe((_) => {\n                    let schema = this._schemas.getSchema(_);\n                    if (!schema) {\n                        try {\n                            schema = JSON.parse(_);\n                        } catch (e) {\n                            schema = {};\n                        }\n                    }\n                    this.schema_map[group.name] = schema;\n                })\n            );\n        });\n    }\n}\n","import { Routes } from '@angular/router';\n\nimport { ZonesComponent } from './zones.component';\nimport { ZoneAboutComponent } from './zone-about.component';\nimport { ZoneSystemsComponent } from './zone-systems.component';\nimport { ZoneTriggersComponent } from './zone-triggers.component';\nimport { ZoneChildrenComponent } from './zone-children.component';\nimport { ZoneMetadataComponent } from './zone-metadata.component';\nimport { ExtensionOutletComponent } from '../ui/extension-outlet.component';\nimport { SettingsHistoryViewComponent } from '../ui/settings-history-view.component';\n\nexport const ROUTES: Routes = [\n    {\n        path: ':id',\n        component: ZonesComponent,\n        children: [\n            { path: 'about', component: ZoneAboutComponent },\n            { path: 'systems', component: ZoneSystemsComponent },\n            { path: 'triggers', component: ZoneTriggersComponent },\n            { path: 'children', component: ZoneChildrenComponent },\n            { path: 'metadata', component: ZoneMetadataComponent },\n            { path: 'extend/:id', component: ExtensionOutletComponent },\n            { path: 'history', component: SettingsHistoryViewComponent },\n            { path: '**', redirectTo: 'about' },\n        ],\n    },\n    { path: '**', redirectTo: '-' },\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ROUTES } from './zones.routes';\nimport { SharedContentModule } from 'apps/backoffice/src/app/ui/ui.module';\n\nimport { ZonesComponent } from './zones.component';\nimport { ZoneAboutComponent } from './zone-about.component';\nimport { ZoneSystemsComponent } from './zone-systems.component';\nimport { ZoneTriggersComponent } from './zone-triggers.component';\nimport { ZoneChildrenComponent } from './zone-children.component';\nimport { ZoneMetadataComponent } from './zone-metadata.component';\n\n@NgModule({\n    declarations: [\n        ZonesComponent,\n        ZoneAboutComponent,\n        ZoneSystemsComponent,\n        ZoneTriggersComponent,\n        ZoneChildrenComponent,\n        ZoneMetadataComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n    ],\n})\nexport class AppZonesModule {}\n"],"sourceRoot":"webpack:///","file":"595.fdecef46b71f5499.js"}