{"version":3,"file":"201.ead6547a31dc6c99.js","mappings":"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","names":["ZonesStateService","active_item","this","_service","constructor","_dialog","_this","_loading","BehaviorSubject","_change","loading","asObservable","item","counts","combineLatest","active_item$","pipe","debounceTime","switchMap","_ref","_asyncToGenerator","d","PlaceZone","next","details","Promise","all","querySystems","zone_id","id","limit","map","total","toPromise","catch","_","listZoneTriggers","listMetadata","length","queryZones","parent_id","systems","triggers","metadata","children","_x","apply","arguments","list","data","catchError","shareReplay","of","setTimeout","getValue","selectTrigger","_this2","ref","open","SelectItemModalComponent","service_name","query_fn","queryTriggers","q","resp","race","componentInstance","event","first","reason","afterClosed","close","zone","addTrigger","replaceItem","trigger","_this3","updateZone","unique","removeTrigger","_this4","openConfirmModal","title","content","name","icon","type","class","filter","t","err","notifyError","statusText","message","notifySuccess","i0","i1","i2","core","Yz7","factory","ɵfac","providedIn","system_r22","ctx_r21","active_system","ZoneAboutComponent_div_1_header_1_Template","$event","_r24","ctx_r23","ZoneAboutComponent_div_1_mat_option_5_Template","ZoneAboutComponent_div_1_execute_method_field_7_Template","tmp_0_0","ctx_r0","_c6","ctx_r1","ctx_r2","created_at","ctx_r3","updated_at","ctx_r4","location","ctx_r5","code","ctx_r6","ctx_r7","count","ctx_r8","capacity","ctx_r9","timezone","ctx_r10","map_id","tag_r27","ZoneAboutComponent_div_14_div_3_div_1_Template","ctx_r25","tag_list","ZoneAboutComponent_div_14_div_3_Template","ctx_r11","_r17","ctx_r13","parsed_description","ctx_r14","settings","ZoneAboutComponent","marked","description","tags","Xpm","selectors","decls","vars","consts","i18n_0","$localize","ZoneAboutComponent_div_1_Template","ZoneAboutComponent_div_4_Template","ZoneAboutComponent_div_5_Template","ZoneAboutComponent_div_6_Template","ZoneAboutComponent_div_7_Template","ZoneAboutComponent_div_8_Template","ZoneAboutComponent_div_9_Template","ZoneAboutComponent_div_10_Template","ZoneAboutComponent_div_11_Template","ZoneAboutComponent_div_12_Template","ZoneAboutComponent_div_13_Template","ZoneAboutComponent_div_14_Template","ZoneAboutComponent_header_15_Template","ZoneAboutComponent_section_16_Template","ZoneAboutComponent_section_20_Template","ZoneAboutComponent_ng_template_21_Template","ZoneAboutComponent_ng_template_23_Template","ctx","_r15","item_r4","modules","ZoneSystemsComponent_div_4_div_9_Template","ZoneSystemsComponent","_state","filter$","search","toLowerCase","sys","includes","ZoneSystemsComponent_div_4_Template","ZoneSystemsComponent_ng_template_6_Template","tmp_1_0","_r1","trigger_r7","_r10","$implicit","deleteTrigger","_c4","ZoneTriggersComponent_ng_container_7_div_1_div_8_Template","ZoneTriggersComponent_ng_container_7_div_1_Template","_r3","ZoneTriggersComponent","ZoneTriggersComponent_ng_container_7_Template","ZoneTriggersComponent_ng_template_9_Template","ZoneTriggersComponent_ng_template_11_Template","ZoneChildrenComponent_div_4_div_7_Template","ZoneChildrenComponent","zones","ZoneChildrenComponent_div_4_Template","ZoneChildrenComponent_ng_template_6_Template","ZoneMetadataComponent","template","rf","ZoneMetadataComponent_metadata_display_0_Template","_r5","scroll","scrollTop","tab_list","ROUTES","path","component","ZonesComponent","AsyncHandler","extensions","extensionsForItem","debug_position","_debug","position","updateTabList","concat","_item","_route","_router","super","open_menu","newItem","create","bulkAdd","ngOnInit","subscription","subscribe","i3","i4","features","ZonesComponent_ng_container_10_Template","ZonesComponent_app_debug_output_16_Template","ZonesComponent_app_debug_output_17_Template","ExtensionOutletComponent","SettingsHistoryViewComponent","redirectTo","AppZonesModule","oAB","cJS","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","forChild","SharedContentModule"],"sourceRoot":"webpack:///","sources":["./apps/backoffice/src/app/zones/zones-state.service.ts","./apps/backoffice/src/app/zones/zone-about.component.ts","./apps/backoffice/src/app/zones/zone-systems.component.ts","./apps/backoffice/src/app/zones/zone-triggers.component.ts","./apps/backoffice/src/app/zones/zone-children.component.ts","./apps/backoffice/src/app/zones/zone-metadata.component.ts","./apps/backoffice/src/app/zones/zones.component.ts","./apps/backoffice/src/app/zones/zones.routes.ts","./apps/backoffice/src/app/zones/zones.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    listZoneTriggers,\n    PlaceMetadata,\n    PlaceTrigger,\n    PlaceZone,\n    querySystems,\n    queryTriggers,\n    queryZones,\n    listMetadata,\n    updateZone,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { catchError, debounceTime, first, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { openConfirmModal, unique } from '../common/general';\nimport { ActiveItemService } from '../common/item.service';\nimport { notifyError, notifySuccess } from '../common/notifications';\nimport {\n    SelectItemModalComponent,\n    SelectItemModalData,\n} from '../overlays/select-item-modal/select-item-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ZonesStateService {\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _change = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly item = this._service.item;\n\n    public readonly counts = combineLatest([this._service.active_item$, this._change]).pipe(\n        debounceTime(300),\n        switchMap(async (d) => {\n            const [item] = d;\n            if (!(item instanceof PlaceZone)) return {};\n            this._loading.next(true);\n            const details = await Promise.all([\n                querySystems({ zone_id: item.id, limit: 1 })\n                    .pipe(map((d) => d.total))\n                    .toPromise()\n                    .catch((_) => 0),\n                listZoneTriggers(item.id)\n                    .pipe(map((d) => d.total))\n                    .toPromise()\n                    .catch((_) => 0),\n                listMetadata(item.id)\n                    .pipe(map((d) => d.length))\n                    .toPromise()\n                    .catch((_) => 0),\n                queryZones({ parent_id: item.id, limit: 1 })\n                    .pipe(map((d) => d.total))\n                    .toPromise()\n                    .catch((_) => 0),\n            ]);\n            const [systems, triggers, metadata, children] = details;\n            this._loading.next(false);\n            return {\n                systems,\n                triggers,\n                metadata,\n                children,\n            };\n        })\n    );\n\n    public readonly systems = this.item.pipe(\n        switchMap((item) => {\n            if (!(item instanceof PlaceZone)) return [];\n            return querySystems({ zone_id: item.id });\n        }),\n        map((list) => list.data),\n        catchError((_) => []),\n        shareReplay()\n    );\n\n    public readonly triggers = this.item.pipe(\n        switchMap((item) => {\n            if (!(item instanceof PlaceZone)) return [];\n            return listZoneTriggers(item.id);\n        }),\n        map((list) => list.data),\n        catchError((_) => []),\n        shareReplay()\n    );\n\n    public readonly metadata: Observable<PlaceMetadata[]> = this.item.pipe(\n        switchMap((item) => {\n            if (!(item instanceof PlaceZone)) return of([]);\n            return listMetadata(item.id);\n        }),\n        catchError((_) => []),\n        shareReplay(1)\n    );\n\n    public readonly children = this.item.pipe(\n        switchMap((item) => {\n            if (!(item instanceof PlaceZone)) return [];\n            return queryZones({ parent_id: item.id });\n        }),\n        map((list) => list.data),\n        catchError((_) => []),\n        shareReplay()\n    );\n\n    public get active_item(): PlaceZone {\n        return this._service.active_item as any;\n    }\n\n    constructor(private _service: ActiveItemService, private _dialog: MatDialog) {\n        setTimeout(() => this._change.next(!this._change.getValue()), 1000);\n    }\n\n    public async selectTrigger() {\n        const ref = this._dialog.open<SelectItemModalComponent, SelectItemModalData>(\n            SelectItemModalComponent,\n            {\n                data: {\n                    service_name: 'Triggers',\n                    query_fn: (_) => queryTriggers({ q: _ }).pipe(map((resp) => resp.data)),\n                },\n            }\n        );\n        const details = await Promise.race([\n            ref.componentInstance.event.pipe(first((_) => _.reason === 'action')).toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (!details || !details.reason) return ref.close();\n        const zone = await this.addTrigger(ref.componentInstance.item);\n        ref.close();\n        if (zone) this._service.replaceItem(zone);\n    }\n\n    public async addTrigger(trigger: PlaceTrigger) {\n        return updateZone(this.active_item.id, {\n            ...this.active_item,\n            triggers: unique([...this.active_item.triggers, trigger.id]),\n        }).toPromise();\n    }\n\n    public async removeTrigger(trigger: PlaceTrigger) {\n        const details = await openConfirmModal(\n            {\n                title: `Remove trigger`,\n                content: `<p>Are you sure you want remove trigger \"${trigger.name}\"?</p><p>Configuration will be updated <strong>immediately</strong>.</p>`,\n                icon: { type: 'icon', class: 'backoffice-trash' },\n            },\n            this._dialog\n        );\n        if (!details || !details.reason) return;\n        const zone = await updateZone(this.active_item.id, {\n            ...this.active_item,\n            triggers: this.active_item.triggers.filter((t) => t !== trigger.id),\n        })\n            .toPromise()\n            .catch((err) => {\n                details.close();\n                notifyError(\n                    `Error removing trigger ${trigger.id} from zone. Error: ${\n                        err.statusText || err.message || err\n                    }`\n                );\n                throw err;\n            });\n        details.close();\n        notifySuccess(`Successfully removed trigger from zone.`);\n        if (zone) this._service.replaceItem(zone);\n    }\n}\n","import { Component } from '@angular/core';\nimport { PlaceZone, PlaceSystem } from '@placeos/ts-client';\n\nimport { ZonesStateService } from './zones-state.service';\n\nimport { marked } from 'marked';\n\n@Component({\n    selector: 'zone-about',\n    template: `\n        <section class=\"mb-4 flex space-x-2\">\n            <div\n                class=\"rounded p-2 border border-gray-200 dark:border-neutral-500 space-y-2 w-1/3 flex-1 flex flex-col\"\n                *ngIf=\"(systems | async)?.length\"\n            >\n                <header\n                    class=\"font-medium text-lg\"\n                    *ngIf=\"(systems | async)?.length\"\n                    i18n=\"@@execHeader\"\n                >\n                    Execute Command\n                </header>\n                <mat-form-field appearance=\"outline\" class=\"h-12\">\n                    <mat-select\n                        [(ngModel)]=\"active_system\"\n                        placeholder=\"Select system\"\n                    >\n                        <mat-option\n                            *ngFor=\"let system of systems | async\"\n                            [value]=\"system\"\n                        >\n                            {{ system.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <execute-method-field\n                    *ngIf=\"active_system && active_system.id\"\n                    [system]=\"active_system\"\n                ></execute-method-field>\n            </div>\n            <div\n                class=\"rounded p-4 border border-gray-200 dark:border-neutral-500 space-y-2 w-1/3 flex-1 flex flex-col\"\n            >\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"item?.parent_id\"\n                >\n                    <label i18n=\"@@zoneParentLabel\">Parent ID:</label>\n                    <div class=\"value underline mono\">\n                        <a\n                            [routerLink]=\"['/zones', item?.parent_id, 'about']\"\n                            >{{ item?.parent_id }}</a\n                        >\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"item?.created_at\"\n                >\n                    <label i18n=\"@@zoneCreatedAtLabel\">Created:</label>\n                    <div class=\"value\">\n                        {{ item?.created_at * 1000 | dateFrom }}\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"item?.updated_at\"\n                >\n                    <label i18n=\"@@zoneUpdatedAtLabel\">Updated:</label>\n                    <div class=\"value\">\n                        {{ item?.updated_at * 1000 | dateFrom }}\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"item?.location\">\n                    <label i18n=\"@@zoneLocationLabel\">Location:</label>\n                    <div class=\"value\">{{ item?.location }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"item?.code\">\n                    <label i18n=\"@@zoneCodeLabel\">Code:</label>\n                    <div class=\"value\">{{ item?.code }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"item?.type\">\n                    <label i18n=\"@@zoneTypeLabel\">Type:&nbsp;</label>\n                    <div class=\"value\">{{ item?.type }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"item?.count\">\n                    <label i18n=\"@@zoneCountLabel\">Count:</label>\n                    <div class=\"value\">{{ item?.count }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"item?.capacity\">\n                    <label i18n=\"@@zoneCapacityLabel\">Capacity:</label>\n                    <div class=\"value\">{{ item?.capacity }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"item?.timezone\">\n                    <label i18n=\"@@zoneTimezoneLabel\">Timezone:</label>\n                    <div class=\"value\">{{ item?.timezone }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"item?.map_id\">\n                    <label i18n=\"@@zoneMapLabel\">Map:</label>\n                    <a class=\"underline\" [href]=\"item?.map_id\">{{\n                        item?.map_id\n                    }}</a>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"item?.tags\">\n                    <label class=\"my-1\" for=\"tags\" i18n=\"@@zoneTagsLabel\"\n                        >Tags:</label\n                    >\n                    <div\n                        class=\"value flex flex-wrap\"\n                        *ngIf=\"\n                            tag_list && tag_list.length;\n                            else empty_tag_state\n                        \"\n                    >\n                        <div\n                            *ngFor=\"let tag of tag_list\"\n                            class=\"mono text-xs px-3 py-2 m-2 bg-gray-200 dark:bg-neutral-500 rounded-2xl\"\n                        >\n                            {{ tag }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n        <header\n            class=\"font-medium text-lg\"\n            *ngIf=\"item?.description\"\n            i18n=\"@@descriptionLabel\"\n        >\n            Description\n        </header>\n        <section\n            class=\"description\"\n            *ngIf=\"item?.description\"\n            [innerHTML]=\"parsed_description\"\n        ></section>\n        <hr class=\"my-4\" />\n        <header class=\"font-medium text-lg\" i18n=\"@@settingsLabel\">\n            Settings\n        </header>\n        <section *ngIf=\"item?.settings; else load_state\">\n            <a-settings-form\n                [merge]=\"true\"\n                [id]=\"item?.id\"\n                [settings]=\"item?.settings\"\n            ></a-settings-form>\n        </section>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8\">\n                <mat-spinner class=\"mb-4\" diameter=\"48\"></mat-spinner>\n                <p i18n=\"@@zoneLoadingLabel\">Loading zone settings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_tag_state>\n            <p class=\"text-center py-1\" i18n=\"@@zoneTagsEmpty\">\n                &lt;No Tags&gt;\n            </p>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class ZoneAboutComponent {\n    /** List of associated systems */\n    public readonly systems = this._service.systems;\n    /** Selected system */\n    public active_system: PlaceSystem;\n\n    public get item(): PlaceZone {\n        return this._service.active_item as any;\n    }\n\n    public get parsed_description() {\n        return this.item ? marked(this.item?.description) : '';\n    }\n\n    /** List of tags associated with the zone */\n    public get tag_list(): string[] {\n        return this.item ? this.item?.tags : [];\n    }\n\n    constructor(private _service: ZonesStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { combineLatest, BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ZonesStateService } from './zones-state.service';\n\n@Component({\n    selector: 'zone-systems',\n    template: `\n        <div class=\"flex\">\n            <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                <app-icon\n                    matPrefix\n                    class=\"text-lg\"\n                    className=\"backoffice-magnifying-glass\"\n                ></app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"''\"\n                    (ngModelChange)=\"filter$.next($event)\"\n                    name=\"search-filter\"\n                    placeholder=\"Filter Systems\"\n                />\n            </mat-form-field>\n        </div>\n        <div role=\"table\" *ngIf=\"(systems | async)?.length; else empty_state\">\n            <div table-head>\n                <div class=\"flex-1 p-2\" i18n=\"@@systemTableName\">Name</div>\n                <div class=\"w-28 p-2\" i18n=\"@@systemTablePanelCount\">No. Modules</div>\n                <div class=\"w-32 p-2\" i18n=\"@@systemTableCreated\">Created</div>\n            </div>\n            <div table-body>\n                <div table-row *ngFor=\"let item of systems | async\">\n                    <div class=\"flex-1 p-2 underline\">\n                        <a\n                            [routerLink]=\"['/systems', item.id]\"\n                            [matTooltip]=\"item.id\"\n                            matTooltipPosition=\"right\"\n                        >\n                            {{ item.name }}\n                        </a>\n                    </div>\n                    <div class=\"w-28 p-2\">{{ item.modules.length }}</div>\n                    <div class=\"w-32 p-2\">{{ item?.created_at * 1000 | dateFrom }}</div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8\">\n                <p i18n=\"@@systemTableEmpty\">No systems found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class ZoneSystemsComponent {\n    public readonly filter$ = new BehaviorSubject<string>('');\n\n    public readonly systems = combineLatest([this.filter$, this._state.systems]).pipe(\n        map((details) => {\n            const [filter, systems] = details;\n            const search = filter.toLowerCase();\n            return !filter\n                ? systems\n                : systems.filter((sys) => sys.name.toLowerCase().includes(search));\n        })\n    );\n\n    constructor(private _state: ZonesStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { PlaceZone } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ZonesStateService } from './zones-state.service';\n\n@Component({\n    selector: 'zone-triggers',\n    template: `\n        <section class=\"flex items-center mb-4 space-x-2\">\n            <button btn style=\"min-width: 8rem\" (click)=\"selectTrigger()\">\n                Add Trigger\n            </button>\n            <mat-form-field appearance=\"outline\" class=\"h-12 flex-1\">\n                <app-icon\n                    matPrefix\n                    className=\"backoffice-magnifying-glass text-xl mr-2\"\n                ></app-icon>\n                <input\n                    [ngModel]=\"''\"\n                    (ngModelChange)=\"filter$.next($event)\"\n                    matInput\n                    placeholder=\"Filter triggers...\"\n                    class=\"rounded-none\"\n                />\n            </mat-form-field>\n        </section>\n        <section>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <div\n                    role=\"table\"\n                    class=\"overflow-x-auto\"\n                    *ngIf=\"(triggers | async)?.length; else empty_state\"\n                >\n                    <div table-head>\n                        <div flex class=\"flex-1 p-2\" i18n=\"@@nameLabel\">\n                            Name\n                        </div>\n                        <div class=\"w-28 p-2\" i18n=\"@@descriptionLabel\">\n                            Added\n                        </div>\n                        <div class=\"w-32 p-2\"></div>\n                    </div>\n                    <div table-body class=\"overflow-y-auto\">\n                        <div\n                            table-row\n                            *ngFor=\"\n                                let trigger of triggers | async;\n                                let i = index\n                            \"\n                        >\n                            <div flex class=\"flex-1 p-2\">\n                                <a\n                                    class=\"truncate\"\n                                    [routerLink]=\"['/triggers', trigger.id]\"\n                                    >{{ trigger.name }}</a\n                                >\n                            </div>\n                            <div desc class=\"w-28 p-2\">\n                                {{ +trigger.created_at * 1000 | dateFrom }}\n                            </div>\n                            <div class=\"w-32 p-2 items-center justify-center\">\n                                <button\n                                    btn\n                                    icon\n                                    (click)=\"deleteTrigger(trigger)\"\n                                >\n                                    <app-icon\n                                        className=\"backoffice-trash\"\n                                    ></app-icon>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n        </section>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 mx-auto\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>Loading triggers...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 mx-auto\">\n                <p>No triggers for zone</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class ZoneTriggersComponent {\n    public readonly filter$ = new BehaviorSubject<string>('');\n    /** List of triggers associated with the zone */\n    public readonly triggers = combineLatest([\n        this.filter$,\n        this._state.triggers,\n    ]).pipe(\n        map((details) => {\n            const [filter, systems] = details;\n            const search = filter.toLowerCase();\n            return !filter\n                ? systems\n                : systems.filter((sys) =>\n                      sys.name.toLowerCase().includes(search)\n                  );\n        })\n    );\n\n    public readonly loading = this._state.loading;\n\n    public readonly selectTrigger = () => this._state.selectTrigger();\n    public readonly deleteTrigger = (t) => this._state.removeTrigger(t);\n\n    public get item(): PlaceZone {\n        return this._state.active_item as any;\n    }\n\n    constructor(private _state: ZonesStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { PlaceZone } from '@placeos/ts-client';\nimport { combineLatest, BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ZonesStateService } from './zones-state.service';\n\n@Component({\n    selector: 'zone-children',\n    template: `\n        <div class=\"flex items-center\">\n            <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                <app-icon class=\"text-lg\" matPrefix className=\"backoffice-magnifying-glass\"></app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"''\"\n                    (ngModelChange)=\"filter$.next($event)\"\n                    name=\"search-filter\"\n                    placeholder=\"Filter Zones\"\n                    i18n-placeholder=\"@@zoneChildrenTableFilter\"\n                />\n            </mat-form-field>\n        </div>\n        <div role=\"table\" *ngIf=\"(children | async)?.length > 0; else empty_state\">\n            <div table-head>\n                <div class=\"flex-1 p-2\" i18n=\"@@zoneChildrenTableName\">Name</div>\n                <div class=\"w-3/5 p-2\" i18n=\"@@descriptionLabel\">Description</div>\n            </div>\n            <div table-body>\n                <div table-row *ngFor=\"let item of children | async\">\n                    <div class=\"flex-1 p-2 underline\">\n                        <a\n                            [routerLink]=\"['/zones', item.id]\"\n                            routerLinkActive=\"router-link-active\"\n                            [matTooltip]=\"item.id\"\n                        >\n                            {{ item.name }} (<span class=\"id\">{{ item.id }}</span\n                            >)\n                        </a>\n                    </div>\n                    <div class=\"w-3/5 p-2\">{{ item.description }}</div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8\" i18n=\"@@zoneChildrenTableEmpty\">\n                No child zones found\n            </div>\n        </ng-template>\n    `,\n    styles: [`\n        :host {\n            width: 100%;\n            height: 100%;\n        }\n    `],\n})\nexport class ZoneChildrenComponent {\n    public readonly filter$ = new BehaviorSubject<string>('');\n    /** List of triggers associated with the zone */\n    public readonly children = combineLatest([this.filter$, this._state.children]).pipe(\n        map((details) => {\n            const [filter, zones] = details;\n            const search = filter.toLowerCase();\n            return !filter ? zones : zones.filter((sys) => sys.name.toLowerCase().includes(search));\n        })\n    );\n\n    public readonly loading = this._state.loading;\n\n    public get item(): PlaceZone {\n        return this._state.active_item as any;\n    }\n\n    constructor(private _state: ZonesStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { PlaceZone } from '@placeos/ts-client';\nimport { ActiveItemService } from 'apps/backoffice/src/app/common/item.service';\n\n@Component({\n    selector: 'zone-metadata',\n    template: `\n        <metadata-display *ngIf=\"item\" [item]=\"item\"></metadata-display>\n    `,\n    styles: [``],\n})\nexport class ZoneMetadataComponent {\n    public get item(): PlaceZone {\n        return this._service.active_item as any;\n    }\n\n    constructor(private _service: ActiveItemService) {}\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { extensionsForItem } from '../common/api';\nimport { AsyncHandler } from '../common/base.class';\nimport { PlaceDebugService } from '../common/debug.service';\nimport { ActiveItemService } from '../common/item.service';\nimport { ZonesStateService } from './zones-state.service';\n\n@Component({\n    selector: 'new-zones-view',\n    template: `\n        <div\n            class=\"absolute inset-0 flex items-center divide-y sm:divide-y-0 sm:divide-x divide-gray-300 dark:divide-neutral-600 bg-white dark:bg-neutral-700\"\n        >\n            <sidebar-menu [(open)]=\"open_menu\" class=\"sm:h-full\"></sidebar-menu>\n            <div class=\"flex flex-col h-full flex-1 overflow-hidden w-px\">\n                <div class=\"flex flex-1 h-px\">\n                    <item-sidebar\n                        class=\"hidden sm:block\"\n                        [route]=\"name\"\n                        title=\"Zones\"\n                    ></item-sidebar>\n                    <div class=\"flex-1 w-1/2 h-full relative flex flex-col z-0\">\n                        <item-selection\n                            class=\"z-20 sm:hidden\"\n                            [route]=\"name\"\n                            title=\"Zones\"\n                        >\n                            <button\n                                btn\n                                icon\n                                class=\"sm:hidden mr-2\"\n                                (click)=\"open_menu = true\"\n                            >\n                                <app-icon\n                                    className=\"backoffice-menu\"\n                                ></app-icon>\n                            </button>\n                        </item-selection>\n                        <div class=\"flex flex-col flex-1 h-1/2\">\n                            <ng-container *ngIf=\"item?.id\">\n                                <item-details\n                                    [can_edit]=\"true\"\n                                    [item]=\"item\"\n                                    type=\"Zone\"\n                                ></item-details>\n                                <item-tablist\n                                    [base]=\"name\"\n                                    [tabs]=\"tab_list\"\n                                    [scrolled]=\"scroll > 0\"\n                                    class=\"z-10\"\n                                ></item-tablist>\n                                <div\n                                    #el\n                                    class=\"flex-1 h-1/2 w-full overflow-auto p-4 z-0 relative\"\n                                    (scroll)=\"scroll = el.scrollTop\"\n                                >\n                                    <router-outlet></router-outlet>\n                                </div>\n                            </ng-container>\n                        </div>\n                        <button\n                            class=\"absolute bottom-2 left-2 sm:-left-9 w-12 h-12 flex items-center justify-center bg-primary dark:bg-pink rounded-lg shadow z-30 text-white\"\n                            matTooltip=\"New zone\"\n                            matTooltipPosition=\"right\"\n                            matRipple\n                            (click)=\"newItem()\"\n                        >\n                            <app-icon\n                                [className]=\"'backoffice-plus'\"\n                                class=\"text-3xl\"\n                            ></app-icon>\n                        </button>\n                        <button\n                            class=\"absolute bottom-16 left-2 sm:-left-8 w-10 h-10 flex items-center justify-center bg-primary dark:bg-pink rounded-lg shadow z-30 text-white\"\n                            matTooltip=\"Bulk add zones\"\n                            matTooltipPosition=\"right\"\n                            matRipple\n                            (click)=\"bulkAdd()\"\n                        >\n                            <app-icon class=\"text-2xl\">playlist_add</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <app-debug-output\n                    below\n                    *ngIf=\"debug_position === 'below'\"\n                ></app-debug-output>\n            </div>\n            <app-debug-output\n                side\n                *ngIf=\"debug_position === 'side'\"\n                class=\"h-full max-w-[30rem]\"\n            ></app-debug-output>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ZonesComponent extends AsyncHandler {\n    public readonly name = 'zones';\n    public open_menu = false;\n\n    public tab_list = [];\n\n    public readonly newItem = () => this._item.create();\n    public readonly bulkAdd = () => this._item.bulkAdd();\n\n    public get item() {\n        return this._service.active_item;\n    }\n\n    public get extensions() {\n        return extensionsForItem(this._service.active_item, this.name);\n    }\n\n    public get debug_position() {\n        return this._debug.position;\n    }\n\n    public updateTabList(details: Record<string, number>) {\n        this.tab_list = [\n            {\n                id: 'about',\n                name: 'About',\n                icon: { class: 'backoffice-info-with-circle' },\n            },\n            {\n                id: 'systems',\n                name: 'Systems',\n                count: details.systems ?? '?',\n                icon: { class: 'backoffice-documents' },\n            },\n            {\n                id: 'triggers',\n                name: 'Triggers',\n                count: details.triggers ?? '?',\n                icon: { class: 'backoffice-stopwatch' },\n            },\n            {\n                id: 'metadata',\n                name: 'Metadata',\n                count: details.metadata ?? '?',\n                icon: { class: 'backoffice-gist' },\n            },\n            {\n                id: 'children',\n                name: 'Children',\n                count: details.children ?? '?',\n                icon: { class: 'backoffice-flow-tree' },\n            },\n            {\n                id: 'history',\n                name: 'Settings History',\n                icon: { class: 'backoffice-clock' },\n            },\n        ].concat(this.extensions);\n    }\n\n    constructor(\n        protected _service: ZonesStateService,\n        protected _item: ActiveItemService,\n        protected _route: ActivatedRoute,\n        protected _router: Router,\n        private _debug: PlaceDebugService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item-change',\n            this._item.active_item$.subscribe(() => this.updateTabList({}))\n        );\n        this.subscription(\n            'item',\n            this._service.counts.subscribe((details) =>\n                this.updateTabList(details)\n            )\n        );\n    }\n}\n","import { Routes } from '@angular/router';\n\nimport { ZoneAboutComponent } from './zone-about.component';\nimport { ZoneSystemsComponent } from './zone-systems.component';\nimport { ZoneTriggersComponent } from './zone-triggers.component';\nimport { ZoneChildrenComponent } from './zone-children.component';\nimport { ZoneMetadataComponent } from './zone-metadata.component';\nimport { ExtensionOutletComponent } from '../ui/extension-outlet.component';\nimport { SettingsHistoryViewComponent } from '../ui/settings-history-view.component';\nimport { ZonesComponent } from './zones.component';\n\nexport const ROUTES: Routes = [\n    {\n        path: ':id',\n        component: ZonesComponent,\n        children: [\n            { path: 'about', component: ZoneAboutComponent },\n            { path: 'systems', component: ZoneSystemsComponent },\n            { path: 'triggers', component: ZoneTriggersComponent },\n            { path: 'children', component: ZoneChildrenComponent },\n            { path: 'metadata', component: ZoneMetadataComponent },\n            { path: 'extend/:id', component: ExtensionOutletComponent },\n            { path: 'history', component: SettingsHistoryViewComponent },\n            { path: '**', redirectTo: 'about' },\n        ],\n    },\n    { path: '**', redirectTo: '-' },\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ROUTES } from './zones.routes';\nimport { SharedContentModule } from 'apps/backoffice/src/app/ui/ui.module';\n\nimport { ZoneAboutComponent } from './zone-about.component';\nimport { ZoneSystemsComponent } from './zone-systems.component';\nimport { ZoneTriggersComponent } from './zone-triggers.component';\nimport { ZoneChildrenComponent } from './zone-children.component';\nimport { ZoneMetadataComponent } from './zone-metadata.component';\nimport { ZonesComponent } from './zones.component';\n\n@NgModule({\n    declarations: [\n        ZoneAboutComponent,\n        ZoneSystemsComponent,\n        ZoneTriggersComponent,\n        ZoneChildrenComponent,\n        ZoneMetadataComponent,\n        ZonesComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n    ],\n})\nexport class AppZonesModule {}\n"],"x_google_ignoreList":[]}