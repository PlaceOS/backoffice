{"version":3,"file":"polyfills.06fbf6d3fdf7d3e7.js","mappings":"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AY,UAAW,UAC1E,oBAEEC,GAAqB,CAAC,gBAAiB,WAAY,QAAS,UAAW,QAAS,UAAW,gBAAiB,SAC5GC,GAAsB,CAAC,QAAS,QAAS,OAAQ,WACjDC,GAAmB,CAAC,QAAS,WAC7BC,GApNgC,CAClC,QACA,kBACA,eACA,qBACA,WACA,cACA,OACA,SACA,UACA,iBACA,SACA,mBACA,oBACA,iBACA,YACA,QACA,QACA,cACA,aACA,WACA,OACA,UACA,YACA,WACA,YACA,WACA,OACA,iBACA,UACA,QACA,QACA,QACA,UACA,WACA,oBACA,QACA,UACA,UACA,WACA,QACA,OACA,YACA,aACA,iBACA,qBACA,YACA,aACA,aACA,YACA,WACA,YACA,UACA,aACA,oBACA,QACA,OACA,UACA,gBACA,cACA,eACA,eACA,oBACA,uBACA,4BACA,mBACA,sBACA,yBACA,cACA,WACA,cACA,YACA,WACA,aACA,QACA,SACA,SACA,SACA,UACA,SACA,kBACA,cACA,OACA,OACA,UACA,SACA,UACA,aACA,eACA,cACA,YACA,aACA,WACA,mBACA,gBACA,UACA,SAoH6ClB,OAbzB,CAAC,uBAAwB,mBAAoB,6BAC9C,CAAC,eAAgB,qBACf,CAAC,UAvGC,CACvB,qBAAsB,sBAAuB,mBAAoB,SAAU,mBAC3E,sBAAuB,yBAA0B,qBAAsB,kBACvE,qBAAsB,wBAAyB,oBAAqB,mBACpE,mBAAoB,UA8GuGS,GA5EjG,CAC1B,aAAc,YAAa,cAAe,OAAQ,MAAO,QAAS,YAAa,UAC/E,iBAAkB,SAAU,gBAAiB,kBAAmB,qBAChE,2BAA4B,uBAAwB,uBAG5B,CACxB,WACA,cACA,cACA,iBACA,mBACA,kBACA,eACA,aACA,gBACA,gBACA,iBACA,kBACA,cACA,eACA,iBACA,cACA,OACA,UACA,YACA,iBACA,YACA,cACA,WACA,UACA,aACA,eACA,UACA,0BACA,aACA,OACA,gBACA,6BACA,kBACA,qBACA,eACA,gBACA,iBACA,eACA,sBACA,iBACA,uBACA,kBACA,gBACA,iBACA,iBACA,iBACA,gBACA,eACA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","names":["Error","$localize$1","messageParts","expressions","translate","translation","message","stripBlock","raw","i","length","messagePart","rawMessagePart","charAt","substring","cooked","cookedIndex","rawIndex","findEndOfBlock","globalThis","global","window","self","WorkerGlobalScope","ɵ_global","ɵ$localize","performance","name","mark","label","measure","symbolPrefix","__Zone_symbol_prefix","checkDuplicate","__symbol__","Zone","constructor","parent","zoneSpec","this","_parent","_name","_properties","properties","_zoneDelegate","ZoneDelegate","static","Promise","patches","ZoneAwarePromise","root","zone","current","_currentZoneFrame","currentTask","_currentTask","fn","ignoreDuplicate","hasOwnProperty","perfName","_api","performanceMeasure","get","key","getZoneWith","fork","wrap","callback","source","_callback","intercept","runGuarded","arguments","run","applyThis","applyArgs","invoke","error","handleError","runTask","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","scheduleTask","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","err","scheduleMicroTask","customSchedule","ZoneTask","microTask","scheduleMacroTask","customCancel","scheduleEventTask","cancelTask","canceling","count","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","apply","returnTask","push","scheduleFn","value","isEmpty","counts","prev","next","change","options","_state","useG","call","args","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","toString","handleId","Object","prototype","toJSON","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","resolve","nativeThen","then","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","zoneSymbol","isWindowExists","internalWindow","_global","NULL_ON_PROP_VALUE","propertyDesc","writable","set","isWebWorker","isNode","process","isBrowser","HTMLElement","isMix","zoneSymbolEventNames","wrapFn","event","eventNameSymbol","listener","result","errorEvent","filename","lineno","colno","preventDefault","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","substr","newValue","previousValue","removeEventListener","addEventListener","REMOVE_ATTRIBUTE","removeAttribute","patchProperty","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","isPropertyWritable","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","scheduleMacroTaskWithCurrentZone","patched","original","isDetectedIEOrEdge","ieOrEdge","ua","navigator","userAgent","indexOf","__load_patch","api","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","e","rejection","console","stack","uncaughtPromiseError","shift","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","promise","v","resolvePromise","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","wasCalled","wrappedFunction","once","TypeError","clearRejectedNoCatch","makeResolver","trace","creationTrace","scheduleResolveOrReject","JSON","stringify","readableObjectToString","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","forwardResolution","forwardRejection","parentPromiseValue","isFinallyPromise","values","res","rej","isThenable","onResolve","onReject","allWithCallback","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","toStringTag","Symbol","species","C","catch","finally","onFinally","race","all","NativePromise","symbolThenPatched","Ctor","originalThen","wrapped","resultPromise","ctor","zoneify","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames$1","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","globalZoneAwareCallback","tasks","copyTasks","globalZoneAwareCaptureCallback","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","passive","capture","assign","prepend","isExisting","symbolEventNames","symbolEventName","existingTasks","existingTask","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","buildEventListenerOptions","it","prepareEventNames","constructorName","targetSource","K","unshift","PREPEND_EVENT_LISTENER","L","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","patchEventTargetMethods","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","windowEventNames","mediaElementEventNames","frameEventNames","frameSetEventNames","marqueeEventNames","XMLHttpRequestEventNames","IDBIndexEventNames","websocketEventNames","workerEventNames","eventNames","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","taskSymbol","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","delay","clearTask","handle","ref","unref","bind","id","pe","legacyPatch","clear","patchTimer","blockingMethods","s","patchEvent","EVENT_TARGET","EventTarget","eventTargetPatch","XMLHttpRequestEventTarget","supportsWebSocket","WebSocket","__Zone_ignore_on_properties","ignoreErrorProperties","isIE","patchFilteredProperties","Document","SVGElement","Element","HTMLMediaElement","HTMLFrameSetElement","HTMLBodyElement","HTMLFrameElement","HTMLIFrameElement","HTMLMarqueeElement","Worker","XMLHttpRequest","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","propertyDescriptorPatch","customElements","patchCustomElements","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","storedTask","XHR_TASK","sendNative","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","placeholderCallback","findPendingTask","patchXHR","geolocation","fnNames","patchPrototype","PromiseRejectionEvent","evt","findPromiseRejectionHandler"],"sourceRoot":"webpack:///","sources":["./node_modules/@angular/localize/fesm2020/localize.mjs","./node_modules/@angular/localize/fesm2020/init.mjs","./node_modules/zone.js/fesm2015/zone.js"],"sourcesContent":["/**\n * @license Angular v14.0.7\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { computeMsgId } from '@angular/compiler';\nexport { computeMsgId as ɵcomputeMsgId } from '@angular/compiler';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The character used to mark the start and end of a \"block\" in a `$localize` tagged string.\n * A block can indicate metadata about the message or specify a name of a placeholder for a\n * substitution expressions.\n *\n * For example:\n *\n * ```ts\n * $localize`Hello, ${title}:title:!`;\n * $localize`:meaning|description@@id:source message text`;\n * ```\n */\nconst BLOCK_MARKER$1 = ':';\n/**\n * The marker used to separate a message's \"meaning\" from its \"description\" in a metadata block.\n *\n * For example:\n *\n * ```ts\n * $localize `:correct|Indicates that the user got the answer correct: Right!`;\n * $localize `:movement|Button label for moving to the right: Right!`;\n * ```\n */\nconst MEANING_SEPARATOR = '|';\n/**\n * The marker used to separate a message's custom \"id\" from its \"description\" in a metadata block.\n *\n * For example:\n *\n * ```ts\n * $localize `:A welcome message on the home page@@myApp-homepage-welcome: Welcome!`;\n * ```\n */\nconst ID_SEPARATOR = '@@';\n/**\n * The marker used to separate legacy message ids from the rest of a metadata block.\n *\n * For example:\n *\n * ```ts\n * $localize `:@@custom-id␟2df64767cd895a8fabe3e18b94b5b6b6f9e2e3f0: Welcome!`;\n * ```\n *\n * Note that this character is the \"symbol for the unit separator\" (␟) not the \"unit separator\n * character\" itself, since that has no visual representation. See https://graphemica.com/%E2%90%9F.\n *\n * Here is some background for the original \"unit separator character\":\n * https://stackoverflow.com/questions/8695118/whats-the-file-group-record-unit-separator-control-characters-and-its-usage\n */\nconst LEGACY_ID_INDICATOR = '\\u241F';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Parse a `$localize` tagged string into a structure that can be used for translation or\n * extraction.\n *\n * See `ParsedMessage` for an example.\n */\nfunction parseMessage(messageParts, expressions, location, messagePartLocations, expressionLocations = []) {\n    const substitutions = {};\n    const substitutionLocations = {};\n    const associatedMessageIds = {};\n    const metadata = parseMetadata(messageParts[0], messageParts.raw[0]);\n    const cleanedMessageParts = [metadata.text];\n    const placeholderNames = [];\n    let messageString = metadata.text;\n    for (let i = 1; i < messageParts.length; i++) {\n        const { messagePart, placeholderName = computePlaceholderName(i), associatedMessageId } = parsePlaceholder(messageParts[i], messageParts.raw[i]);\n        messageString += `{$${placeholderName}}${messagePart}`;\n        if (expressions !== undefined) {\n            substitutions[placeholderName] = expressions[i - 1];\n            substitutionLocations[placeholderName] = expressionLocations[i - 1];\n        }\n        placeholderNames.push(placeholderName);\n        if (associatedMessageId !== undefined) {\n            associatedMessageIds[placeholderName] = associatedMessageId;\n        }\n        cleanedMessageParts.push(messagePart);\n    }\n    const messageId = metadata.customId || computeMsgId(messageString, metadata.meaning || '');\n    const legacyIds = metadata.legacyIds ? metadata.legacyIds.filter(id => id !== messageId) : [];\n    return {\n        id: messageId,\n        legacyIds,\n        substitutions,\n        substitutionLocations,\n        text: messageString,\n        customId: metadata.customId,\n        meaning: metadata.meaning || '',\n        description: metadata.description || '',\n        messageParts: cleanedMessageParts,\n        messagePartLocations,\n        placeholderNames,\n        associatedMessageIds,\n        location,\n    };\n}\n/**\n * Parse the given message part (`cooked` + `raw`) to extract the message metadata from the text.\n *\n * If the message part has a metadata block this function will extract the `meaning`,\n * `description`, `customId` and `legacyId` (if provided) from the block. These metadata properties\n * are serialized in the string delimited by `|`, `@@` and `␟` respectively.\n *\n * (Note that `␟` is the `LEGACY_ID_INDICATOR` - see `constants.ts`.)\n *\n * For example:\n *\n * ```ts\n * `:meaning|description@@custom-id:`\n * `:meaning|@@custom-id:`\n * `:meaning|description:`\n * `:description@@custom-id:`\n * `:meaning|:`\n * `:description:`\n * `:@@custom-id:`\n * `:meaning|description@@custom-id␟legacy-id-1␟legacy-id-2:`\n * ```\n *\n * @param cooked The cooked version of the message part to parse.\n * @param raw The raw version of the message part to parse.\n * @returns A object containing any metadata that was parsed from the message part.\n */\nfunction parseMetadata(cooked, raw) {\n    const { text: messageString, block } = splitBlock(cooked, raw);\n    if (block === undefined) {\n        return { text: messageString };\n    }\n    else {\n        const [meaningDescAndId, ...legacyIds] = block.split(LEGACY_ID_INDICATOR);\n        const [meaningAndDesc, customId] = meaningDescAndId.split(ID_SEPARATOR, 2);\n        let [meaning, description] = meaningAndDesc.split(MEANING_SEPARATOR, 2);\n        if (description === undefined) {\n            description = meaning;\n            meaning = undefined;\n        }\n        if (description === '') {\n            description = undefined;\n        }\n        return { text: messageString, meaning, description, customId, legacyIds };\n    }\n}\n/**\n * Parse the given message part (`cooked` + `raw`) to extract any placeholder metadata from the\n * text.\n *\n * If the message part has a metadata block this function will extract the `placeholderName` and\n * `associatedMessageId` (if provided) from the block.\n *\n * These metadata properties are serialized in the string delimited by `@@`.\n *\n * For example:\n *\n * ```ts\n * `:placeholder-name@@associated-id:`\n * ```\n *\n * @param cooked The cooked version of the message part to parse.\n * @param raw The raw version of the message part to parse.\n * @returns A object containing the metadata (`placeholderName` and `associatedMesssageId`) of the\n *     preceding placeholder, along with the static text that follows.\n */\nfunction parsePlaceholder(cooked, raw) {\n    const { text: messagePart, block } = splitBlock(cooked, raw);\n    if (block === undefined) {\n        return { messagePart };\n    }\n    else {\n        const [placeholderName, associatedMessageId] = block.split(ID_SEPARATOR);\n        return { messagePart, placeholderName, associatedMessageId };\n    }\n}\n/**\n * Split a message part (`cooked` + `raw`) into an optional delimited \"block\" off the front and the\n * rest of the text of the message part.\n *\n * Blocks appear at the start of message parts. They are delimited by a colon `:` character at the\n * start and end of the block.\n *\n * If the block is in the first message part then it will be metadata about the whole message:\n * meaning, description, id.  Otherwise it will be metadata about the immediately preceding\n * substitution: placeholder name.\n *\n * Since blocks are optional, it is possible that the content of a message block actually starts\n * with a block marker. In this case the marker must be escaped `\\:`.\n *\n * @param cooked The cooked version of the message part to parse.\n * @param raw The raw version of the message part to parse.\n * @returns An object containing the `text` of the message part and the text of the `block`, if it\n * exists.\n * @throws an error if the `block` is unterminated\n */\nfunction splitBlock(cooked, raw) {\n    if (raw.charAt(0) !== BLOCK_MARKER$1) {\n        return { text: cooked };\n    }\n    else {\n        const endOfBlock = findEndOfBlock(cooked, raw);\n        return {\n            block: cooked.substring(1, endOfBlock),\n            text: cooked.substring(endOfBlock + 1),\n        };\n    }\n}\nfunction computePlaceholderName(index) {\n    return index === 1 ? 'PH' : `PH_${index - 1}`;\n}\n/**\n * Find the end of a \"marked block\" indicated by the first non-escaped colon.\n *\n * @param cooked The cooked string (where escaped chars have been processed)\n * @param raw The raw string (where escape sequences are still in place)\n *\n * @returns the index of the end of block marker\n * @throws an error if the block is unterminated\n */\nfunction findEndOfBlock(cooked, raw) {\n    for (let cookedIndex = 1, rawIndex = 1; cookedIndex < cooked.length; cookedIndex++, rawIndex++) {\n        if (raw[rawIndex] === '\\\\') {\n            rawIndex++;\n        }\n        else if (cooked[cookedIndex] === BLOCK_MARKER$1) {\n            return cookedIndex;\n        }\n    }\n    throw new Error(`Unterminated $localize metadata block in \"${raw}\".`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MissingTranslationError extends Error {\n    constructor(parsedMessage) {\n        super(`No translation found for ${describeMessage(parsedMessage)}.`);\n        this.parsedMessage = parsedMessage;\n        this.type = 'MissingTranslationError';\n    }\n}\nfunction isMissingTranslationError(e) {\n    return e.type === 'MissingTranslationError';\n}\n/**\n * Translate the text of the `$localize` tagged-string (i.e. `messageParts` and\n * `substitutions`) using the given `translations`.\n *\n * The tagged-string is parsed to extract its `messageId` which is used to find an appropriate\n * `ParsedTranslation`. If this doesn't match and there are legacy ids then try matching a\n * translation using those.\n *\n * If one is found then it is used to translate the message into a new set of `messageParts` and\n * `substitutions`.\n * The translation may reorder (or remove) substitutions as appropriate.\n *\n * If there is no translation with a matching message id then an error is thrown.\n * If a translation contains a placeholder that is not found in the message being translated then an\n * error is thrown.\n */\nfunction translate$1(translations, messageParts, substitutions) {\n    const message = parseMessage(messageParts, substitutions);\n    // Look up the translation using the messageId, and then the legacyId if available.\n    let translation = translations[message.id];\n    // If the messageId did not match a translation, try matching the legacy ids instead\n    if (message.legacyIds !== undefined) {\n        for (let i = 0; i < message.legacyIds.length && translation === undefined; i++) {\n            translation = translations[message.legacyIds[i]];\n        }\n    }\n    if (translation === undefined) {\n        throw new MissingTranslationError(message);\n    }\n    return [\n        translation.messageParts, translation.placeholderNames.map(placeholder => {\n            if (message.substitutions.hasOwnProperty(placeholder)) {\n                return message.substitutions[placeholder];\n            }\n            else {\n                throw new Error(`There is a placeholder name mismatch with the translation provided for the message ${describeMessage(message)}.\\n` +\n                    `The translation contains a placeholder with name ${placeholder}, which does not exist in the message.`);\n            }\n        })\n    ];\n}\n/**\n * Parse the `messageParts` and `placeholderNames` out of a target `message`.\n *\n * Used by `loadTranslations()` to convert target message strings into a structure that is more\n * appropriate for doing translation.\n *\n * @param message the message to be parsed.\n */\nfunction parseTranslation(messageString) {\n    const parts = messageString.split(/{\\$([^}]*)}/);\n    const messageParts = [parts[0]];\n    const placeholderNames = [];\n    for (let i = 1; i < parts.length - 1; i += 2) {\n        placeholderNames.push(parts[i]);\n        messageParts.push(`${parts[i + 1]}`);\n    }\n    const rawMessageParts = messageParts.map(part => part.charAt(0) === BLOCK_MARKER$1 ? '\\\\' + part : part);\n    return {\n        text: messageString,\n        messageParts: makeTemplateObject(messageParts, rawMessageParts),\n        placeholderNames,\n    };\n}\n/**\n * Create a `ParsedTranslation` from a set of `messageParts` and `placeholderNames`.\n *\n * @param messageParts The message parts to appear in the ParsedTranslation.\n * @param placeholderNames The names of the placeholders to intersperse between the `messageParts`.\n */\nfunction makeParsedTranslation(messageParts, placeholderNames = []) {\n    let messageString = messageParts[0];\n    for (let i = 0; i < placeholderNames.length; i++) {\n        messageString += `{$${placeholderNames[i]}}${messageParts[i + 1]}`;\n    }\n    return {\n        text: messageString,\n        messageParts: makeTemplateObject(messageParts, messageParts),\n        placeholderNames\n    };\n}\n/**\n * Create the specialized array that is passed to tagged-string tag functions.\n *\n * @param cooked The message parts with their escape codes processed.\n * @param raw The message parts with their escaped codes as-is.\n */\nfunction makeTemplateObject(cooked, raw) {\n    Object.defineProperty(cooked, 'raw', { value: raw });\n    return cooked;\n}\nfunction describeMessage(message) {\n    const meaningString = message.meaning && ` - \"${message.meaning}\"`;\n    const legacy = message.legacyIds && message.legacyIds.length > 0 ?\n        ` [${message.legacyIds.map(l => `\"${l}\"`).join(', ')}]` :\n        '';\n    return `\"${message.id}\"${legacy} (\"${message.text}\"${meaningString})`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Load translations for use by `$localize`, if doing runtime translation.\n *\n * If the `$localize` tagged strings are not going to be replaced at compiled time, it is possible\n * to load a set of translations that will be applied to the `$localize` tagged strings at runtime,\n * in the browser.\n *\n * Loading a new translation will overwrite a previous translation if it has the same `MessageId`.\n *\n * Note that `$localize` messages are only processed once, when the tagged string is first\n * encountered, and does not provide dynamic language changing without refreshing the browser.\n * Loading new translations later in the application life-cycle will not change the translated text\n * of messages that have already been translated.\n *\n * The message IDs and translations are in the same format as that rendered to \"simple JSON\"\n * translation files when extracting messages. In particular, placeholders in messages are rendered\n * using the `{$PLACEHOLDER_NAME}` syntax. For example the message from the following template:\n *\n * ```html\n * <div i18n>pre<span>inner-pre<b>bold</b>inner-post</span>post</div>\n * ```\n *\n * would have the following form in the `translations` map:\n *\n * ```ts\n * {\n *   \"2932901491976224757\":\n *      \"pre{$START_TAG_SPAN}inner-pre{$START_BOLD_TEXT}bold{$CLOSE_BOLD_TEXT}inner-post{$CLOSE_TAG_SPAN}post\"\n * }\n * ```\n *\n * @param translations A map from message ID to translated message.\n *\n * These messages are processed and added to a lookup based on their `MessageId`.\n *\n * @see `clearTranslations()` for removing translations loaded using this function.\n * @see `$localize` for tagging messages as needing to be translated.\n * @publicApi\n */\nfunction loadTranslations(translations) {\n    // Ensure the translate function exists\n    if (!$localize.translate) {\n        $localize.translate = translate;\n    }\n    if (!$localize.TRANSLATIONS) {\n        $localize.TRANSLATIONS = {};\n    }\n    Object.keys(translations).forEach(key => {\n        $localize.TRANSLATIONS[key] = parseTranslation(translations[key]);\n    });\n}\n/**\n * Remove all translations for `$localize`, if doing runtime translation.\n *\n * All translations that had been loading into memory using `loadTranslations()` will be removed.\n *\n * @see `loadTranslations()` for loading translations at runtime.\n * @see `$localize` for tagging messages as needing to be translated.\n *\n * @publicApi\n */\nfunction clearTranslations() {\n    $localize.translate = undefined;\n    $localize.TRANSLATIONS = {};\n}\n/**\n * Translate the text of the given message, using the loaded translations.\n *\n * This function may reorder (or remove) substitutions as indicated in the matching translation.\n */\nfunction translate(messageParts, substitutions) {\n    try {\n        return translate$1($localize.TRANSLATIONS, messageParts, substitutions);\n    }\n    catch (e) {\n        console.warn(e.message);\n        return [messageParts, substitutions];\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Always use __globalThis if available, which is the spec-defined global variable across all\n// environments, then fallback to __global first, because in Node tests both __global and\n// __window may be defined and _global should be __global in that case. Note: Typeof/Instanceof\n// checks are considered side-effects in Terser. We explicitly mark this as side-effect free:\n// https://github.com/terser/terser/issues/250.\nconst _global = ( /* @__PURE__ */(() => (typeof globalThis !== 'undefined' && globalThis) ||\n    (typeof global !== 'undefined' && global) || (typeof window !== 'undefined' && window) ||\n    (typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self))());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Tag a template literal string for localization.\n *\n * For example:\n *\n * ```ts\n * $localize `some string to localize`\n * ```\n *\n * **Providing meaning, description and id**\n *\n * You can optionally specify one or more of `meaning`, `description` and `id` for a localized\n * string by pre-pending it with a colon delimited block of the form:\n *\n * ```ts\n * $localize`:meaning|description@@id:source message text`;\n *\n * $localize`:meaning|:source message text`;\n * $localize`:description:source message text`;\n * $localize`:@@id:source message text`;\n * ```\n *\n * This format is the same as that used for `i18n` markers in Angular templates. See the\n * [Angular i18n guide](guide/i18n-common-prepare#mark-text-in-component-template).\n *\n * **Naming placeholders**\n *\n * If the template literal string contains expressions, then the expressions will be automatically\n * associated with placeholder names for you.\n *\n * For example:\n *\n * ```ts\n * $localize `Hi ${name}! There are ${items.length} items.`;\n * ```\n *\n * will generate a message-source of `Hi {$PH}! There are {$PH_1} items`.\n *\n * The recommended practice is to name the placeholder associated with each expression though.\n *\n * Do this by providing the placeholder name wrapped in `:` characters directly after the\n * expression. These placeholder names are stripped out of the rendered localized string.\n *\n * For example, to name the `items.length` expression placeholder `itemCount` you write:\n *\n * ```ts\n * $localize `There are ${items.length}:itemCount: items`;\n * ```\n *\n * **Escaping colon markers**\n *\n * If you need to use a `:` character directly at the start of a tagged string that has no\n * metadata block, or directly after a substitution expression that has no name you must escape\n * the `:` by preceding it with a backslash:\n *\n * For example:\n *\n * ```ts\n * // message has a metadata block so no need to escape colon\n * $localize `:some description::this message starts with a colon (:)`;\n * // no metadata block so the colon must be escaped\n * $localize `\\:this message starts with a colon (:)`;\n * ```\n *\n * ```ts\n * // named substitution so no need to escape colon\n * $localize `${label}:label:: ${}`\n * // anonymous substitution so colon must be escaped\n * $localize `${label}\\: ${}`\n * ```\n *\n * **Processing localized strings:**\n *\n * There are three scenarios:\n *\n * * **compile-time inlining**: the `$localize` tag is transformed at compile time by a\n * transpiler, removing the tag and replacing the template literal string with a translated\n * literal string from a collection of translations provided to the transpilation tool.\n *\n * * **run-time evaluation**: the `$localize` tag is a run-time function that replaces and\n * reorders the parts (static strings and expressions) of the template literal string with strings\n * from a collection of translations loaded at run-time.\n *\n * * **pass-through evaluation**: the `$localize` tag is a run-time function that simply evaluates\n * the original template literal string without applying any translations to the parts. This\n * version is used during development or where there is no need to translate the localized\n * template literals.\n *\n * @param messageParts a collection of the static parts of the template string.\n * @param expressions a collection of the values of each placeholder in the template string.\n * @returns the translated string, with the `messageParts` and `expressions` interleaved together.\n *\n * @globalApi\n * @publicApi\n */\nconst $localize$1 = function (messageParts, ...expressions) {\n    if ($localize$1.translate) {\n        // Don't use array expansion here to avoid the compiler adding `__read()` helper unnecessarily.\n        const translation = $localize$1.translate(messageParts, expressions);\n        messageParts = translation[0];\n        expressions = translation[1];\n    }\n    let message = stripBlock(messageParts[0], messageParts.raw[0]);\n    for (let i = 1; i < messageParts.length; i++) {\n        message += expressions[i - 1] + stripBlock(messageParts[i], messageParts.raw[i]);\n    }\n    return message;\n};\nconst BLOCK_MARKER = ':';\n/**\n * Strip a delimited \"block\" from the start of the `messagePart`, if it is found.\n *\n * If a marker character (:) actually appears in the content at the start of a tagged string or\n * after a substitution expression, where a block has not been provided the character must be\n * escaped with a backslash, `\\:`. This function checks for this by looking at the `raw`\n * messagePart, which should still contain the backslash.\n *\n * @param messagePart The cooked message part to process.\n * @param rawMessagePart The raw message part to check.\n * @returns the message part with the placeholder name stripped, if found.\n * @throws an error if the block is unterminated\n */\nfunction stripBlock(messagePart, rawMessagePart) {\n    return rawMessagePart.charAt(0) === BLOCK_MARKER ?\n        messagePart.substring(findEndOfBlock(messagePart, rawMessagePart) + 1) :\n        messagePart;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { clearTranslations, loadTranslations, $localize$1 as ɵ$localize, MissingTranslationError as ɵMissingTranslationError, _global as ɵ_global, findEndOfBlock as ɵfindEndOfBlock, isMissingTranslationError as ɵisMissingTranslationError, makeParsedTranslation as ɵmakeParsedTranslation, makeTemplateObject as ɵmakeTemplateObject, parseMessage as ɵparseMessage, parseMetadata as ɵparseMetadata, parseTranslation as ɵparseTranslation, splitBlock as ɵsplitBlock, translate$1 as ɵtranslate };\n","/**\n * @license Angular v14.0.7\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵ_global, ɵ$localize } from '@angular/localize';\nexport { ɵ$localize as $localize } from '@angular/localize';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attach $localize to the global context, as a side-effect of this module.\nɵ_global.$localize = ɵ$localize;\n","'use strict';\n/**\n * @license Angular v12.0.0-next.0\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst Zone$1 = (function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            if (!nativeMicroTaskQueuePromise) {\n                if (global[symbolPromise]) {\n                    nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                }\n            }\n            if (nativeMicroTaskQueuePromise) {\n                let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                if (!nativeThen) {\n                    // native Promise is not patchable, we need to use `then` directly\n                    // issue 1078\n                    nativeThen = nativeMicroTaskQueuePromise['then'];\n                }\n                nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n            }\n            else {\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n            }\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n})(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nconst NULL_ON_PROP_VALUE = [null];\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signiture\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // substr(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.substr(2);\n    let eventNameSymbol = zoneSymbolEventNames[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        let previousValue = target[eventNameSymbol];\n        if (previousValue) {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        if (originalDescSet) {\n            originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n        }\n        if (typeof newValue === 'function') {\n            target[eventNameSymbol] = newValue;\n            target.addEventListener(eventName, wrapFn, false);\n        }\n        else {\n            target[eventNameSymbol] = null;\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet && originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.substr(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected : forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames$1 = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames$1[eventName] = {};\n    zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        task.invoke(task, target, [event]);\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return Object.assign(Object.assign({}, options), { passive: true });\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check upatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames$1[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames$1[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames$1[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames$1[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                if (prototype.hasOwnProperty(callback)) {\n                    const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                    if (descriptor && descriptor.value) {\n                        descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                        api._redefineProperty(opts.prototype, callback, descriptor);\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                else if (prototype[callback]) {\n                    prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst globalEventHandlersEventNames = [\n    'abort',\n    'animationcancel',\n    'animationend',\n    'animationiteration',\n    'auxclick',\n    'beforeinput',\n    'blur',\n    'cancel',\n    'canplay',\n    'canplaythrough',\n    'change',\n    'compositionstart',\n    'compositionupdate',\n    'compositionend',\n    'cuechange',\n    'click',\n    'close',\n    'contextmenu',\n    'curechange',\n    'dblclick',\n    'drag',\n    'dragend',\n    'dragenter',\n    'dragexit',\n    'dragleave',\n    'dragover',\n    'drop',\n    'durationchange',\n    'emptied',\n    'ended',\n    'error',\n    'focus',\n    'focusin',\n    'focusout',\n    'gotpointercapture',\n    'input',\n    'invalid',\n    'keydown',\n    'keypress',\n    'keyup',\n    'load',\n    'loadstart',\n    'loadeddata',\n    'loadedmetadata',\n    'lostpointercapture',\n    'mousedown',\n    'mouseenter',\n    'mouseleave',\n    'mousemove',\n    'mouseout',\n    'mouseover',\n    'mouseup',\n    'mousewheel',\n    'orientationchange',\n    'pause',\n    'play',\n    'playing',\n    'pointercancel',\n    'pointerdown',\n    'pointerenter',\n    'pointerleave',\n    'pointerlockchange',\n    'mozpointerlockchange',\n    'webkitpointerlockerchange',\n    'pointerlockerror',\n    'mozpointerlockerror',\n    'webkitpointerlockerror',\n    'pointermove',\n    'pointout',\n    'pointerover',\n    'pointerup',\n    'progress',\n    'ratechange',\n    'reset',\n    'resize',\n    'scroll',\n    'seeked',\n    'seeking',\n    'select',\n    'selectionchange',\n    'selectstart',\n    'show',\n    'sort',\n    'stalled',\n    'submit',\n    'suspend',\n    'timeupdate',\n    'volumechange',\n    'touchcancel',\n    'touchmove',\n    'touchstart',\n    'touchend',\n    'transitioncancel',\n    'transitionend',\n    'waiting',\n    'wheel'\n];\nconst documentEventNames = [\n    'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n    'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n    'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n    'visibilitychange', 'resume'\n];\nconst windowEventNames = [\n    'absolutedeviceorientation',\n    'afterinput',\n    'afterprint',\n    'appinstalled',\n    'beforeinstallprompt',\n    'beforeprint',\n    'beforeunload',\n    'devicelight',\n    'devicemotion',\n    'deviceorientation',\n    'deviceorientationabsolute',\n    'deviceproximity',\n    'hashchange',\n    'languagechange',\n    'message',\n    'mozbeforepaint',\n    'offline',\n    'online',\n    'paint',\n    'pageshow',\n    'pagehide',\n    'popstate',\n    'rejectionhandled',\n    'storage',\n    'unhandledrejection',\n    'unload',\n    'userproximity',\n    'vrdisplayconnected',\n    'vrdisplaydisconnected',\n    'vrdisplaypresentchange'\n];\nconst htmlElementEventNames = [\n    'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n    'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n    'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n];\nconst mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\nconst ieElementEventNames = [\n    'activate',\n    'afterupdate',\n    'ariarequest',\n    'beforeactivate',\n    'beforedeactivate',\n    'beforeeditfocus',\n    'beforeupdate',\n    'cellchange',\n    'controlselect',\n    'dataavailable',\n    'datasetchanged',\n    'datasetcomplete',\n    'errorupdate',\n    'filterchange',\n    'layoutcomplete',\n    'losecapture',\n    'move',\n    'moveend',\n    'movestart',\n    'propertychange',\n    'resizeend',\n    'resizestart',\n    'rowenter',\n    'rowexit',\n    'rowsdelete',\n    'rowsinserted',\n    'command',\n    'compassneedscalibration',\n    'deactivate',\n    'help',\n    'mscontentzoom',\n    'msmanipulationstatechanged',\n    'msgesturechange',\n    'msgesturedoubletap',\n    'msgestureend',\n    'msgesturehold',\n    'msgesturestart',\n    'msgesturetap',\n    'msgotpointercapture',\n    'msinertiastart',\n    'mslostpointercapture',\n    'mspointercancel',\n    'mspointerdown',\n    'mspointerenter',\n    'mspointerhover',\n    'mspointerleave',\n    'mspointermove',\n    'mspointerout',\n    'mspointerover',\n    'mspointerup',\n    'pointerout',\n    'mssitemodejumplistitemremoved',\n    'msthumbnailclick',\n    'stop',\n    'storagecommit'\n];\nconst webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\nconst formEventNames = ['autocomplete', 'autocompleteerror'];\nconst detailEventNames = ['toggle'];\nconst frameEventNames = ['load'];\nconst frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\nconst marqueeEventNames = ['bounce', 'finish', 'start'];\nconst XMLHttpRequestEventNames = [\n    'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n    'readystatechange'\n];\nconst IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\nconst websocketEventNames = ['close', 'error', 'open', 'message'];\nconst workerEventNames = ['error', 'message'];\nconst eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const supportsWebSocket = typeof WebSocket !== 'undefined';\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    if (isBrowser) {\n        const internalWindow = window;\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n        patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n        if (typeof internalWindow['SVGElement'] !== 'undefined') {\n            patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n        }\n        patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n        const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n        if (HTMLMarqueeElement) {\n            patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n        }\n        const Worker = internalWindow['Worker'];\n        if (Worker) {\n            patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n        }\n    }\n    const XMLHttpRequest = _global['XMLHttpRequest'];\n    if (XMLHttpRequest) {\n        // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n        patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget) {\n        patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    if (typeof IDBIndex !== 'undefined') {\n        patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n    }\n    if (supportsWebSocket) {\n        patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames: zoneSymbolEventNames$1,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    api.patchMethod(global, 'queueMicrotask', delegate => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n"]}