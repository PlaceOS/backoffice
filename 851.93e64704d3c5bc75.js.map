{"version":3,"file":"851.93e64704d3c5bc75.js","mappings":"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","names":["ModuleStateService","active_item","this","_state","constructor","_dialog","_loading","BehaviorSubject","loading","asObservable","item","pipe","filter","_","PlaceModule","associated_settings","active_item$","debounceTime","switchMap","moduleSettings","id","driver","showDriver","driver_id","shareReplay","system","system_id","showSystem","of","edge","edge_id","showEdge","system_list","next","querySystems","module_id","map","details","data","catchError","tap","toggleModuleState","_this","_asyncToGenerator","error","running","stopModule","startModule","toPromise","catch","err","length","notifyError","viewDetails","notifySuccess","content","open","ViewResponseModalComponent","t","i0","i1","i2","core","Yz7","factory","ɵfac","providedIn","ctx_r0","notes","ctx_r1","ip","ctx_r2","port","ModuleAboutComponent_div_5_code_3_Template","ModuleAboutComponent_div_5_code_4_Template","ctx_r3","tls","udp","ctx_r4","created_at","ctx_r5","updated_at","_c16","ctx_r6","name","_c19","ctx_r7","ctx_r18","description","ModuleAboutComponent_div_12_app_icon_7_Template","_c22","ctx_r8","ctx_r13","settings","other_settings","_c27","ModuleAboutComponent","_service","stopping","Xpm","selectors","decls","vars","consts","i18n_0","$localize","ModuleAboutComponent_div_2_Template","ModuleAboutComponent_div_3_Template","ModuleAboutComponent_div_4_Template","ModuleAboutComponent_div_5_Template","ModuleAboutComponent_div_6_Template","ModuleAboutComponent_div_7_Template","ModuleAboutComponent_div_8_Template","ModuleAboutComponent_div_10_Template","ModuleAboutComponent_div_12_Template","ctx","ModuleAboutComponent_div_18_Template","ModuleAboutComponent_mat_spinner_19_Template","ModuleAboutComponent_div_21_Template","ModuleAboutComponent_mat_spinner_22_Template","ModuleAboutComponent_section_26_Template","ModuleAboutComponent_ng_template_28_Template","_r14","_c6","system_r7","installed_ui_devices","ModuleSystemsComponent_section_4_div_1_div_9_Template","ModuleSystemsComponent_section_4_div_1_Template","tmp_0_0","_r3","ModuleSystemsComponent","filter$","combineLatest","systems","search","toLowerCase","sys","includes","$event","ModuleSystemsComponent_section_4_Template","ModuleSystemsComponent_ng_template_6_Template","ModuleSystemsComponent_ng_template_8_Template","_r1","_r5","scroll","scrollTop","tab_list","ROUTES","path","component","ModulesComponent","AsyncHandler","extensions","extensionsForItem","debug_position","_debug","position","updateTabList","icon","class","count","system_count","concat","super","open_menu","newItem","create","ngOnInit","subscription","subscribe","loadValues","query","offset","limit","total","features","template","rf","ModulesComponent_ng_container_10_Template","ModulesComponent_app_debug_output_13_Template","ModulesComponent_app_debug_output_14_Template","children","ExtensionOutletComponent","SettingsHistoryViewComponent","redirectTo","AppModulesModule","oAB","cJS","CommonModule","FormsModule","RouterModule","forChild","SharedContentModule"],"sourceRoot":"webpack:///","sources":["./apps/backoffice/src/app/modules/module-state.service.ts","./apps/backoffice/src/app/modules/module-about.component.ts","./apps/backoffice/src/app/modules/module-systems.component.ts","./apps/backoffice/src/app/modules/modules.component.ts","./apps/backoffice/src/app/modules/modules.routes.ts","./apps/backoffice/src/app/modules/modules.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    moduleSettings,\n    PlaceModule,\n    querySystems,\n    showDriver,\n    showEdge,\n    showSystem,\n    startModule,\n    stopModule,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { ActiveItemService } from '../common/item.service';\nimport { notifyError, notifySuccess } from '../common/notifications';\nimport { ViewResponseModalComponent } from '../overlays/view-response-modal/view-response-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ModuleStateService {\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n    /** Active module */\n    public readonly item: Observable<PlaceModule> = this._state.item.pipe(\n        filter((_) => _ instanceof PlaceModule)\n    ) as any;\n    /** Observable for associated settings of the active item */\n    public readonly associated_settings = this._state.active_item$.pipe(\n        debounceTime(300),\n        switchMap((item: PlaceModule) => {\n            if (!item || !(item instanceof PlaceModule)) return [];\n            return moduleSettings(item.id);\n        })\n    );\n    /** Driver associated with the active module */\n    public readonly driver = this.item.pipe(\n        switchMap((item) => showDriver(item.driver_id)),\n        shareReplay(1)\n    );\n    /** System assoicated with the active module */\n    public readonly system = this.item.pipe(\n        switchMap((item) =>\n            item.system_id ? showSystem(item.system_id) : of(null)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly edge = this.item.pipe(\n        switchMap((item) => (item.edge_id ? showEdge(item.edge_id) : of(null))),\n        shareReplay(1)\n    );\n    /** System assoicated with the active module */\n    public readonly system_list = this.item.pipe(\n        switchMap((item) => {\n            this._loading.next(true);\n            return querySystems({ module_id: item.id });\n        }),\n        map((details) => details.data),\n        catchError(() => []),\n        tap((_) => this._loading.next(false)),\n        shareReplay(1)\n    );\n\n    public get active_item(): PlaceModule {\n        return this._state.active_item as any;\n    }\n\n    constructor(\n        private _state: ActiveItemService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async toggleModuleState() {\n        const method = this.active_item.running ? stopModule : startModule;\n        const error = await method(this.active_item.id)\n            .pipe(map((_) => null))\n            .toPromise()\n            .catch((err) => err);\n        if (error) {\n            if (typeof error === 'string' && error.length < 64) {\n                notifyError(error);\n            } else {\n                notifyError(\n                    `Failed to ${\n                        this.active_item.running ? 'stop' : 'start'\n                    } device '${this.active_item.id}'.\\nView Error?`,\n                    'View',\n                    () => this.viewDetails(error)\n                );\n            }\n            return;\n        }\n        notifySuccess(\n            `Module successfully ${\n                this.active_item.running ? 'stopped' : 'started'\n            }`\n        );\n        (this.active_item as any).running = !this.active_item.running;\n    }\n\n    /** View Results of the execute */\n    private viewDetails(content: any) {\n        this._dialog.open<ViewResponseModalComponent>(\n            ViewResponseModalComponent,\n            {\n                data: { content },\n            }\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { PlaceModule } from '@placeos/ts-client';\n\nimport { ModuleStateService } from './module-state.service';\n\n@Component({\n    selector: 'module-about',\n    template: `\n        <section class=\"space-x-2 flex\">\n            <div\n                class=\"rounded p-2 border border-gray-200 dark:border-neutral-500 space-y-2 w-1/3 flex-1\"\n            >\n                <div class=\"flex items-center space-x-2\" *ngIf=\"item.notes\">\n                    <label i18n=\"@moduleNotesLabel\">Notes:</label>\n                    <div class=\"value\">{{ item.notes }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"item.ip\">\n                    <label i18n=\"@moduleIPLabel\">IP:</label>\n                    <div class=\"value\">{{ item.ip }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"item.port > 1\">\n                    <label i18n=\"@modulePortLabel\">Port:</label>\n                    <div class=\"value\">{{ item.port }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"item.tls || item.udp\"\n                >\n                    <label i18n=\"@moduleTLSLabel\">Protocol:</label>\n                    <code *ngIf=\"item.tls\" class=\"bg-success text-white\"\n                        >TLS</code\n                    >\n                    <code *ngIf=\"item.udp\" class=\"bg-success text-white\"\n                        >UDP</code\n                    >\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"item.created_at\"\n                >\n                    <label i18n=\"@@moduleCreatedAtLabel\">Created:</label>\n                    <div class=\"value\">\n                        {{ item.created_at * 1000 | dateFrom }}\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"item.updated_at\"\n                >\n                    <label i18n=\"@moduleUpdatedAtLabel\">Updated:</label>\n                    <div class=\"value\">\n                        {{ item.updated_at * 1000 | dateFrom }}\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"driver | async\">\n                    <label i18n=\"@moduleUpdatedAtLabel\">Driver:</label>\n                    <a\n                        class=\"underline\"\n                        [routerLink]=\"['/drivers', item.driver_id]\"\n                    >\n                        {{ (driver | async).name || '&lt;Unnamed&gt;' }}\n                    </a>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"system | async\">\n                    <label i18n=\"@moduleUpdatedAtLabel\">System:</label>\n                    <a\n                        class=\"underline\"\n                        [routerLink]=\"[\n                            '/systems',\n                            (system | async).id,\n                            'modules'\n                        ]\"\n                    >\n                        {{ (system | async).name }}\n                    </a>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"edge | async\">\n                    <label i18n=\"@moduleUpdatedAtLabel\">Edge:</label>\n                    <a\n                        class=\"underline flex-1\"\n                        [routerLink]=\"['/admin', 'edge', (edge | async).id]\"\n                    >\n                        {{ (edge | async).name }}\n                    </a>\n                    <app-icon\n                        *ngIf=\"(edge | async).description\"\n                        className=\"backoffice-info\"\n                        class=\"border border-gray-200 dark:border-neutral-500 rounded-full\"\n                        [matTooltip]=\"(edge | async).description\"\n                    ></app-icon>\n                </div>\n            </div>\n            <div\n                class=\"rounded p-2 border border-gray-200 dark:border-neutral-500 space-y-2 w-1/3 flex-1 flex flex-col\"\n            >\n                <h3 class=\"w-full text-center\">Module Controls</h3>\n                <button\n                    btn\n                    class=\"w-full\"\n                    [disabled]=\"item.running || stopping\"\n                    (click)=\"toggleModuleState()\"\n                >\n                    <div\n                        class=\"text\"\n                        *ngIf=\"!stopping\"\n                        i18n=\"@@moduleStartStateToggle\"\n                    >\n                        Start Module\n                    </div>\n                    <mat-spinner diameter=\"32\" *ngIf=\"stopping\"></mat-spinner>\n                </button>\n                <button\n                    btn\n                    class=\"w-full\"\n                    [disabled]=\"!item.running || stopping\"\n                    (click)=\"toggleModuleState()\"\n                >\n                    <div\n                        class=\"text\"\n                        *ngIf=\"!stopping\"\n                        i18n=\"@@moduleStopStateToggle\"\n                    >\n                        Stop Module\n                    </div>\n                    <mat-spinner diameter=\"32\" *ngIf=\"stopping\"></mat-spinner>\n                </button>\n            </div>\n        </section>\n        <hr class=\"my-4\" />\n        <header class=\"font-medium text-lg\" i18n=\"@@settingsLabel\">\n            Settings\n        </header>\n        <section\n            *ngIf=\"item.settings && (other_settings | async); else load_state\"\n        >\n            <a-settings-form\n                [id]=\"item.id\"\n                [merge]=\"true\"\n                [settings]=\"item.settings\"\n                [merge_settings]=\"(other_settings | async) || []\"\n            ></a-settings-form>\n        </section>\n        <ng-template #load_state>\n            <div class=\"p-8 flex flex-col items-center justify-center m-auto\">\n                <mat-spinner class=\"mb-4\" diameter=\"48\"></mat-spinner>\n                <p i18n=\"@@moduleDetailsLoading\">Loading module settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            label {\n                width: 4rem;\n            }\n        `,\n    ],\n})\nexport class ModuleAboutComponent {\n    /** Driver for the active item */\n    public readonly driver = this._service.driver;\n    /** Control System for the active item */\n    public readonly system = this._service.system;\n    /** Edge node for the active item */\n    public readonly edge = this._service.edge;\n    /** List of settings for associated modules, drivers and zones */\n    public readonly other_settings = this._service.associated_settings;\n    /** Whether module is being stopped */\n    public stopping: boolean;\n\n    public get item(): PlaceModule {\n        return this._service.active_item as any;\n    }\n\n    constructor(private _service: ModuleStateService) {}\n\n    public async toggleModuleState() {\n        this.stopping = true;\n        await this._service.toggleModuleState();\n        this.stopping = false;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PlaceModule, PlaceSystem, querySystems } from '@placeos/ts-client';\nimport { Subject, Observable, of, BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    catchError,\n    map,\n} from 'rxjs/operators';\n\nimport { AsyncHandler } from 'apps/backoffice/src/app/common/base.class';\nimport { ActiveItemService } from 'apps/backoffice/src/app/common/item.service';\nimport { ModuleStateService } from './module-state.service';\n\n@Component({\n    selector: 'module-systems',\n    template: `\n        <section class=\"flex items-center mb-4\">\n            <mat-form-field appearance=\"outline\" class=\"h-12 flex-1\">\n                <app-icon\n                    matPrefix\n                    className=\"backoffice-magnifying-glass text-xl mr-2\"\n                ></app-icon>\n                <input\n                    [ngModel]=\"''\"\n                    (ngModelChange)=\"filter$.next($event)\"\n                    matInput\n                    placeholder=\"Filter systems...\"\n                    class=\"rounded-none\"\n                />\n            </mat-form-field>\n        </section>\n        <section *ngIf=\"!(loading | async); else load_state\">\n            <div\n                role=\"table\"\n                class=\"overflow-x-auto\"\n                *ngIf=\"(system_list | async)?.length; else empty_state\"\n            >\n                <div table-head>\n                    <div flex class=\"flex-1 p-2\" i18n=\"@@nameLabel\">Name</div>\n                    <div class=\"w-48 p-2\" i18n=\"@@systemLabel\">No. Modules</div>\n                    <div class=\"w-36 p-2\" i18n=\"@@createdLabel\">Created</div>\n                </div>\n                <div table-body class=\"overflow-y-auto\">\n                    <div\n                        table-row\n                        *ngFor=\"\n                            let system of system_list | async;\n                            let i = index\n                        \"\n                    >\n                        <div flex class=\"flex-1 p-2 underline\">\n                            <a [routerLink]=\"['/systems', system.id]\">{{\n                                system.name\n                            }}</a>\n                        </div>\n                        <div class=\"w-48 p-2\">\n                            {{ system.installed_ui_devices || '0' }}\n                        </div>\n                        <div class=\"w-36 p-2\">\n                            {{ system.created_at * 1000 | dateFrom }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 mx-auto\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>Loading systems...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 mx-auto\">\n                <p>No systems with module</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class ModuleSystemsComponent {\n    /** Subject holding the value of the search */\n    public readonly filter$ = new BehaviorSubject<string>('');\n    /** Whether systems are being loaded */\n    public readonly loading = this._service.loading;\n\n    public readonly system_list = combineLatest([\n        this.filter$,\n        this._service.system_list,\n    ]).pipe(\n        map((details) => {\n            const [filter, systems] = details;\n            const search = filter.toLowerCase();\n            return filter\n                ? systems.filter((sys) =>\n                      sys.name.toLowerCase().includes(search)\n                  )\n                : systems;\n        })\n    );\n\n    constructor(private _service: ModuleStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { PlaceModule, querySystems } from '@placeos/ts-client';\nimport { extensionsForItem } from '../common/api';\nimport { AsyncHandler } from '../common/base.class';\nimport { PlaceDebugService } from '../common/debug.service';\nimport { ActiveItemService } from '../common/item.service';\n\n@Component({\n    selector: 'new-modules-view',\n    template: `\n        <div\n            class=\"absolute inset-0 flex items-center divide-y sm:divide-y-0 sm:divide-x divide-gray-300 dark:divide-neutral-600 bg-white dark:bg-neutral-700\"\n        >\n            <sidebar-menu [(open)]=\"open_menu\" class=\"sm:h-full\"></sidebar-menu>\n            <div class=\"flex flex-col h-full flex-1 overflow-hidden w-px\">\n                <div class=\"flex flex-1 h-px\">\n                    <item-sidebar\n                        class=\"hidden sm:block\"\n                        [route]=\"name\"\n                        title=\"Modules\"\n                    ></item-sidebar>\n                    <div class=\"flex-1 w-1/2 h-full relative flex flex-col z-0\">\n                        <item-selection\n                            class=\"z-20 sm:hidden\"\n                            [route]=\"name\"\n                            title=\"Modules\"\n                        >\n                            <button\n                                btn\n                                icon\n                                class=\"sm:hidden mr-2\"\n                                (click)=\"open_menu = true\"\n                            >\n                                <app-icon\n                                    className=\"backoffice-menu\"\n                                ></app-icon>\n                            </button>\n                        </item-selection>\n                        <div class=\"flex flex-col flex-1 h-1/2\">\n                            <ng-container *ngIf=\"item?.id\">\n                                <item-details\n                                    [can_edit]=\"true\"\n                                    [item]=\"item\"\n                                    type=\"Module\"\n                                ></item-details>\n                                <item-tablist\n                                    [base]=\"name\"\n                                    [tabs]=\"tab_list\"\n                                    [scrolled]=\"scroll > 0\"\n                                    class=\"z-10\"\n                                ></item-tablist>\n                                <div\n                                    #el\n                                    class=\"flex-1 h-1/2 w-full overflow-auto p-4 z-0 relative\"\n                                    (scroll)=\"scroll = el.scrollTop\"\n                                >\n                                    <router-outlet></router-outlet>\n                                </div>\n                            </ng-container>\n                        </div>\n                        <button\n                            class=\"absolute bottom-2 left-2 sm:-left-9 w-12 h-12 flex items-center justify-center bg-primary dark:bg-pink rounded-lg shadow z-30 text-white\"\n                            matTooltip=\"New module\"\n                            matTooltipPosition=\"right\"\n                            matRipple\n                            (click)=\"newItem()\"\n                        >\n                            <app-icon\n                                [className]=\"'backoffice-plus'\"\n                                class=\"text-3xl\"\n                            ></app-icon>\n                        </button>\n                    </div>\n                </div>\n                <app-debug-output\n                    below\n                    *ngIf=\"debug_position === 'below'\"\n                ></app-debug-output>\n            </div>\n            <app-debug-output\n                side\n                *ngIf=\"debug_position === 'side'\"\n                class=\"h-full max-w-[30rem]\"\n            ></app-debug-output>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ModulesComponent extends AsyncHandler {\n    /** Number of systems for the active device */\n    public system_count: number;\n    public open_menu = false;\n    public readonly name = 'modules';\n\n    public tab_list = [];\n\n    public readonly newItem = () => this._service.create();\n\n    public get item() {\n        return this._service.active_item;\n    }\n\n    public get extensions() {\n        return extensionsForItem(this._service.active_item, this.name);\n    }\n\n    public get debug_position() {\n        return this._debug.position;\n    }\n\n    public updateTabList() {\n        this.tab_list = [\n            {\n                id: 'about',\n                name: 'About',\n                icon: { class: 'backoffice-info-with-circle' },\n            },\n            {\n                id: 'systems',\n                name: 'Systems',\n                count: this.system_count,\n                icon: { class: 'backoffice-documents' },\n            },\n            {\n                id: 'history',\n                name: 'Settings History',\n                icon: { class: 'backoffice-clock' },\n            },\n        ].concat(this.extensions);\n    }\n\n    constructor(\n        private _service: ActiveItemService,\n        private _debug: PlaceDebugService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item',\n            this._service.item.subscribe((item) => {\n                this.loadValues(item as any);\n                this.updateTabList();\n            })\n        );\n        this.updateTabList();\n    }\n\n    protected async loadValues(item: PlaceModule) {\n        if (!item) return;\n        const query: any = { offset: 0, limit: 1, module_id: item.id };\n        // Get system count\n        this.system_count = (await querySystems(query).toPromise()).total;\n    }\n}\n","import { Routes } from '@angular/router';\n\nimport { ModuleAboutComponent } from './module-about.component';\nimport { ModuleSystemsComponent } from './module-systems.component';\nimport { ExtensionOutletComponent } from '../ui/extension-outlet.component';\nimport { SettingsHistoryViewComponent } from '../ui/settings-history-view.component';\nimport { ModulesComponent } from './modules.component';\n\nexport const ROUTES: Routes = [\n    {\n        path: ':id',\n        component: ModulesComponent,\n        children: [\n            { path: 'about', component: ModuleAboutComponent },\n            { path: 'systems', component: ModuleSystemsComponent },\n            { path: 'extend/:id', component: ExtensionOutletComponent },\n            { path: 'history', component: SettingsHistoryViewComponent },\n            { path: '**', redirectTo: 'about' },\n        ],\n    },\n    { path: '**', redirectTo: '-' },\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ROUTES } from './modules.routes';\n\nimport { ModuleAboutComponent } from './module-about.component';\nimport { ModuleSystemsComponent } from './module-systems.component';\nimport { SharedContentModule } from 'apps/backoffice/src/app/ui/ui.module';\nimport { ModulesComponent } from './modules.component';\n\n@NgModule({\n    declarations: [\n        ModuleAboutComponent,\n        ModuleSystemsComponent,\n        ModulesComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n    ],\n})\nexport class AppModulesModule {}\n"],"x_google_ignoreList":[]}