# This is a basic workflow to help you get started with Actions

name: BETA

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Setup Node.js environment
      uses: actions/setup-node@v1.4.1

    - name: Cache node modules
      uses: actions/cache@v1
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install node modules
      run: npm ci && npm i -g @angular/cli

    - name: Cache angular resources
      uses: actions/cache@v1
      env:
        cache-name: cache-angular-build-assets
      with:
        path: node_modules/.cache
        key: ${{ runner.os }}-angular-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-angular-${{ env.cache-name }}-
          ${{ runner.os }}-angular-

    - name: Builds the application
      run: ng build --configuration=staging --aot

    - name: Deploy the application
      uses: seanmiddleditch/gha-publish-to-git@v1
      with:
        repository: placeos/www-core
        branch: beta
        source_folder: dist
        target_folder: backoffice
        commit_message: >
          build(backoffice): CI build from $GITHUB_SHA
        github_pat: ${{ secrets.API_GITHUB_TOKEN }}
