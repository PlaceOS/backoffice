{"version":3,"file":"900.19280c58b4d94bac.js","mappings":"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","names":["RepositoriesStateService","active_item","this","_state","constructor","_dialog","_loading","BehaviorSubject","loading","asObservable","item","driver_list","active_item$","pipe","switchMap","PlaceRepository","repo_type","PlaceRepositoryType","Interface","next","listRepositoryDrivers","id","limit","of","catchError","_","map","commit","filter","i","listRepositoryCommits","count","details","pullLatestCommit","_this","_asyncToGenerator","pullRepositoryChanges","toPromise","catch","err","notifyError","JSON","stringify","response","message","repo","showRepository","replaceItem","newDriver","driver","_this2","open","ItemCreateUpdateModalComponent","height","width","maxHeight","maxWidth","data","PlaceDriver","name","module_name","repository_id","file_name","save","addDriver","static","t","i0","i1","i2","core","Yz7","factory","Éµfac","providedIn","ctx_r0","RepositoryAboutComponent","AsyncHandler","_service","local_url","type","location","origin","folder_name","hash","repo_uri","uri","replace","super","ngOnInit","subscription","subscribe","pulling","Xpm","selectors","features","decls","vars","consts","i18n_0","$localize","i18n_5","RepositoryAboutComponent_span_48_Template","ctx","RepositoryAboutComponent_ng_container_51_Template","RepositoryAboutComponent_ng_template_52_Template","description","created_at","updated_at","branch","commit_hash","_r3","item_r7","_r9","$implicit","ctx_r8","RepositoryDriversComponent_ng_container_2_div_1_div_6_Template","ctx_r5","RepositoryDriversComponent_ng_container_2_div_1_Template","tmp_0_0","length","_r2","RepositoryDriversComponent","d","RepositoryDriversComponent_ng_container_2_Template","RepositoryDriversComponent_ng_template_3_Template","RepositoryDriversComponent_ng_template_5_Template","_r4","_r1","ctx_r2","scroll","scrollTop","tab_list","ROUTES","path","component","RepositoriesComponent","extensions","extensionsForItem","updateTabList","driver_count","icon","class","concat","_item","open_menu","newItem","create","list","template","rf","$event","RepositoriesComponent_ng_container_8_Template","children","ExtensionOutletComponent","redirectTo","AppRepositoriesModule","oAB","cJS","CommonModule","FormsModule","RouterModule","forChild","SharedContentModule"],"sourceRoot":"webpack:///","sources":["./apps/backoffice/src/app/repositories/repositories-state.service.ts","./apps/backoffice/src/app/repositories/repository-about.component.ts","./apps/backoffice/src/app/repositories/repository-drivers.component.ts","./apps/backoffice/src/app/repositories/repositories.component.ts","./apps/backoffice/src/app/repositories/repositories.routes.ts","./apps/backoffice/src/app/repositories/repositories.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    addDriver,\n    listRepositoryCommits,\n    listRepositoryDrivers,\n    PlaceDriver,\n    PlaceRepository,\n    PlaceRepositoryType,\n    pullRepositoryChanges,\n    showRepository,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    share,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { ActiveItemService } from '../common/item.service';\nimport { notifyError } from '../common/notifications';\nimport {\n    CreateEditModalData,\n    ItemCreateUpdateModalComponent,\n} from '../overlays/item-modal/item-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RepositoriesStateService {\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n    /** Active module */\n    public readonly item = this._state.item;\n    /** List of available drivers for repository */\n    public readonly driver_list = this._state.active_item$.pipe(\n        switchMap((item: PlaceRepository) => {\n            if (\n                !(item instanceof PlaceRepository) ||\n                item.repo_type === PlaceRepositoryType.Interface\n            )\n                return of(null);\n            this._loading.next(true);\n            return listRepositoryDrivers(item.id, { limit: 2000 });\n        }),\n        catchError((_) => []),\n        map((_) => {\n            this._loading.next(false);\n            return _;\n        })\n    );\n    /** Get latest commit for the active repository */\n    public readonly commit = this._state.active_item$.pipe(\n        filter((i) => i instanceof PlaceRepository),\n        switchMap((item) =>\n            listRepositoryCommits(item.id, { count: 1 } as any)\n        ),\n        catchError((_) => []),\n        map((details) => details[0]?.commit || 'HEAD')\n    );\n\n    public get active_item(): PlaceRepository {\n        return this._state.active_item as any;\n    }\n\n    constructor(\n        private _state: ActiveItemService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async pullLatestCommit() {\n        const commit: any = await pullRepositoryChanges(this.active_item.id)\n            .toPromise()\n            .catch((err) => {\n                notifyError(\n                    `Error pulling latest commit. Error: ${JSON.stringify(\n                        err.response || err.message || 'Pull timed out'\n                    )}`\n                );\n            });\n        if (!commit) return;\n        const repo = await showRepository(this.active_item.id).toPromise();\n        this._state.replaceItem(repo);\n    }\n\n    public async newDriver(driver: string) {\n        this._dialog.open<ItemCreateUpdateModalComponent, CreateEditModalData>(\n            ItemCreateUpdateModalComponent,\n            {\n                height: 'auto',\n                width: 'auto',\n                maxHeight: 'calc(100vh - 2em)',\n                maxWidth: 'calc(100vw - 2em)',\n                data: {\n                    item: new PlaceDriver({\n                        name: '',\n                        module_name: '',\n                        repository_id: this.active_item.id,\n                        file_name: driver,\n                    }),\n                    name: 'Driver',\n                    save: (item) => addDriver(item),\n                },\n            }\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { PlaceRepositoryType } from '@placeos/ts-client';\nimport { AsyncHandler } from '../common/async-handler.class';\nimport { RepositoriesStateService } from './repositories-state.service';\n\n@Component({\n    selector: 'repository-about',\n    template: `\n        <section class=\"mb-4 text-center flex space-x-2\">\n            <div\n                class=\"rounded p-2 border border-base-200  space-y-2 w-1/3 flex-1 flex flex-col\"\n            >\n                <div class=\"flex items-center space-x-2\">\n                    <label i18n=\"@@descriptionLabel\">Description:</label>\n                    <div class=\"value select-all\">\n                        {{ item.description || 'No description' }}\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <label i18n=\"@@repoTypeLabel\">Type:</label>\n                    <div class=\"value\" i18n=\"@@driverListEmpty\">\n                        { item.type, select, interface { Interface Repository }\n                        driver { Driver Repository }, other { =Unknown=} }\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <label i18n=\"@@repoFolderNameLabel\">Folder name:</label>\n                    <div\n                        class=\"value select-all\"\n                        [class.underline]=\"item.type === 'interface'\"\n                        [class.pointer-events-none]=\"item.type !== 'interface'\"\n                    >\n                        <a [href]=\"local_url\" target=\"_blank\">{{\n                            item.folder_name || 'No folder set'\n                        }}</a>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <label i18n=\"@@repoCreatedAtLabel\">Created:</label>\n                    <div class=\"value\">\n                        {{ item.created_at * 1000 | dateFrom }}\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <label i18n=\"@@repoUpdatedAtLabel\">Updated:</label>\n                    <div class=\"value\">\n                        {{ item.updated_at * 1000 | dateFrom }}\n                    </div>\n                </div>\n            </div>\n            <div\n                class=\"rounded p-2 border border-base-200  space-y-2 w-1/3 flex-1 flex flex-col\"\n            >\n                <div class=\"flex items-center space-x-2\">\n                    <label i18n=\"@@repoUriLabel\">Repository URI:</label>\n                    <div class=\"value underline select-all\">\n                        <a [href]=\"item.uri | safe: 'url'\" target=\"_blank\">{{\n                            repo_uri || 'No URI set'\n                        }}</a>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <label i18n=\"@@repoBranchLabel\">Branch:</label>\n                    <code class=\"text-xs\">\n                        {{ item.branch }}\n                    </code>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <label\n                        i18n=\"@@repoCommitHashLabel\"\n                        class=\"whitespace-nowrap\"\n                        >Commit hash:</label\n                    >\n                    <code class=\"text-xs truncate\">\n                        {{ item.commit_hash || 'No Commit hash set' }}\n                        <span\n                            class=\"select-text mono\"\n                            *ngIf=\"commit && commit !== item.commit_hash\"\n                        >\n                            ({{ commit }})\n                        </span>\n                    </code>\n                </div>\n                <div class=\"flex-1\"></div>\n                <button\n                    btn\n                    class=\"w-full\"\n                    [disabled]=\"pulling\"\n                    (click)=\"pullLatestCommit()\"\n                >\n                    <ng-container\n                        *ngIf=\"!pulling; else spinner\"\n                        i18n=\"@@repoPullAction\"\n                    >\n                        Pull latest commit\n                    </ng-container>\n                </button>\n            </div>\n        </section>\n        <ng-template #spinner>\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            .mono {\n                font-family: var(--mono-font);\n            }\n\n            label {\n                width: 6rem;\n                text-align: left;\n            }\n        `,\n    ],\n})\nexport class RepositoryAboutComponent extends AsyncHandler {\n    /** Whether the latest commit is being pulled on the server */\n    public pulling: boolean;\n\n    public commit = '';\n\n    public get item(): any {\n        return this._service.active_item as any;\n    }\n\n    public get local_url() {\n        return this.item.type === PlaceRepositoryType.Interface\n            ? `${location.origin}/${this.item.folder_name}/`\n            : `${location.hash}`;\n    }\n\n    public get repo_uri() {\n        return this.item?.uri.replace(/\\/[a-zA-Z0-9\\-\\.:]*@/, '/...@');\n    }\n\n    constructor(private _service: RepositoriesStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.commit = '';\n        this.subscription(\n            'commit',\n            this._service.commit.subscribe((_) => (this.commit = _))\n        );\n    }\n\n    /**\n     * Send request to server to pull the latest commit for the active repository\n     */\n    public async pullLatestCommit() {\n        this.pulling = true;\n        await this._service.pullLatestCommit();\n        this.pulling = false;\n    }\n}\n","import { Component } from '@angular/core';\nimport { PlaceRepository } from '@placeos/ts-client';\n\nimport { RepositoriesStateService } from './repositories-state.service';\n\n@Component({\n    selector: 'repository-drivers',\n    template: `\n        <h3 class=\"font-medium text-lg mb-2\" i18n=\"@@repoDriverHeader\">\n            Available Drivers\n        </h3>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <div\n                role=\"table\"\n                class=\"overflow-x-auto\"\n                *ngIf=\"(driver_list | async)?.length; else empty_state\"\n            >\n                <div table-head>\n                    <td class=\"flex-1 p-2\" i18n=\"@@driverListname\">Name</td>\n                    <td class=\"w-12 p-2 h-10\"></td>\n                </div>\n                <div body class=\"overflow-y-auto\">\n                    <div table-row *ngFor=\"let item of driver_list | async\">\n                        <div\n                            class=\"flex-1 p-2\"\n                            [innerHTML]=\"item | driverFormat\"\n                        ></div>\n                        <div class=\"w-12 flex justify-center\">\n                            <button btn icon (click)=\"newDriver(item)\">\n                                <app-icon\n                                    className=\"backoffice-plus\"\n                                ></app-icon>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col p-8 items-center justify-center\">\n                <p i18n=\"@@driverListEmpty\">No drivers for repository</p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div class=\"flex flex-col p-8 items-center justify-center\">\n                <mat-spinner class=\"mb-4\" diameter=\"48\"></mat-spinner>\n                <p i18n=\"@@driverListLoading\">Loading driver list...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class RepositoryDriversComponent {\n    /** Whether driver list is loading */\n    public loading: boolean;\n    /** List of drivers available in the repository */\n    public readonly driver_list = this._service.driver_list;\n\n    public get item(): PlaceRepository {\n        return this._service.active_item as any;\n    }\n\n    public readonly newDriver = (d) => this._service.newDriver(d);\n\n    constructor(private _service: RepositoriesStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { extensionsForItem } from '../common/api';\nimport { AsyncHandler } from '../common/async-handler.class';\nimport { ActiveItemService } from '../common/item.service';\nimport { RepositoriesStateService } from './repositories-state.service';\n\n@Component({\n    selector: 'new-repositories-view',\n    template: `\n        <div\n            class=\"absolute inset-0 flex items-center divide-y sm:divide-y-0 sm:divide-x divide-base-200  bg-base-100 \"\n        >\n            <sidebar-menu [(open)]=\"open_menu\" class=\"sm:h-full\"></sidebar-menu>\n            <item-sidebar\n                class=\"hidden sm:block\"\n                [route]=\"name\"\n                title=\"Repositories\"\n            ></item-sidebar>\n            <div class=\"flex-1 w-1/2 h-full relative flex flex-col z-0\">\n                <item-selection\n                    class=\"z-20 sm:hidden\"\n                    [route]=\"name\"\n                    title=\"Repositories\"\n                >\n                    <button\n                        btn\n                        icon\n                        class=\"sm:hidden mr-2\"\n                        (click)=\"open_menu = true\"\n                    >\n                        <app-icon className=\"backoffice-menu\"></app-icon>\n                    </button>\n                </item-selection>\n                <div class=\"flex flex-col flex-1 h-1/2\">\n                    <ng-container *ngIf=\"item?.id\">\n                        <item-details\n                            [can_edit]=\"true\"\n                            [item]=\"item\"\n                            type=\"Repository\"\n                        ></item-details>\n                        <item-tablist\n                            [base]=\"name\"\n                            [tabs]=\"tab_list\"\n                            [scrolled]=\"scroll > 0\"\n                            class=\"z-10\"\n                        ></item-tablist>\n                        <div\n                            #el\n                            class=\"flex-1 h-1/2 w-full overflow-auto p-4 z-0 relative\"\n                            (scroll)=\"scroll = el.scrollTop\"\n                        >\n                            <router-outlet></router-outlet>\n                        </div>\n                    </ng-container>\n                </div>\n                <button\n                    class=\"absolute bottom-2 left-2 sm:-left-9 w-12 h-12 flex items-center justify-center bg-secondary rounded-lg shadow z-30 text-secondary-content\"\n                    matTooltip=\"New repository\"\n                    matTooltipPosition=\"right\"\n                    matRipple\n                    (click)=\"newItem()\"\n                >\n                    <app-icon\n                        [className]=\"'backoffice-plus'\"\n                        class=\"text-3xl\"\n                    ></app-icon>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RepositoriesComponent extends AsyncHandler {\n    public readonly name = 'repositories';\n\n    public open_menu = false;\n    public driver_count = 0;\n    public tab_list = [];\n\n    public readonly newItem = () => this._item.create();\n\n    public get item() {\n        return this._service.active_item;\n    }\n\n    public get extensions() {\n        return extensionsForItem(this._service.active_item, this.name);\n    }\n\n    public updateTabList() {\n        this.tab_list = (\n            this.driver_count < 0 || !this.driver_count\n                ? [\n                      {\n                          id: 'about',\n                          name: 'About',\n                          icon: { class: 'backoffice-info-with-circle' },\n                      },\n                  ]\n                : [\n                      {\n                          id: 'about',\n                          name: 'About',\n                          icon: { class: 'backoffice-info-with-circle' },\n                      },\n                      {\n                          id: 'drivers',\n                          name: 'Drivers',\n                          count: this.driver_count,\n                          icon: { class: 'backoffice-documents' },\n                      },\n                  ]\n        ).concat(this.extensions);\n    }\n\n    constructor(\n        protected _service: RepositoriesStateService,\n        protected _item: ActiveItemService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'item',\n            this._service.driver_list.subscribe((list) => {\n                this.driver_count = list ? list.length : -1;\n                this.updateTabList();\n            })\n        );\n        this.updateTabList();\n    }\n}\n","import { Routes } from '@angular/router';\n\nimport { RepositoryAboutComponent } from './repository-about.component';\nimport { RepositoryDriversComponent } from './repository-drivers.component';\nimport { ExtensionOutletComponent } from '../ui/extension-outlet.component';\nimport { RepositoriesComponent } from './repositories.component';\n\nexport const ROUTES: Routes = [\n    {\n        path: ':id',\n        component: RepositoriesComponent,\n        children: [\n            { path: 'about', component: RepositoryAboutComponent },\n            { path: 'drivers', component: RepositoryDriversComponent },\n            { path: 'extend/:id', component: ExtensionOutletComponent },\n            { path: '**', redirectTo: 'about' },\n        ],\n    },\n    { path: '**', redirectTo: '-' },\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ROUTES } from './repositories.routes';\n\nimport { RepositoryAboutComponent } from './repository-about.component';\nimport { RepositoryDriversComponent } from './repository-drivers.component';\nimport { SharedContentModule } from 'apps/backoffice/src/app/ui/ui.module';\nimport { RepositoriesComponent } from './repositories.component';\n\n@NgModule({\n    declarations: [\n        RepositoryAboutComponent,\n        RepositoryDriversComponent,\n        RepositoriesComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n    ],\n})\nexport class AppRepositoriesModule {}\n"],"x_google_ignoreList":[]}