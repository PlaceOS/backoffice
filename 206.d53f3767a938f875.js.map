{"version":3,"file":"206.d53f3767a938f875.js","mappings":"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","names":["SystemStateService","AsyncHandler","active_item","this","_state","constructor","_debug","_dialog","_this","super","item","_loading","BehaviorSubject","_modules","_change","associated_settings","active_item$","pipe","debounceTime","switchMap","PlaceSystem","systemSettings","id","counts","combineLatest","_ref","_asyncToGenerator","_","next","getValue","settings","details","Promise","all","listSystemTriggers","map","d","total","toPromise","catch","listMetadata","length","triggers","metadata","devices","modules","zones","_x","apply","arguments","_ref2","queryModules","control_system_id","complete","limit","i","data","forEach","connected","undefined","sort","a","b","indexOf","_x2","shareReplay","debug_state","changed","reduce","mapping","device","isListening","module_bindings","mod","custom_name","name","calculateModuleIndex","_ref3","listSystemZones","_x3","_ref4","_x4","loading","asObservable","getModules","startSystem","_this2","confirm","title","content","icon","type","class","reason","err","notifyError","JSON","stringify","response","message","notifySuccess","close","stopSystem","_this3","toggleModuleDebug","unbind","bind","newModule","_this4","edit","PlaceModule","system","joinModule","editModule","_this5","Date","now","selectTrigger","_this6","ref","open","SelectItemModalComponent","service_name","query_fn","queryTriggers","q","resp","race","componentInstance","event","first","afterClosed","t","addTrigger","trigger","_this7","addSystemTrigger","enabled","important","trigger_id","timeout","editTrigger","_this8","ItemCreateUpdateModalComponent","height","width","maxHeight","maxWidth","save","updateTrigger","external_save","url","apiEndpoint","trig","put","removeTrigger","_this9","removeSystemTrigger","statusText","reorderModules","fst","snd","_this10","list","moveItemInArray","updateSystem","replaceItem","reorderZones","order","_this11","_this12","addSystemModule","showSystem","removeModule","_this13","driver_id","removeSystemModule","reloadModule","_this14","recompileDriver","driver","addZones","zone_list","_this15","unique","removeZone","zone","_this16","filter","z","toggleModulePower","_this17","running","stopModule","startModule","viewDetails","ViewResponseModalComponent","_this18","openConfirmModal","i0","i1","i2","i3","core","Yz7","factory","ɵfac","providedIn","ctx_r0","support_url","ctx_r1","bookable","ctx_r2","public","ctx_r3","code","ctx_r14","email","SystemAboutComponent_div_6_a_3_Template","ctx_r4","ctx_r5","capacity","ctx_r6","map_id","ctx_r7","installed_ui_devices","ctx_r8","timezone","ctx_r9","created_at","ctx_r10","updated_at","ctx_r11","other_settings","_c28","SystemAboutComponent","_service","start","stop","Xpm","selectors","decls","vars","consts","i18n_0","$localize","SystemAboutComponent_div_2_Template","SystemAboutComponent_div_3_Template","SystemAboutComponent_div_4_Template","SystemAboutComponent_div_5_Template","SystemAboutComponent_div_6_Template","SystemAboutComponent_div_7_Template","SystemAboutComponent_div_8_Template","SystemAboutComponent_div_9_Template","SystemAboutComponent_div_10_Template","SystemAboutComponent_div_11_Template","SystemAboutComponent_div_12_Template","ctx","SystemAboutComponent_section_23_Template","SystemAboutComponent_ng_template_24_Template","_r12","item$","device_r9","notes","edge_id","_c20","item_r20","_r22","$implicit","ctx_r21","handleContextEvent","$event","_r25","ctx_r24","SystemModulesComponent_ng_container_0_ng_container_11_div_1_div_17_div_1_Template","ctx_r27","power","SystemModulesComponent_ng_container_0_ng_container_11_div_1_div_17_mat_spinner_7_Template","stopPropagation","SystemModulesComponent_ng_container_0_ng_container_11_div_1_div_17_div_12_Template","SystemModulesComponent_ng_container_0_ng_container_11_div_1_div_17_a_13_Template","SystemModulesComponent_ng_container_0_ng_container_11_div_1_div_17_app_icon_22_Template","ctx_r29","toggleDebug","ctx_r30","SystemModulesComponent_ng_container_0_ng_container_11_div_1_div_17_button_36_Template","_r16","bindings","i_r10","_c21","driver_type","role","tls","ip","uri","debugging","menu_options","offline_options","_r32","ctx_r31","drop","SystemModulesComponent_ng_container_0_ng_container_11_div_1_div_17_Template","SystemModulesComponent_ng_container_0_ng_container_11_div_1_Template","tmp_0_0","_r3","_r34","ctx_r33","new_module","ctx_r35","addModule","ctx_r36","SystemModulesComponent_ng_container_0_section_7_Template","SystemModulesComponent_ng_container_0_ng_container_11_Template","exclude_fn","hide_exec","_r1","SystemModulesComponent","PlaceDriverRole","Device","SSH","Service","Websocket","device_listener","extra","Logic","viewState","loadModule","reload","showModule","k","hasOwnProperty","ViewModuleStateModalComponent","module","then","previousIndex","currentIndex","features","SystemModulesComponent_ng_container_0_Template","SystemModulesComponent_ng_template_1_Template","SystemModulesComponent_ng_template_3_Template","trigger_r7","_r10","trigger_state","updateComparisons","ctx_r12","copyWebhookURL","ctx_r13","deleteTrigger","triggered","_c8","trigger_count","action_errors","comparison_errors","SystemTriggersComponent_ng_container_7_div_1_div_13_Template","SystemTriggersComponent_ng_container_7_div_1_Template","SystemTriggersComponent","filter$","comparisons","temp_trigger","temp","search","toLowerCase","includes","copyToClipboard","location","origin","webhook_secret","notifyInfo","key","conditions","SystemTriggersComponent_ng_container_7_Template","SystemTriggersComponent_ng_template_9_Template","SystemTriggersComponent_ng_template_11_Template","_r5","saveZoneOrder","_r14","zone_r8","SystemZonesComponent_ng_container_6_div_1_div_9_div_1_Template","SystemZonesComponent_ng_container_6_div_1_div_9_button_10_Template","pending","_c4","description","ctx_r15","SystemZonesComponent_ng_container_6_div_1_div_9_Template","SystemZonesComponent_ng_container_6_div_1_Template","SystemZonesComponent","order_changed","pending_zones","zone_order","queryZones","addPendingZone","savePendingZones","take","every","idx","splice","SystemZonesComponent_button_5_Template","SystemZonesComponent_ng_container_6_Template","SystemZonesComponent_ng_template_8_Template","_r2","SystemMetadataComponent","template","rf","SystemMetadataComponent_metadata_display_0_Template","scroll","scrollTop","tab_list","ROUTES","path","component","SystemsComponent","extensions","extensionsForItem","debug_position","position","updateTabList","count","concat","_item","open_menu","newItem","create","bulkAdd","ngOnInit","subscription","subscribe","SystemsComponent_ng_container_10_Template","SystemsComponent_app_debug_output_16_Template","SystemsComponent_app_debug_output_17_Template","children","ExtensionOutletComponent","SettingsHistoryViewComponent","redirectTo","AppSystemsModule","oAB","cJS","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","forChild","SharedContentModule","DragDropModule"],"sourceRoot":"webpack:///","sources":["./apps/backoffice/src/app/systems/system-state.service.ts","./apps/backoffice/src/app/systems/system-about.component.ts","./apps/backoffice/src/app/systems/system-modules.component.ts","./apps/backoffice/src/app/systems/system-triggers.component.ts","./apps/backoffice/src/app/systems/system-zones.component.ts","./apps/backoffice/src/app/systems/system-metadata.component.ts","./apps/backoffice/src/app/systems/systems.component.ts","./apps/backoffice/src/app/systems/systems.routes.ts","./apps/backoffice/src/app/systems/systems.module.ts"],"sourcesContent":["import { moveItemInArray } from '@angular/cdk/drag-drop';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    addSystemModule,\n    addSystemTrigger,\n    apiEndpoint,\n    listSystemTriggers,\n    listSystemZones,\n    PlaceModule,\n    PlaceSystem,\n    PlaceTrigger,\n    PlaceZone,\n    put,\n    queryModules,\n    queryTriggers,\n    recompileDriver,\n    removeSystemModule,\n    removeSystemTrigger,\n    startModule,\n    startSystem,\n    stopModule,\n    stopSystem,\n    systemSettings,\n    updateSystem,\n    updateTrigger,\n    listMetadata,\n    showSystem,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    debounceTime,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { calculateModuleIndex } from '../common/api';\nimport { AsyncHandler } from '../common/async-handler.class';\nimport { PlaceDebugService } from '../common/debug.service';\nimport { openConfirmModal, unique } from '../common/general';\n\nimport { ActiveItemService } from '../common/item.service';\nimport { notifyError, notifySuccess } from '../common/notifications';\nimport { HashMap } from '../common/types';\nimport { ConfirmModalData } from '../overlays/confirm-modal.component';\nimport { ItemCreateUpdateModalComponent } from '../overlays/item-modal/item-modal.component';\nimport {\n    SelectItemModalComponent,\n    SelectItemModalData,\n} from '../overlays/select-item-modal/select-item-modal.component';\nimport { ViewResponseModalComponent } from '../overlays/view-response-modal/view-response-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SystemStateService extends AsyncHandler {\n    /** Observable of the active item */\n    public readonly item = this._state.item;\n\n    private _loading = new BehaviorSubject<HashMap<boolean>>({});\n    private _modules = new BehaviorSubject<PlaceModule[]>([]);\n    private _change = new BehaviorSubject<number>(0);\n    /** Observable for associated settings of the active item */\n    public readonly associated_settings = this._state.active_item$.pipe(\n        debounceTime(300),\n        switchMap((item: PlaceSystem) => {\n            if (!item || !(item instanceof PlaceSystem)) return [];\n            return systemSettings(item.id);\n        })\n    );\n    /** Observable of the counts of the active item */\n    public readonly counts = combineLatest([\n        this._state.active_item$,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async (_) => {\n            const [item] = _;\n            if (!item || !(item instanceof PlaceSystem)) return {};\n            this._loading.next({\n                ...this._loading.getValue(),\n                settings: true,\n            });\n            const details = await Promise.all([\n                listSystemTriggers(item.id)\n                    .pipe(map((d) => d.total))\n                    .toPromise()\n                    .catch((_) => 0),\n                listMetadata(item.id)\n                    .pipe(map((d) => d.length))\n                    .toPromise()\n                    .catch((_) => 0),\n            ]);\n            const [triggers, metadata] = details;\n            this._loading.next({\n                ...this._loading.getValue(),\n                settings: false,\n            });\n            return {\n                devices: (item as any).modules.length,\n                zones: (item as any).zones.length,\n                triggers,\n                metadata,\n            };\n        })\n    );\n    /** Observable for modules associated with system */\n    public readonly modules = combineLatest([this.item, this._change]).pipe(\n        debounceTime(500),\n        switchMap(async ([item]) => {\n            if (!item || !(item instanceof PlaceSystem)) return [];\n            this._loading.next({\n                ...this._loading.getValue(),\n                modules: true,\n            });\n            const modules = await queryModules({\n                control_system_id: item.id,\n                complete: true,\n                limit: 200,\n            } as any)\n                .pipe(map((i) => i.data))\n                .toPromise();\n            modules.forEach((_) => ((_ as any).connected = undefined));\n            this._loading.next({\n                ...this._loading.getValue(),\n                modules: false,\n            });\n            modules.sort((a, b) => {\n                const index_a =\n                    item.modules.indexOf(a.id) > -1\n                        ? item.modules.indexOf(a.id)\n                        : 9999;\n                const index_b =\n                    item.modules.indexOf(b.id) > -1\n                        ? item.modules.indexOf(b.id)\n                        : 9999;\n                return index_a - index_b;\n            });\n            this._modules.next(modules);\n            return modules;\n        }),\n        shareReplay(1)\n    );\n    /** Observable for debug state of the active modules */\n    public readonly debug_state = combineLatest([\n        this.modules,\n        this._debug.changed,\n    ]).pipe(\n        map(([modules]) => {\n            return modules.reduce((mapping, device) => {\n                mapping[device.id] = this._debug.isListening(device);\n                return mapping;\n            }, {});\n        })\n    );\n    /** Observable for module bindings */\n    public readonly module_bindings = this.modules.pipe(\n        map((modules) =>\n            modules.map(\n                (mod) =>\n                    `${\n                        mod.custom_name || mod.name || 'Blank'\n                    }_${calculateModuleIndex(modules, mod)}`\n            )\n        ),\n        shareReplay()\n    );\n    /** Observable for zones associated with system */\n    public readonly zones = this._state.item.pipe(\n        switchMap(async (item: PlaceSystem) => {\n            if (!item || !(item instanceof PlaceSystem)) return [];\n            this._loading.next({\n                ...this._loading.getValue(),\n                zones: true,\n            });\n            const zones = await listSystemZones(item.id)\n                .pipe(map((i) => i.data))\n                .toPromise();\n            zones.sort(\n                (a, b) => item.zones.indexOf(a.id) - item.zones.indexOf(b.id)\n            );\n            this._loading.next({\n                ...this._loading.getValue(),\n                zones: false,\n            });\n            return zones;\n        }),\n        shareReplay()\n    );\n    /** Observable for triggers associated with system */\n    public readonly triggers = combineLatest([this.item, this._change]).pipe(\n        switchMap(async (_) => {\n            const [item] = _;\n            if (!item || !(item instanceof PlaceSystem)) return [];\n            this._loading.next({\n                ...this._loading.getValue(),\n                triggers: true,\n            });\n            const triggers = await listSystemTriggers(item.id)\n                .pipe(map((i) => i.data))\n                .toPromise();\n            this._loading.next({\n                ...this._loading.getValue(),\n                triggers: false,\n            });\n            return triggers;\n        }),\n        shareReplay()\n    );\n    /** Observable of the active item */\n    public readonly loading = this._loading.asObservable();\n\n    public readonly getModules = () => this._modules.getValue();\n    /** Observable of the active item */\n    public get active_item(): PlaceSystem {\n        return this._state.active_item || ({} as any);\n    }\n\n    constructor(\n        private _state: ActiveItemService,\n        private _debug: PlaceDebugService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /**\n     * Open confirmation modal for stopping the active system\n     */\n    public async startSystem() {\n        const details = await this.confirm({\n            title: 'Start system?',\n            content: `Are you sure you want to start this system?<br>All stopped modules within the system will boot up.`,\n            icon: { type: 'icon', class: 'backoffice-controller-play' },\n        });\n        if (details && details.reason) {\n            details.loading('Starting system...');\n            const resp = await startSystem(this.active_item.id)\n                .toPromise()\n                .catch((err) => {\n                    notifyError(\n                        `Failed to start system: ${JSON.stringify(\n                            err.response || err.message || err\n                        )}`\n                    );\n                    return err;\n                });\n            if (!resp) notifySuccess(`Successfully started system`);\n            details.close();\n        }\n    }\n\n    /**\n     * Open confirmation modal for stopping the active system\n     */\n    public async stopSystem() {\n        const details = await this.confirm({\n            title: 'Stop system?',\n            content: `Are you sure you want to stop this system?<br>All modules will be immediately stopped regardless of any other systems they may be in.`,\n            icon: { type: 'icon', class: 'backoffice-controller-stop' },\n        });\n        if (!details || !details.reason) return;\n        details.loading('Stopping system...');\n        const resp = await stopSystem(this.active_item.id)\n            .toPromise()\n            .catch((err) => {\n                notifyError(\n                    `Failed to stop system: ${JSON.stringify(\n                        err.response || err.message || err\n                    )}`\n                );\n                return err;\n            });\n        if (!resp) notifySuccess(`Successfully stopped system`);\n        details.close();\n    }\n\n    public toggleModuleDebug(device: PlaceModule) {\n        if (!device) return;\n        if (this._debug.isListening(device)) {\n            this._debug.unbind(device);\n        } else {\n            this._debug.bind(\n                device,\n                `${\n                    device.custom_name || device.name || 'Blank'\n                }_${calculateModuleIndex(this._modules.getValue(), device)}`\n            );\n        }\n    }\n\n    public async newModule() {\n        const mod = await this._state\n            .edit(\n                new PlaceModule({\n                    system: this.active_item,\n                    control_system_id: this.active_item.id,\n                })\n            )\n            .catch((_) => null);\n        if (!mod) return;\n        this.joinModule(mod.id);\n    }\n\n    public async editModule(device: PlaceModule) {\n        await this._state.edit(device).catch((_) => null);\n        this._change.next(Date.now());\n    }\n\n    public async selectTrigger() {\n        const ref = this._dialog.open<\n            SelectItemModalComponent,\n            SelectItemModalData\n        >(SelectItemModalComponent, {\n            data: {\n                service_name: 'Triggers',\n                query_fn: (_) =>\n                    queryTriggers({ q: _ }).pipe(map((resp) => resp.data)),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'action'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (!details || !details.reason) return ref.close();\n        const t = await this.addTrigger(ref.componentInstance.item);\n        ref.close();\n        this._change.next(Date.now());\n        return t;\n    }\n\n    public async addTrigger(trigger: PlaceTrigger) {\n        const t = await addSystemTrigger(this.active_item.id, {\n            control_system_id: this.active_item.id,\n            enabled: true,\n            important: false,\n            trigger_id: trigger.id,\n        } as any).toPromise();\n        this.timeout('change', () => this._change.next(Date.now()));\n        return t;\n    }\n\n    public async editTrigger(trigger: PlaceTrigger) {\n        if (this.item && trigger) {\n            const ref = this._dialog.open(ItemCreateUpdateModalComponent, {\n                height: 'auto',\n                width: 'auto',\n                maxHeight: 'calc(100vh - 2em)',\n                maxWidth: 'calc(100vw - 2em)',\n                data: {\n                    item: trigger,\n                    name: 'Trigger',\n                    save: (item) => updateTrigger(item.id, item),\n                    external_save: true,\n                },\n            });\n            const details = await Promise.race([\n                ref.componentInstance.event\n                    .pipe(first((_) => _.reason === 'action'))\n                    .toPromise(),\n                ref.afterClosed().toPromise(),\n            ]);\n            if (!details || !details.reason) return;\n            ref.componentInstance.loading = 'Saving trigger settings...';\n\n            const url = `${apiEndpoint()}/systems/${\n                this.active_item.id\n            }/triggers/${trigger.id}`;\n            const trig = await put(url, details.metadata)\n                .toPromise()\n                .catch((err) => {\n                    notifyError(\n                        `Error updating trigger settings. Error: ${JSON.stringify(\n                            err.response || err.message || err\n                        )}`\n                    );\n                    throw err;\n                });\n            ref.close();\n            if (!trig) return trigger;\n            notifySuccess(`Successfully updated trigger settings.`);\n            this.timeout('change', () => this._change.next(Date.now()));\n            return trig;\n        }\n    }\n\n    public async removeTrigger(trigger: PlaceTrigger) {\n        const details = await this.confirm({\n            title: `Remove trigger`,\n            content: `<p>Are you sure you want remove trigger \"${trigger.name}\"?</p><p>Configuration will be updated <strong>immediately</strong>.</p>`,\n            icon: { type: 'icon', class: 'backoffice-trash' },\n        });\n        if (!details || !details.reason) return;\n        await removeSystemTrigger(this.active_item.id, trigger.id)\n            .toPromise()\n            .catch((err) => {\n                details.close();\n                notifyError(\n                    `Error removing trigger ${trigger.id} from system. Error: ${\n                        err.statusText || err.message || err\n                    }`\n                );\n                throw err;\n            });\n        details.close();\n        notifySuccess(`Successfully removed trigger from system.`);\n        this._change.next(Date.now());\n    }\n\n    public async reorderModules(fst: number, snd: number) {\n        const details = await this.confirm({\n            title: 'Change order?',\n            content: `Are you sure you want to change the module priority?<br>Settings will be updated immediately for the system.`,\n            icon: { type: 'icon', class: 'backoffice-layers' },\n        });\n        if (!details || !details.reason) return;\n        details.loading('Updating module order...');\n        const list: string[] = [...this.active_item.modules];\n        moveItemInArray(list, fst, snd);\n        const resp = await updateSystem(this.active_item.id, {\n            ...this.active_item,\n            modules: list,\n        })\n            .toPromise()\n            .catch((err) => {\n                notifyError(\n                    `Failed to reorder system modules: ${JSON.stringify(\n                        err.response || err.message || err\n                    )}`\n                );\n                return err;\n            });\n        details.close();\n        if (resp instanceof PlaceSystem) {\n            notifySuccess(`Successfully reordered system modules.`);\n            this._state.replaceItem(resp);\n        }\n    }\n\n    public async reorderZones(order: string[]) {\n        if (order.length !== this.active_item.zones.length) return;\n        const details = await this.confirm({\n            title: 'Change order?',\n            content: `Are you sure you want to change the zone priority?<br>Settings will be updated immediately for the system.`,\n            icon: { type: 'icon', class: 'backoffice-layers' },\n        });\n        if (!details || !details.reason) return;\n        details.loading('Updating zone order...');\n        const resp = await updateSystem(this.active_item.id, {\n            ...this.active_item,\n            zones: order,\n        })\n            .toPromise()\n            .catch((err) => {\n                notifyError(\n                    `Failed to reorder system zones: ${JSON.stringify(\n                        err.response || err.message || err\n                    )}`\n                );\n                return err;\n            });\n        if (resp instanceof PlaceSystem) {\n            notifySuccess(`Successfully reordered system zones.`);\n            this._state.replaceItem(resp);\n        }\n        details.close();\n    }\n\n    /**\n     * Associate module with the active system\n     * @param id ID of the module to associate with the active system\n     */\n    public async joinModule(id: string) {\n        await addSystemModule(this.active_item.id, id)\n            .toPromise()\n            .catch((err) => {\n                notifyError(\n                    `Error adding module ${id} to system. Error: ${\n                        err.statusText || err.message || err\n                    }`\n                );\n            });\n        this.timeout('join', async () => {\n            const system = await showSystem(this.active_item.id).toPromise();\n            if (!system) return;\n            this._state.replaceItem(system);\n            notifySuccess(`Successfully added module to system.`);\n            this._change.next(Date.now());\n        });\n    }\n\n    /**\n     * Remove associated module from the active system\n     * @param id ID of the module to disassociate with the active system\n     */\n    public async removeModule(device: PlaceModule) {\n        const details = await this.confirm({\n            title: 'Remove module?',\n            content: `Remove ${device.driver_id} from this system?<br>If this is not used elsewhere the associated data will be removed immediately.`,\n            icon: { type: 'icon', class: 'backoffice-trash' },\n        });\n        if (!details || !details.reason) return;\n        const system = await removeSystemModule(this.active_item.id, device.id)\n            .toPromise()\n            .catch((err) => {\n                notifyError(\n                    `Error removing module ${device.id} from system. Error: ${\n                        err.statusText || err.message || err\n                    }`\n                );\n            });\n        details.close();\n        if (!system) return;\n        this._state.replaceItem(system);\n        notifySuccess(`Successfully removed module from system.`);\n    }\n\n    /**\n     * Reload module from the active system\n     * @param id ID of the module to disassociate with the active system\n     */\n    public async reloadModule(device: PlaceModule) {\n        const details = await this.confirm({\n            title: 'Recompile module?',\n            content: `New driver code will be loaded and the device settings will be reloaded.`,\n            icon: { type: 'icon', class: 'backoffice-install' },\n        });\n        if (!details || !details.reason) return;\n        details.loading('Recompiling and reloading driver...');\n        await recompileDriver(device.driver?.id || device.driver_id)\n            .toPromise()\n            .catch((err) => {\n                notifyError(\n                    `Error removing module ${device.id} from system. Error: ${\n                        err.statusText || err.message || err\n                    }`\n                );\n                throw err;\n            });\n        notifySuccess(`Successfully removed module from system.`);\n        details.close();\n    }\n\n    /**\n     * Add list of zones to the system\n     * @param zones List of zones to add\n     */\n    public async addZones(zone_list: PlaceZone[]) {\n        const zones = unique([\n            ...this.active_item.zones,\n            ...zone_list.map((_) => _.id),\n        ]);\n        const system = await updateSystem(this.active_item.id, {\n            ...this.active_item,\n            zones,\n        })\n            .toPromise()\n            .catch((err) => {\n                notifyError(\n                    `Error adding ${\n                        zone_list.length\n                    } zone(s) to system. Error: ${\n                        err.statusText || err.message || err\n                    }`\n                );\n            });\n        if (!system) return;\n        this._state.replaceItem(system);\n        notifySuccess(`Successfully added zone to system.`);\n    }\n\n    /**\n     * Remove associated module from the active system\n     * @param id ID of the module to disassociate with the active system\n     */\n    public async removeZone(zone: PlaceZone) {\n        const details = await this.confirm({\n            title: 'Remove zone?',\n            content: `<p>Are you sure you want remove zone \"${zone.name}\" from the system?</p>Configuration will be updated immediately.`,\n            icon: { type: 'icon', class: 'backoffice-trash' },\n        });\n        if (!details || !details.reason) return;\n        const zones = this.active_item.zones.filter((z) => z !== zone.id);\n        const system = await updateSystem(this.active_item.id, {\n            ...this.active_item,\n            zones,\n        })\n            .toPromise()\n            .catch((err) => {\n                notifyError(\n                    `Error removing zone ${zone.id} from system. Error: ${\n                        err.statusText || err.message || err\n                    }`\n                );\n            });\n        details.close();\n        if (!system) return;\n        this._state.replaceItem(system);\n        notifySuccess(`Successfully removed zone from system.`);\n    }\n\n    /**\n     * Toggle the power state\n     * @param device Module to toggle the power state\n     */\n    public async toggleModulePower(device: PlaceModule) {\n        const method = device.running ? stopModule : startModule;\n        await method(device.id)\n            .toPromise()\n            .catch((err) => {\n                if (typeof err === 'string' && err.length < 64) {\n                    notifyError(err);\n                } else {\n                    notifyError(\n                        `Failed to ${\n                            device.running ? 'stop' : 'start'\n                        } module '${device.id}'.\\nView Error?`,\n                        'View',\n                        () => this.viewDetails(err)\n                    );\n                }\n                throw err;\n            });\n        notifySuccess(\n            `Module successfully ${device.running ? 'stopped' : 'started'}`\n        );\n        (device as any).running = !device.running;\n    }\n\n    /** View Results of the execute */\n    private viewDetails(content: any) {\n        this._dialog.open<ViewResponseModalComponent>(\n            ViewResponseModalComponent,\n            {\n                data: { content },\n            }\n        );\n    }\n\n    private async confirm(data: ConfirmModalData) {\n        return openConfirmModal(data, this._dialog);\n    }\n}\n","import { Component } from '@angular/core';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport { SystemStateService } from './system-state.service';\n\n@Component({\n    selector: 'system-about',\n    template: `\n        <section class=\"flex items-center space-x-2 mb-4\">\n            <div\n                class=\"rounded p-2 border border-base-200  space-y-2 w-1/3 flex-1 flex flex-col\"\n            >\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"item?.support_url\"\n                >\n                    <label i18n=\"@@systemUrlLabel\">Support URL:</label>\n                    <div class=\"value\">\n                        <a\n                            class=\"underline\"\n                            [href]=\"item?.support_url\"\n                            target=\"_blank\"\n                            >{{ item?.support_url }}</a\n                        >\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"item?.bookable\">\n                    <label i18n=\"@@systemBookableLabel\">Bookable Room:</label>\n                    <div class=\"value\">{{ item?.bookable ? 'Yes' : 'No' }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"item?.bookable\">\n                    <label i18n=\"@@systemPublicLabel\">\n                        Publicly Available:\n                    </label>\n                    <div class=\"value\">{{ item?.public ? 'Yes' : 'No' }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"item?.code\">\n                    <label i18n=\"@@codeLabel\">Code:&nbsp;</label>\n                    <p>{{ item?.code }}</p>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"item?.email\">\n                    <label i18n=\"@@emailLabel\">Email:&nbsp;</label>\n                    <a\n                        *ngIf=\"item?.email\"\n                        class=\"underline select-all truncate\"\n                        [href]=\"'mailto:' + item?.email\"\n                        target=\"_blank\"\n                        >{{ item?.email }}</a\n                    >\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"item?.capacity\">\n                    <label i18n=\"@@capacityLabel\">Capacity:</label>\n                    <div class=\"value\">{{ item?.capacity }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"item?.map_id\">\n                    <label i18n=\"@@mapIdLabel\">Map ID:</label>\n                    <div class=\"value mono\">{{ item?.map_id }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"item?.installed_ui_devices\"\n                >\n                    <label i18n=\"@@systemPanelCountLabel\"\n                        >Installed Touch Panels:</label\n                    >\n                    <div class=\"value\">{{ item?.installed_ui_devices }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"item?.timezone\">\n                    <label i18n=\"@@systemTimezoneLabel\">Timezone:</label>\n                    <div class=\"value\">{{ item?.timezone }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"item?.created_at\"\n                >\n                    <label i18n=\"@@systemCreatedAtLabel\">Created:</label>\n                    <div class=\"value\">\n                        {{ item?.created_at * 1000 | dateFrom }}\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"item?.updated_at\"\n                >\n                    <label i18n=\"@systemUpdatedAtLabel\">Updated:</label>\n                    <div class=\"value\">\n                        {{ item?.updated_at * 1000 | dateFrom }}\n                    </div>\n                </div>\n            </div>\n            <div\n                class=\"rounded p-2 border border-base-200  space-y-2 w-1/3 flex-1 flex flex-col\"\n            >\n                <h3 class=\"w-full text-center\">System Controls</h3>\n                <button\n                    btn\n                    start\n                    class=\"w-full\"\n                    (click)=\"start()\"\n                    i18n=\"@@systemStartAction\"\n                >\n                    Start System\n                </button>\n                <button\n                    btn\n                    stop\n                    class=\"w-full\"\n                    (click)=\"stop()\"\n                    i18n=\"@@systemStopAction\"\n                >\n                    Stop System\n                </button>\n            </div>\n        </section>\n        <hr class=\"my-4\" />\n        <header class=\"font-medium text-lg\" i18n=\"@@settingsLabel\">\n            Settings\n        </header>\n        <section *ngIf=\"item?.settings && other_settings; else load_state\">\n            <a-settings-form\n                [id]=\"item?.id\"\n                [merge]=\"true\"\n                [settings]=\"item?.settings\"\n                [merge_settings]=\"(other_settings | async) || []\"\n            ></a-settings-form>\n        </section>\n        <ng-template #load_state>\n            <div class=\"flex flex-col p-8 items-center justify-center\">\n                <mat-spinner class=\"mb-4\" [diameter]=\"32\"></mat-spinner>\n                <p i18n=\"@@systemLoadingLabel\">Loading system settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            button {\n                min-width: 8rem;\n            }\n        `,\n    ],\n})\nexport class SystemAboutComponent {\n    /** List of settings for associated modules, drivers and zones */\n    public readonly other_settings = this._service.associated_settings;\n\n    public readonly start = () => this._service.startSystem();\n    public readonly stop = () => this._service.stopSystem();\n\n    public get item(): PlaceSystem {\n        return this._service.active_item as any;\n    }\n\n    constructor(private _service: SystemStateService) {}\n}\n","import { CdkDragDrop } from '@angular/cdk/drag-drop';\nimport { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    loadModule,\n    PlaceDriverRole,\n    PlaceModule,\n    PlaceSystem,\n    queryModules,\n    showModule,\n} from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\nimport { AsyncHandler } from 'apps/backoffice/src/app/common/async-handler.class';\nimport {\n    notifyError,\n    notifySuccess,\n} from 'apps/backoffice/src/app/common/notifications';\nimport { AppLink, HashMap } from 'apps/backoffice/src/app/common/types';\nimport {\n    ModuleStateModalData,\n    ViewModuleStateModalComponent,\n} from 'apps/backoffice/src/app/overlays/view-module-state/view-module-state.component';\nimport { SystemStateService } from './system-state.service';\n\n@Component({\n    selector: 'system-modules',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <section add-module class=\"flex space-x-2 flex-wrap mb-2\">\n                <item-search-field\n                    class=\"flex-grow-1 w-full sm:flex-1 sm:w-auto h-12\"\n                    name=\"module\"\n                    placeholder=\"Add existing module\"\n                    [query_fn]=\"query_fn\"\n                    [exclude]=\"exclude_fn\"\n                    [ngModel]=\"null\"\n                    (ngModelChange)=\"new_module = $event.id\"\n                ></item-search-field>\n                <button\n                    btn\n                    class=\"flex-1 w-40 sm:w-32 sm:flex-none h-11\"\n                    [disabled]=\"!new_module\"\n                    (click)=\"addModule()\"\n                    i18n=\"@@addExistingAction\"\n                >\n                    Add existing\n                </button>\n                <button\n                    btn\n                    class=\"flex-1 w-40 sm:w-32 sm:flex-none h-11\"\n                    (click)=\"newModule()\"\n                    i18n=\"@@newAction\"\n                >\n                    Add new\n                </button>\n            </section>\n            <section\n                exec\n                *ngIf=\"item.id && item.modules && !hide_exec\"\n                class=\"mb-2\"\n            >\n                <h3 class=\"font-medium text-lg mb-2\" i18n=\"@@execHeader\">\n                    Execute command\n                </h3>\n                <execute-method-field\n                    [system]=\"item$ | async\"\n                ></execute-method-field>\n            </section>\n            <section device-list>\n                <h3 class=\"font-medium text-lg mb-2\" i18n=\"@@moduleListHeader\">\n                    Module List\n                </h3>\n                <ng-container\n                    *ngIf=\"!(loading | async).modules; else load_state\"\n                >\n                    <div\n                        role=\"table\"\n                        class=\"overflow-x-auto min-w-[60rem]\"\n                        *ngIf=\"(modules | async)?.length; else empty_state\"\n                    >\n                        <div table-head class=\"text-sm\">\n                            <div class=\"w-10 p-2\"></div>\n                            <div class=\"w-12 p-2\" i18n=\"@@moduleStateLabel\">\n                                State\n                            </div>\n                            <div class=\"flex-1 p-2\" i18n=\"@@moduleNameLabel\">\n                                Name\n                            </div>\n                            <div class=\"w-24 p-2\" i18n=\"@@moduleTypeLabel\">\n                                Type\n                            </div>\n                            <div class=\"w-48 p-2\" i18n=\"@@moduleClassLabel\">\n                                Class\n                            </div>\n                            <div class=\"w-48 p-2\" i18n=\"@@moduleIpLabel\">\n                                IP/URI\n                            </div>\n                            <div\n                                class=\"w-[3.5rem] p-2\"\n                                i18n=\"@@moduleStateLabel\"\n                            >\n                                Debug\n                            </div>\n                            <div class=\"w-24 p-2 h-9\"></div>\n                        </div>\n                        <div\n                            body\n                            cdkDropList\n                            (cdkDropListDropped)=\"drop($event)\"\n                            class=\"overflow-y-auto\"\n                        >\n                            <div\n                                table-row\n                                cdkDrag\n                                *ngFor=\"\n                                    let device of modules | async;\n                                    let i = index\n                                \"\n                                [context-menu]=\"menu\"\n                                (contextAction)=\"\n                                    handleContextEvent($event, device)\n                                \"\n                            >\n                                <div\n                                    class=\"w-[calc(100-0.5rem)] m-1 h-10 rounded border-2 border-dashed border-neutral bg-base-200\"\n                                    *cdkDragPlaceholder\n                                ></div>\n                                <div\n                                    class=\"w-10 flex justify-center h-full\"\n                                    style=\"cursor: grab\"\n                                >\n                                    <app-icon\n                                        className=\"backoffice-select-arrows\"\n                                        cdkDragHandle\n                                    ></app-icon>\n                                </div>\n                                <div\n                                    class=\"w-12 flex items-center justify-center p-2 h-full relative\"\n                                >\n                                    <div\n                                        dot\n                                        binding\n                                        [sys]=\"item.id\"\n                                        [mod]=\"(bindings | async)[i]\"\n                                        bind=\"connected\"\n                                        [(model)]=\"device.connected\"\n                                        class=\"h-4 w-4 rounded-full\"\n                                        [class.bg-base-content]=\"\n                                            !device.running\n                                        \"\n                                        [class.bg-error]=\"\n                                            device.running &&\n                                            device.connected === false\n                                        \"\n                                        [class.bg-success]=\"\n                                            device.running && !!device.connected\n                                        \"\n                                        [class.bg-pending]=\"\n                                            device.running &&\n                                            device.connected === undefined\n                                        \"\n                                        (click)=\"power(device)\"\n                                    ></div>\n                                    <mat-spinner\n                                        *ngIf=\"\n                                            device.running &&\n                                            device.connected === undefined\n                                        \"\n                                        class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 pointer-events-none\"\n                                        diameter=\"32\"\n                                    ></mat-spinner>\n                                </div>\n                                <div\n                                    class=\"flex items-center flex-1 h-full p-2\"\n                                >\n                                    <div\n                                        class=\"flex-1 flex flex-col justify-center w-px\"\n                                    >\n                                        <a\n                                            [routerLink]=\"[\n                                                '/modules',\n                                                device.id\n                                            ]\"\n                                            (contextmenu)=\"\n                                                $event.stopPropagation()\n                                            \"\n                                            class=\"truncate underline underline-offset-4 w-full\"\n                                            [title]=\"\n                                                device.driver?.name ||\n                                                '<Unnamed>'\n                                            \"\n                                        >\n                                            {{\n                                                device.driver?.name ||\n                                                    '&lt;Unnamed&gt;'\n                                            }}\n                                        </a>\n                                        <div\n                                            class=\"text-xs truncate w-full\"\n                                            *ngIf=\"device.notes\"\n                                        >\n                                            {{ device.notes }}\n                                        </div>\n                                    </div>\n                                    <a\n                                        *ngIf=\"device.edge_id\"\n                                        matRipple\n                                        class=\"text-xs h-6 w-6 rounded-full bg-info flex items-center justify-center shadow text-info-content\"\n                                        [matTooltip]=\"device.edge_id\"\n                                        [routerLink]=\"[\n                                            '/admin',\n                                            'edge',\n                                            device.edge_id\n                                        ]\"\n                                    >\n                                        E\n                                    </a>\n                                </div>\n                                <div class=\"w-24 p-2\">\n                                    {{\n                                        driver_type(\n                                            device.role || device.driver?.role\n                                        )\n                                    }}\n                                </div>\n                                <div class=\"w-48 p-2\">\n                                    <span\n                                        class=\"truncate\"\n                                        [title]=\"(bindings | async)[i]\"\n                                        >{{ (bindings | async)[i] }}</span\n                                    >\n                                </div>\n                                <div\n                                    class=\"w-48 text-right flex items-center h-full p-2\"\n                                >\n                                    <app-icon\n                                        *ngIf=\"device.tls\"\n                                        className=\"backoffice-lock\"\n                                    ></app-icon>\n                                    <a\n                                        [href]=\"\n                                            device.ip\n                                                ? (device.tls\n                                                      ? 'https://'\n                                                      : 'http://') + device.ip\n                                                : device.uri\n                                        \"\n                                        target=\"_blank\"\n                                        class=\"truncate underline\"\n                                        >{{ device.ip || device.uri }}</a\n                                    >\n                                </div>\n                                <div\n                                    class=\"w-[3.5rem] flex items-center justify-center p-2 h-full\"\n                                >\n                                    <mat-checkbox\n                                        [disabled]=\"!device.running\"\n                                        [checked]=\"\n                                            (debugging | async)[device.id]\n                                        \"\n                                        [matTooltip]=\"\n                                            ((debugging | async)[device.id]\n                                                ? 'Disable'\n                                                : 'Enable') + ' Debugging'\n                                        \"\n                                        matTooltipPosition=\"left\"\n                                        (change)=\"toggleDebug(device)\"\n                                    >\n                                    </mat-checkbox>\n                                </div>\n                                <div class=\"w-24 flex px-2 justify-center\">\n                                    <button icon (click)=\"editModule(device)\">\n                                        <app-icon\n                                            className=\"backoffice-edit\"\n                                        ></app-icon>\n                                    </button>\n                                    <button icon [matMenuTriggerFor]=\"menu\">\n                                        <app-icon\n                                            className=\"backoffice-dots-three-vertical\"\n                                        ></app-icon>\n                                    </button>\n                                    <mat-menu #menu=\"matMenu\">\n                                        <button\n                                            mat-menu-item\n                                            *ngFor=\"\n                                                let item of device.running\n                                                    ? menu_options\n                                                    : offline_options\n                                            \"\n                                            (click)=\"\n                                                handleContextEvent(item, device)\n                                            \"\n                                        >\n                                            <div\n                                                class=\"flex items-center space-x-2\"\n                                            >\n                                                <app-icon\n                                                    [icon]=\"item.icon\"\n                                                ></app-icon>\n                                                <div class=\"text\">\n                                                    {{ item.name }}\n                                                </div>\n                                            </div>\n                                        </button>\n                                    </mat-menu>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n            </section>\n        </ng-container>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 mx-auto\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>Loading modules...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 mx-auto\">\n                <p>No devices for system</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            button[btn] {\n                min-width: 8rem;\n            }\n\n            button.mat-menu-item {\n                display: flex;\n                align-items: center;\n            }\n\n            button .text {\n                margin-left: 1rem;\n            }\n\n            [role='table'] > div {\n                width: 100%;\n                min-width: 48rem;\n            }\n\n            .bg-success {\n                height: 0.5rem !important;\n                width: 0.5rem !important;\n            }\n\n            [dot] {\n                transition: height 200ms, width 200ms;\n            }\n\n            mat-checkbox.mat-checkbox-disabled {\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class SystemModulesComponent extends AsyncHandler {\n    /** Whether a device should be listened to */\n    public device_listener: HashMap<boolean> = {};\n    /** Store for ID of new module to add to system */\n    public new_module: string;\n    /** Whether to show exec block */\n    public hide_exec: boolean;\n\n    public readonly item$ = this._service.item;\n    public readonly loading = this._service.loading;\n    public readonly modules = this._service.modules;\n    public readonly debugging = this._service.debug_state;\n    public readonly bindings = this._service.module_bindings;\n    /** Actions available for the context menu */\n    public menu_options: AppLink[] = [\n        {\n            id: 'power',\n            name: 'Toggle Power',\n            icon: { type: 'icon', class: 'backoffice-power-plug' },\n        },\n        {\n            id: 'state',\n            name: 'View State',\n            icon: { type: 'icon', class: 'backoffice-eye' },\n        },\n        {\n            id: 'reload',\n            name: 'Recompile Driver',\n            icon: { type: 'icon', class: 'backoffice-cw' },\n        },\n        {\n            id: 'edit',\n            name: 'Edit Module',\n            icon: { type: 'icon', class: 'backoffice-edit' },\n        },\n        {\n            id: 'remove',\n            name: 'Remove Module',\n            icon: { type: 'icon', class: 'backoffice-trash' },\n        },\n        {\n            id: 'load',\n            name: 'Load Module',\n            icon: { type: 'icon', class: 'backoffice-arrow-with-circle-up' },\n        },\n    ];\n\n    public offline_options: AppLink[] = [\n        {\n            id: 'power',\n            name: 'Toggle Power',\n            icon: { type: 'icon', class: 'backoffice-power-plug' },\n        },\n        {\n            id: 'edit',\n            name: 'Edit Module',\n            icon: { type: 'icon', class: 'backoffice-edit' },\n        },\n        {\n            id: 'remove',\n            name: 'Remove Module',\n            icon: { type: 'icon', class: 'backoffice-trash' },\n        },\n        {\n            id: 'load',\n            name: 'Load Module',\n            icon: { type: 'icon', class: 'backoffice-arrow-with-circle-up' },\n        },\n    ];\n    /** Query method for modules */\n    public readonly query_fn = (_: string) =>\n        queryModules({ q: _ }).pipe(\n            map((_) =>\n                _.data\n                    .map((mod) => ({ ...mod, extra: mod.driver?.name }))\n                    .filter((_) => !_.control_system_id)\n            )\n        );\n    /** Function for excluding modules already within this system */\n    public readonly exclude_fn = (item: PlaceModule) =>\n        item.control_system_id === this.item.id ||\n        item.role === PlaceDriverRole.Logic;\n\n    public readonly newModule = () => this._service.newModule();\n    public readonly removeModule = (d) => this._service.removeModule(d);\n    public readonly editModule = (d) => this._service.editModule(d);\n    public readonly joinModule = (id) => this._service.joinModule(id);\n    public readonly reloadModule = (d) => this._service.reloadModule(d);\n    public readonly toggleDebug = (d) => this._service.toggleModuleDebug(d);\n    public readonly power = (d) => this._service.toggleModulePower(d);\n\n    public driver_type(role: PlaceDriverRole): string {\n        if (role == null) return '';\n        switch (role) {\n            case PlaceDriverRole.Device:\n                return 'Device';\n            case PlaceDriverRole.SSH:\n                return 'SSH';\n            case PlaceDriverRole.Service:\n                return 'Service';\n            case PlaceDriverRole.Websocket:\n                return 'Websocket';\n        }\n        return 'Logic';\n    }\n\n    public get item(): PlaceSystem {\n        return this._service.active_item as any;\n    }\n\n    constructor(\n        private _service: SystemStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /**\n     * Handle context menu event\n     * @param event Event posted by the context menu\n     * @param device Module associated with the context menu event\n     */\n    public handleContextEvent(event: AppLink, device: PlaceModule) {\n        if (event) {\n            switch (event.id) {\n                case 'power':\n                    this.power(device);\n                    break;\n                case 'state':\n                    this.viewState(device);\n                    break;\n                case 'reload':\n                    this.reloadModule(device);\n                    break;\n                case 'remove':\n                    this.removeModule(device);\n                    break;\n                case 'load':\n                    this.loadModule(device);\n                    break;\n                case 'edit':\n                    this.editModule(device);\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Update the state of the module\n     * @param device Module to reload\n     */\n    public async reload(device: PlaceModule) {\n        const item = await showModule(device.id).toPromise();\n        for (const k in item) {\n            if (item.hasOwnProperty(k)) {\n                device[k] = item[k];\n            }\n        }\n    }\n\n    public async viewState(device: PlaceModule) {\n        const modules = this._service.getModules();\n        this._dialog.open<ViewModuleStateModalComponent, ModuleStateModalData>(\n            ViewModuleStateModalComponent,\n            { data: { system: this.item, module: device, devices: modules } }\n        );\n    }\n\n    public loadModule(device: PlaceModule) {\n        loadModule(device.id)\n            .toPromise()\n            .then(\n                () =>\n                    notifySuccess(\n                        `Successfully loaded module \"${\n                            device.name || device.id\n                        }\"`\n                    ),\n                (err) =>\n                    notifyError(\n                        `Error loading module. Error: ${JSON.stringify(\n                            err.response || err.message || err\n                        )}`\n                    )\n            );\n    }\n\n    /**\n     * Handle drop event for reordering the devices\n     * @param event Drag drop details\n     */\n    public drop(event: CdkDragDrop<any[]>) {\n        if (event && event.previousIndex !== event.currentIndex) {\n            this._service.reorderModules(\n                event.previousIndex,\n                event.currentIndex\n            );\n        }\n    }\n\n    public addModule() {\n        if (!this.new_module) return;\n        this.joinModule(this.new_module);\n        this.new_module = '';\n    }\n}\n","import { Component } from '@angular/core';\nimport { PlaceTrigger } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { copyToClipboard, unique } from '../common/general';\nimport { notifyInfo } from '../common/notifications';\n\nimport { HashMap } from '../common/types';\nimport { SystemStateService } from './system-state.service';\n\nexport interface TriggerInstanceState {\n    triggered: boolean;\n    trigger_count: number;\n    action_errors: number;\n    comparison_errors: number;\n    conditions: HashMap<boolean>;\n}\n\n@Component({\n    selector: 'system-triggers',\n    template: `\n        <section class=\"flex items-center mb-4 space-x-2\">\n            <button btn style=\"min-width: 8rem\" (click)=\"selectTrigger()\">\n                Add Trigger\n            </button>\n            <mat-form-field appearance=\"outline\" class=\"h-12 flex-1\">\n                <app-icon\n                    matPrefix\n                    className=\"backoffice-magnifying-glass text-xl mr-2\"\n                ></app-icon>\n                <input\n                    [ngModel]=\"''\"\n                    (ngModelChange)=\"filter$.next($event)\"\n                    matInput\n                    placeholder=\"Filter triggers...\"\n                    class=\"rounded-none\"\n                />\n            </mat-form-field>\n        </section>\n        <section>\n            <ng-container *ngIf=\"!(loading | async).triggers; else load_state\">\n                <div\n                    role=\"table\"\n                    class=\"overflow-x-auto\"\n                    *ngIf=\"(triggers | async)?.length; else empty_state\"\n                >\n                    <div table-head>\n                        <div class=\"w-12 p-2\"></div>\n                        <div flex class=\"flex-1 p-2\" i18n=\"@@nameLabel\">\n                            Name\n                        </div>\n                        <div class=\"w-16 p-2\" i18n=\"@@triggerCountLabel\">\n                            Count\n                        </div>\n                        <div class=\"w-16 p-2\" i18n=\"@@triggerErrorsLabel\">\n                            Errors\n                        </div>\n                        <div class=\"w-28 p-2\" i18n=\"@@descriptionLabel\">\n                            Added\n                        </div>\n                        <div class=\"w-32 p-2\"></div>\n                    </div>\n                    <div table-body class=\"overflow-y-auto\">\n                        <div\n                            table-row\n                            *ngFor=\"\n                                let trigger of triggers | async;\n                                let i = index\n                            \"\n                        >\n                            <i\n                                hidden\n                                binding\n                                [sys]=\"item.id\"\n                                mod=\"_TRIGGER__1\"\n                                [bind]=\"trigger.id\"\n                                [(model)]=\"trigger_state[trigger.id]\"\n                                (modelChange)=\"updateComparisons(trigger.id)\"\n                            ></i>\n                            <div\n                                class=\"w-12 flex items-center justify-center h-full p-2\"\n                            >\n                                <div\n                                    class=\"h-2 w-2 rounded-full\"\n                                    [class.bg-base-content]=\"\n                                        !trigger_state[trigger.id]?.triggered\n                                    \"\n                                    [class.bg-success]=\"\n                                        trigger_state[trigger.id]?.triggered\n                                    \"\n                                ></div>\n                            </div>\n                            <div flex class=\"flex-1 p-2\">\n                                <a\n                                    class=\"truncate\"\n                                    [routerLink]=\"['/triggers', trigger.id]\"\n                                    >{{ trigger.name }}</a\n                                >\n                            </div>\n                            <div desc class=\"w-16 p-2\">\n                                {{ trigger_state[trigger.id]?.trigger_count }}\n                            </div>\n                            <div desc class=\"w-16 p-2\">\n                                {{\n                                    trigger_state[trigger.id]?.action_errors +\n                                        trigger_state[trigger.id]\n                                            ?.comparison_errors || '0'\n                                }}\n                            </div>\n                            <div desc class=\"w-28 p-2\">\n                                {{ +trigger.created_at * 1000 | dateFrom }}\n                            </div>\n                            <div class=\"w-32 p-2 items-center justify-center\">\n                                <button\n                                    btn\n                                    icon\n                                    (click)=\"copyWebhookURL(trigger)\"\n                                >\n                                    <app-icon\n                                        className=\"backoffice-link\"\n                                    ></app-icon>\n                                </button>\n                                <button btn icon (click)=\"editTrigger(trigger)\">\n                                    <app-icon\n                                        className=\"backoffice-edit\"\n                                    ></app-icon>\n                                </button>\n                                <button\n                                    btn\n                                    icon\n                                    (click)=\"deleteTrigger(trigger)\"\n                                >\n                                    <app-icon\n                                        className=\"backoffice-trash\"\n                                    ></app-icon>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n        </section>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 mx-auto\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>Loading triggers...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 mx-auto\">\n                <p>No triggers for system</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [flex] {\n                min-width: 8rem;\n            }\n\n            [role='table'] > div {\n                width: 100%;\n                min-width: 36rem;\n            }\n        `,\n    ],\n})\nexport class SystemTriggersComponent {\n    public readonly filter$ = new BehaviorSubject<string>('');\n\n    public readonly loading = this._service.loading;\n\n    public readonly trigger_state: HashMap<TriggerInstanceState> = {};\n\n    public readonly comparisons: HashMap<string> = {};\n\n    public readonly temp_trigger = new BehaviorSubject<PlaceTrigger>(null);\n\n    public readonly triggers = combineLatest([\n        this.filter$,\n        this._service.triggers,\n        this.temp_trigger,\n    ]).pipe(\n        map(([filter, triggers, temp]) => {\n            const search = filter.toLowerCase();\n            const list = unique(temp ? [...triggers, temp] : triggers, 'id');\n            return filter\n                ? list.filter((t) => t.name.toLowerCase().includes(search))\n                : list;\n        })\n    );\n\n    public readonly copyWebhookURL = (t) => {\n        copyToClipboard(\n            `${location.origin}/api/engine/v2/webhook/${t.id}/notify?secret=${t.webhook_secret}`\n        );\n        notifyInfo('Webhook link copied to clipboard');\n    };\n    public readonly editTrigger = async (t) =>\n        this.temp_trigger.next((await this._service.editTrigger(t)) as any);\n    public readonly deleteTrigger = (t) => this._service.removeTrigger(t);\n    public readonly selectTrigger = async () =>\n        this.temp_trigger.next((await this._service.selectTrigger()) || null);\n\n    public get item() {\n        return this._service.active_item;\n    }\n\n    constructor(private _service: SystemStateService) {}\n\n    public updateComparisons(id: string): void {\n        this.comparisons[id] = '';\n        if (this.trigger_state[id]) {\n            for (const key in this.trigger_state[id].conditions) {\n                if (this.trigger_state[id].conditions.hasOwnProperty(key)) {\n                    if (this.comparisons[id]) {\n                        this.comparisons[id] += '\\n';\n                    }\n                    this.comparisons[\n                        id\n                    ] += `${key}: ${this.trigger_state[id].conditions[key]}`;\n                }\n            }\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { PlaceSystem, PlaceZone, queryZones } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { SystemStateService } from './system-state.service';\n\n@Component({\n    selector: 'system-zones',\n    template: `\n        <section class=\"flex items-center space-x-2 mb-4\">\n            <item-search-field\n                name=\"zone\"\n                class=\"flex-1 h-12\"\n                [query_fn]=\"query_fn\"\n                [exclude]=\"exclude_fn\"\n                [clear_on_select]=\"true\"\n                [ngModel]=\"null\"\n                (ngModelChange)=\"addPendingZone($event)\"\n            ></item-search-field>\n            <button\n                btn\n                [disabled]=\"!this.pending_zones.getValue().length\"\n                (click)=\"savePendingZones()\"\n            >\n                Save Pending\n            </button>\n        </section>\n        <section class=\"relative\">\n            <button\n                btn\n                *ngIf=\"order_changed\"\n                class=\"shadow z-50 mb-2\"\n                (click)=\"saveZoneOrder()\"\n            >\n                Save Zone Order\n            </button>\n            <ng-container *ngIf=\"!(loading | async).zones; else load_state\">\n                <div\n                    role=\"table\"\n                    class=\"overflow-x-auto\"\n                    *ngIf=\"(zones | async)?.length\"\n                >\n                    <div table-head>\n                        <div class=\"w-12 p-2\"></div>\n                        <div class=\"w-48 p-2\" i18n=\"@@nameLabel\">Name</div>\n                        <div desc class=\"flex-1 p-2\" i18n=\"@@descriptionLabel\">\n                            Description\n                        </div>\n                        <div class=\"w-16 p-2\"></div>\n                    </div>\n                    <div\n                        body\n                        cdkDropList\n                        (cdkDropListDropped)=\"drop($event)\"\n                        class=\"overflow-y-auto\"\n                    >\n                        <div\n                            table-row\n                            cdkDrag\n                            class=\"bg-opacity-40\"\n                            [class.bg-pending]=\"changed[zone.id]\"\n                            [matTooltip]=\"\n                                changed[zone.id] ? 'Zone order changed' : ''\n                            \"\n                            *ngFor=\"let zone of zones | async; let i = index\"\n                        >\n                            <div\n                                class=\"w-[calc(100-0.5rem)] m-1 h-10 rounded border-2 border-dashed border-neutral bg-base-200 bg-opacity-25\"\n                                *cdkDragPlaceholder\n                            ></div>\n                            <div\n                                class=\"w-12 flex justify-center h-full p-2\"\n                                style=\"cursor: grab\"\n                                [class.pointer-events-none]=\"zone.pending\"\n                                [class.text-pending]=\"zone.pending\"\n                            >\n                                <app-icon\n                                    [className]=\"\n                                        zone.pending\n                                            ? 'backoffice-warning'\n                                            : 'backoffice-select-arrows'\n                                    \"\n                                    cdkDragHandle\n                                ></app-icon>\n                            </div>\n                            <div class=\"w-48 p-2\">\n                                <a [routerLink]=\"['/zones', zone.id]\">\n                                    {{ zone.name }}\n                                </a>\n                            </div>\n                            <div desc class=\"flex-1 truncate\">\n                                {{ zone.description }}\n                            </div>\n                            <div class=\"w-16 p-2 items-center justify-center\">\n                                <button\n                                    btn\n                                    icon\n                                    *ngIf=\"(zones | async).length > 1\"\n                                    (click)=\"removeZone(zone)\"\n                                >\n                                    <app-icon\n                                        className=\"backoffice-trash\"\n                                    ></app-icon>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n        </section>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 mx-auto\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>Loading zones...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [desc] {\n                min-width: 8rem;\n            }\n        `,\n    ],\n})\nexport class SystemZonesComponent {\n    public order_changed = false;\n\n    public changed: Record<string, boolean> = {};\n    /** ID of a zone that the user wishes to add to the system */\n    public readonly pending_zones = new BehaviorSubject<PlaceZone[]>([]);\n    /** ID of a zone that the user wishes to add to the system */\n    public readonly zone_order = new BehaviorSubject<string[]>([]);\n    /** Whether zones for active item are loading */\n    public readonly loading = this._service.loading;\n    /** List of zones assoicated with the active item */\n    public readonly zones = combineLatest([\n        this._service.zones,\n        this.pending_zones,\n        this.zone_order,\n    ]).pipe(\n        map(([zones, pending, order]) =>\n            [...zones, ...pending.map((_) => ({ ..._, pending: true }))].sort(\n                (a, b) => order.indexOf(a.id) - order.indexOf(b.id)\n            )\n        )\n    );\n\n    /** Query function for systems */\n    public readonly query_fn = (_) =>\n        queryZones({ q: _ }).pipe(map((resp) => resp.data));\n\n    public readonly exclude_fn = (zone: PlaceZone) =>\n        this.item.zones.indexOf(zone.id) >= 0;\n\n    public readonly removeZone = (z) =>\n        z.pending\n            ? this.pending_zones.next(\n                  this.pending_zones.getValue().filter((_) => _.id !== z.id)\n              )\n            : this._service.removeZone(z);\n\n    public readonly addPendingZone = (z) =>\n        this.pending_zones.next([...this.pending_zones.getValue(), z]);\n\n    public readonly savePendingZones = async () => {\n        if (!this.pending_zones.getValue().length) return;\n        await this._service.addZones(this.pending_zones.getValue());\n        this.pending_zones.next([]);\n    };\n\n    public readonly saveZoneOrder = async () => {\n        const zones = await this._service.zones.pipe(take(1)).toPromise();\n        let zone_order = this.zone_order.getValue();\n        if (zones.every(({ id }, idx) => zone_order[idx] === id)) return;\n        await this._service.reorderZones(zone_order);\n        this.order_changed = false;\n        this.changed = {};\n        this.zone_order.next([]);\n    };\n\n    public get item(): PlaceSystem {\n        return this._service.active_item as any;\n    }\n\n    constructor(private _service: SystemStateService) {}\n\n    public async drop(event) {\n        if (event && event.previousIndex !== event.currentIndex) {\n            const zones = await this._service.zones.pipe(take(1)).toPromise();\n            let zone_order = this.zone_order.getValue();\n            if (zone_order.length !== zones.length) {\n                zone_order = zones.map((_) => _.id);\n            }\n            const item = zone_order.splice(event.previousIndex, 1);\n            this.changed[item[0]] = true;\n            zone_order.splice(event.currentIndex, 0, item[0]);\n            this.zone_order.next(zone_order);\n            this.order_changed = !zones.every(\n                ({ id }, idx) => zone_order[idx] === id\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport { ActiveItemService } from 'apps/backoffice/src/app/common/item.service';\n\n@Component({\n    selector: 'system-metadata',\n    template: `\n        <metadata-display *ngIf=\"item\" [item]=\"item\"></metadata-display>\n    `,\n    styles: [``],\n})\nexport class SystemMetadataComponent {\n    public get item(): PlaceSystem {\n        return this._service.active_item as any;\n    }\n\n    constructor(private _service: ActiveItemService) {}\n}\n","import { Component } from '@angular/core';\nimport { extensionsForItem } from '../common/api';\nimport { AsyncHandler } from '../common/async-handler.class';\nimport { PlaceDebugService } from '../common/debug.service';\nimport { ActiveItemService } from '../common/item.service';\nimport { SystemStateService } from './system-state.service';\n\n@Component({\n    selector: 'new-systems-view',\n    template: `\n        <div\n            class=\"absolute inset-0 flex items-center divide-y sm:divide-y-0 sm:divide-x divide-base-200 bg-base-100 \"\n        >\n            <sidebar-menu [(open)]=\"open_menu\" class=\"sm:h-full\"></sidebar-menu>\n            <div class=\"flex flex-col h-full flex-1 overflow-hidden w-px\">\n                <div class=\"flex flex-1 h-px\">\n                    <item-sidebar class=\"hidden sm:block\"></item-sidebar>\n                    <div class=\"flex-1 w-1/2 h-full relative flex flex-col z-0\">\n                        <item-selection class=\"z-20 sm:hidden\">\n                            <button\n                                btn\n                                icon\n                                class=\"sm:hidden mr-2\"\n                                (click)=\"open_menu = true\"\n                            >\n                                <app-icon\n                                    className=\"backoffice-menu\"\n                                ></app-icon>\n                            </button>\n                        </item-selection>\n                        <div class=\"flex flex-col flex-1 h-1/2\">\n                            <ng-container *ngIf=\"item?.id\">\n                                <item-details\n                                    [can_edit]=\"true\"\n                                    [item]=\"item\"\n                                    type=\"System\"\n                                ></item-details>\n                                <item-tablist\n                                    [base]=\"name\"\n                                    [tabs]=\"tab_list\"\n                                    [scrolled]=\"scroll > 0\"\n                                    class=\"z-10\"\n                                ></item-tablist>\n                                <div\n                                    #el\n                                    class=\"flex-1 h-1/2 w-full overflow-auto p-4 z-0 relative\"\n                                    (scroll)=\"scroll = el.scrollTop\"\n                                >\n                                    <router-outlet></router-outlet>\n                                </div>\n                            </ng-container>\n                        </div>\n                        <button\n                            class=\"absolute bottom-2 left-2 sm:-left-9 w-12 h-12 flex items-center justify-center bg-secondary rounded-lg shadow z-30 text-secondary-content\"\n                            matTooltip=\"New system\"\n                            matTooltipPosition=\"right\"\n                            matRipple\n                            (click)=\"newItem()\"\n                        >\n                            <app-icon\n                                [className]=\"'backoffice-plus'\"\n                                class=\"text-3xl\"\n                            ></app-icon>\n                        </button>\n                        <button\n                            class=\"absolute bottom-16 left-2 sm:-left-8 w-10 h-10 flex items-center justify-center bg-secondary rounded-lg shadow z-30 text-secondary-content\"\n                            matTooltip=\"Bulk add systems\"\n                            matTooltipPosition=\"right\"\n                            matRipple\n                            (click)=\"bulkAdd()\"\n                        >\n                            <app-icon class=\"text-2xl\">playlist_add</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <app-debug-output\n                    below\n                    *ngIf=\"debug_position === 'below'\"\n                ></app-debug-output>\n            </div>\n            <app-debug-output\n                side\n                *ngIf=\"debug_position === 'side'\"\n                class=\"h-full max-w-[30rem]\"\n            ></app-debug-output>\n        </div>\n    `,\n    styles: [``],\n})\nexport class SystemsComponent extends AsyncHandler {\n    public readonly name = 'systems';\n    public open_menu = false;\n    public scroll = 0;\n\n    public tab_list = [];\n\n    public readonly newItem = () => this._item.create();\n    public readonly bulkAdd = () => this._item.bulkAdd();\n\n    public get item() {\n        return this._service.active_item;\n    }\n\n    public get extensions() {\n        return extensionsForItem(this._service.active_item, this.name);\n    }\n\n    public get debug_position() {\n        return this._debug.position;\n    }\n\n    public updateTabList(counts?: Record<string, number>) {\n        this.tab_list = [\n            {\n                id: 'about',\n                name: 'About',\n                icon: { class: 'backoffice-info-with-circle' },\n            },\n            {\n                id: 'modules',\n                name: 'Modules',\n                count: counts?.devices ?? '?',\n                icon: { class: 'backoffice-tablet' },\n            },\n            {\n                id: 'zones',\n                name: 'Zones',\n                count: counts?.zones ?? '?',\n                icon: { class: 'backoffice-layers' },\n            },\n            {\n                id: 'triggers',\n                name: 'Triggers',\n                count: counts?.triggers ?? '?',\n                icon: { class: 'backoffice-stopwatch' },\n            },\n            {\n                id: 'metadata',\n                name: 'Metadata',\n                count: counts?.metadata ?? '?',\n                icon: { class: 'backoffice-gist' },\n            },\n            {\n                id: 'history',\n                name: 'Settings History',\n                icon: { class: 'backoffice-clock' },\n            },\n        ].concat(this.extensions);\n    }\n\n    constructor(\n        protected _service: SystemStateService,\n        private _item: ActiveItemService,\n        private _debug: PlaceDebugService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item-change',\n            this._item.active_item$.subscribe(() => this.updateTabList({}))\n        );\n        this.subscription(\n            'counts',\n            this._service.counts.subscribe((counts) =>\n                this.updateTabList(counts)\n            )\n        );\n    }\n}\n","import { Routes } from '@angular/router';\nimport { SystemAboutComponent } from './system-about.component';\nimport { SystemModulesComponent } from './system-modules.component';\nimport { SystemTriggersComponent } from './system-triggers.component';\nimport { SystemZonesComponent } from './system-zones.component';\nimport { SystemMetadataComponent } from './system-metadata.component';\nimport { ExtensionOutletComponent } from '../ui/extension-outlet.component';\nimport { SettingsHistoryViewComponent } from '../ui/settings-history-view.component';\nimport { SystemsComponent } from './systems.component';\n\nexport const ROUTES: Routes = [\n    {\n        path: ':id',\n        component: SystemsComponent,\n        children: [\n            { path: 'about', component: SystemAboutComponent },\n            { path: 'modules', component: SystemModulesComponent },\n            { path: 'triggers', component: SystemTriggersComponent },\n            { path: 'zones', component: SystemZonesComponent },\n            { path: 'metadata', component: SystemMetadataComponent },\n            { path: 'extend/:id', component: ExtensionOutletComponent },\n            { path: 'history', component: SettingsHistoryViewComponent },\n            { path: '**', redirectTo: 'about' }\n        ]\n    },\n    { path: '**', redirectTo: '-' }\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { ROUTES } from './systems.routes';\n\nimport { SystemAboutComponent } from './system-about.component';\nimport { SystemModulesComponent } from './system-modules.component';\nimport { SystemTriggersComponent } from './system-triggers.component';\nimport { SystemZonesComponent } from './system-zones.component';\nimport { SystemMetadataComponent } from './system-metadata.component';\nimport { SharedContentModule } from 'apps/backoffice/src/app/ui/ui.module';\nimport { SystemsComponent } from './systems.component';\n\n@NgModule({\n    declarations: [\n        SystemAboutComponent,\n        SystemModulesComponent,\n        SystemTriggersComponent,\n        SystemZonesComponent,\n        SystemMetadataComponent,\n        SystemsComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        DragDropModule,\n    ],\n})\nexport class AppSystemsModule {}\n"],"x_google_ignoreList":[]}