{"version":3,"file":"351.e1a49831cb8083b6.js","mappings":"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","names":["DriverStateService","active_item","this","_state","constructor","_dialog","_this","_loading","BehaviorSubject","_last_error","item","loading","asObservable","last_error","is_compiled","pipe","filter","d","PlaceDriver","switchMap","driver","isDriverCompiled","id","catchError","_ref","_asyncToGenerator","_","err","json","next","compilation_output","_x","apply","arguments","retryWhen","delay","tap","modules","_ref2","data","details","queryModules","driver_id","toPromise","_x2","map","shareReplay","subscribe","viewError","error","getValue","open","ViewResponseModalComponent","title","content","recompileDriver","_this2","openConfirmModal","icon","type","class","reason","close","success","catch","notifyError","notifySuccess","removeModule","device","_this3","extra","system","removeSystemModule","statusText","message","replaceItem","static","t","i0","i1","i2","core","Yz7","factory","ɵfac","providedIn","ctx_r0","default_uri","ctx_r1","default_port","_r8","ctx_r7","viewErrors","ctx_r4","settings","DriverAboutComponent","_service","compiled","compilation_error","Xpm","selectors","decls","vars","consts","i18n_0","$localize","DriverAboutComponent_div_2_Template","DriverAboutComponent_div_3_Template","DriverAboutComponent_mat_spinner_34_Template","DriverAboutComponent_button_36_Template","ctx","DriverAboutComponent_section_54_Template","DriverAboutComponent_ng_template_55_Template","_c24","repository_id","module_name","created_at","updated_at","commit","file_name","_r5","$event","_r14","module_r6","$implicit","connected","_c4","system_r16","display_name","name","DriverModulesComponent_div_5_div_8_i_2_Template","_r18","ctx_r17","loadSystems","DriverModulesComponent_div_5_div_8_div_14_Template","DriverModulesComponent_div_5_div_8_a_15_Template","ctx_r19","running","_c5","custom_name","_r9","ctx_r5","systems","length","loading_systems","_c6","DriverModulesComponent_div_5_div_8_Template","DriverModulesComponent","AsyncHandler","super","filter$","combineLatest","filters","search","toLowerCase","mod","includes","querySystems","module_id","features","DriverModulesComponent_div_5_Template","DriverModulesComponent_ng_template_7_Template","DriverModulesComponent_ng_template_9_Template","tmp_1_0","_r3","scroll","scrollTop","tab_list","ROUTES","path","component","DriversComponent","extensions","extensionsForItem","debug_position","_debug","position","updateTabList","count","device_count","concat","open_menu","newItem","create","ngOnInit","subscription","loadValues","query","offset","limit","total","template","rf","DriversComponent_ng_container_10_Template","DriversComponent_app_debug_output_13_Template","DriversComponent_app_debug_output_14_Template","children","ExtensionOutletComponent","SettingsHistoryViewComponent","redirectTo","AppDriversModule","oAB","cJS","CommonModule","FormsModule","RouterModule","forChild","SharedContentModule"],"sourceRoot":"webpack:///","sources":["./apps/backoffice/src/app/drivers/driver-state.service.ts","./apps/backoffice/src/app/drivers/driver-about.component.ts","./apps/backoffice/src/app/drivers/driver-devices.component.ts","./apps/backoffice/src/app/drivers/drivers.component.ts","./apps/backoffice/src/app/drivers/drivers.routes.ts","./apps/backoffice/src/app/drivers/drivers.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    isDriverCompiled,\n    PlaceDriver,\n    PlaceModule,\n    queryModules,\n    recompileDriver,\n    removeSystemModule,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, throwError } from 'rxjs';\nimport {\n    catchError,\n    delay,\n    filter,\n    map,\n    retryWhen,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { openConfirmModal } from '../common/general';\nimport { ActiveItemService } from '../common/item.service';\nimport { notifyError, notifySuccess } from '../common/notifications';\nimport { HashMap } from '../common/types';\nimport { ViewResponseModalComponent } from '../overlays/view-response-modal/view-response-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DriverStateService {\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _last_error = new BehaviorSubject<HashMap>(null);\n\n    public readonly item = this._state.item;\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly last_error = this._last_error.asObservable();\n\n    public readonly is_compiled = this.item.pipe(\n        filter((d) => !!d && d instanceof PlaceDriver),\n        switchMap((driver) => isDriverCompiled(driver.id)),\n        catchError(async (_: Response) => {\n            const err = await _?.json();\n            this._last_error.next(err?.compilation_output || _);\n            if (!err?.compilation_output) throw _;\n        }),\n        retryWhen(delay(1000)),\n        tap(_ => _ ? this._last_error.next(null) : '')\n    );\n\n    public readonly modules = this.item.pipe(\n        switchMap(async (item) => {\n            if (!item) return { data: [] }\n            this._loading.next(true);\n            const details = await queryModules({ driver_id: item.id }).toPromise();\n            this._loading.next(false);\n            return details;\n        }),\n        map((d) => d.data),\n        shareReplay()\n    );\n\n    public get active_item() {\n        return this._state.active_item;\n    }\n\n    constructor(private _state: ActiveItemService, private _dialog: MatDialog) {\n        this.item.subscribe(() => this._last_error.next(null));\n    }\n\n    public viewError() {\n        const error = this._last_error.getValue();\n        if (!error) return;\n        this._dialog.open<ViewResponseModalComponent>(ViewResponseModalComponent, {\n            data: { title: 'Driver Compilation Error', content: error },\n        });\n    }\n\n    public async recompileDriver() {\n        const details = await openConfirmModal(\n            {\n                title: `Recompile Driver`,\n                content: `<p>Are you sure you want recompile this driver?</p><p>New driver code will be loaded and device settings will be updated.</p>`,\n                icon: { type: 'icon', class: 'backoffice-cycle' },\n            },\n            this._dialog\n        );\n        if (!details || !details.reason) return details.close();\n        details.loading('Recompiling driver...');\n        const success = await recompileDriver(this._state.active_item.id)\n            .toPromise()\n            .catch((_) => null);\n        details.close();\n        if (!success) return notifyError('Failed to recompiled driver.');\n        notifySuccess('Successfully recompiled driver.');\n    }\n\n    public async removeModule(device: PlaceModule) {\n        const details = await openConfirmModal(\n            {\n                title: 'Remove module?',\n                content: `Remove ${device.driver_id}?<br>`,\n                extra: ['error', 'Note that all associated data be deleted immediatedly.'],\n                icon: { type: 'icon', class: 'backoffice-trash' },\n            },\n            this._dialog\n        );\n        if (!details || !details.reason) return;\n        const system = await removeSystemModule(this.active_item.id, device.id)\n            .toPromise()\n            .catch((err) => {\n                notifyError(\n                    `Error removing module ${device.id}. Error: ${\n                        err.statusText || err.message || err\n                    }`\n                );\n            });\n        details.close();\n        if (!system) return;\n        this._state.replaceItem(system);\n        notifySuccess(`Successfully removed module.`);\n    }\n}\n","import { Component } from '@angular/core';\nimport { PlaceDriver } from '@placeos/ts-client';\nimport { DriverStateService } from './driver-state.service';\n\n@Component({\n    selector: 'driver-about',\n    template: `\n        <section class=\"mb-4 flex space-x-2\">\n            <div\n                class=\"rounded p-2 border border-base-200  space-y-2 min-w-[45%] flex-1\"\n            >\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"item.default_uri\"\n                >\n                    <label i18n=\"@@driverDefaultURILabel\">Default URI</label>\n                    <div class=\"value\">{{ item.default_uri }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"item.default_port\"\n                >\n                    <label i18n=\"@@driverDefaultPortLabel\">\n                        Default Port\n                    </label>\n                    <div class=\"value\">{{ item.default_port }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <label i18n=\"@@driverDetailsCommit\">Repository</label>\n                    <div class=\"value\">\n                        <a\n                            [routerLink]=\"[\n                                '/repositories',\n                                item.repository_id,\n                                'about'\n                            ]\"\n                            class=\"underline\"\n                        >\n                            {{ item.repository_id }}</a\n                        >\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <label i18n=\"@@driverDetailsModuleName\">Module Name</label>\n                    <div class=\"value\">{{ item?.module_name }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <label i18n=\"@@driverCreatedAtLabel\">Created</label>\n                    <div class=\"value\">\n                        {{ item.created_at * 1000 | dateFrom }}\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <label i18n=\"@@driverUpdatedAtLabel\">Updated</label>\n                    <div class=\"value\">\n                        {{ item.updated_at * 1000 | dateFrom }}\n                    </div>\n                </div>\n            </div>\n            <div\n                class=\"rounded p-2 border border-base-200  space-y-2 min-w-[45%] flex-1 flex flex-col\"\n            >\n                <div class=\"flex items-center space-x-2\">\n                    <label i18n=\"@@driverDetailsCompiled\">Compiled</label>\n                    <div class=\"value\">\n                        {{ (compiled | async) ? 'true' : 'false' }}\n                    </div>\n                    <mat-spinner\n                        diameter=\"24\"\n                        *ngIf=\"!(compiled | async)\"\n                    ></mat-spinner>\n                    <button\n                        btn\n                        *ngIf=\"compilation_error | async\"\n                        (click)=\"viewErrors()\"\n                    >\n                        View Errors\n                    </button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <label i18n=\"@@driverDetailsCommit\">Commit</label>\n                    <code>{{ item.commit }}</code>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <label i18n=\"@@driverDetailsFileName\">File Name</label>\n                    <div\n                        class=\"font-mono text-sm truncate\"\n                        [title]=\"item.file_name\"\n                    >\n                        {{ item.file_name }}\n                    </div>\n                </div>\n                <div class=\"flex-1\"></div>\n                <button\n                    btn\n                    (click)=\"recompileDriver()\"\n                    i18n=\"@@driverReloadAction\"\n                    class=\"w-full\"\n                >\n                    Recompile Driver\n                </button>\n            </div>\n        </section>\n        <hr class=\"my-4\" />\n        <header class=\"font-medium text-lg\" i18n=\"@@settingsLabel\">\n            Settings\n        </header>\n        <section *ngIf=\"item.settings; else load_state\">\n            <a-settings-form\n                [merge]=\"true\"\n                [id]=\"item.id\"\n                [settings]=\"item.settings\"\n            ></a-settings-form>\n        </section>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center\">\n                <mat-spinner class=\"mb-4\" diameter=\"48\"></mat-spinner>\n                <p i18n=\"@@driverLoadingLabel\">Loading driver settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            label {\n                width: 6rem;\n            }\n        `,\n    ],\n})\nexport class DriverAboutComponent {\n    public readonly compiled = this._service.is_compiled;\n    public readonly compilation_error = this._service.last_error;\n\n    public readonly recompileDriver = () => this._service.recompileDriver();\n    public readonly viewErrors = () => this._service.viewError();\n\n    public get item(): PlaceDriver {\n        return (this._service.active_item || {}) as any;\n    }\n\n    constructor(private _service: DriverStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AsyncHandler } from 'apps/backoffice/src/app/common/async-handler.class';\nimport { DriverStateService } from './driver-state.service';\nimport { HashMap } from '@placeos/ts-client/dist/esm/utilities/types';\nimport { PlaceModule, PlaceSystem, querySystems } from '@placeos/ts-client';\n\n@Component({\n    selector: 'driver-devices',\n    template: `\n        <section class=\"flex items-center mb-4\">\n            <mat-form-field appearance=\"outline\" class=\"h-12 flex-1\">\n                <app-icon\n                    matPrefix\n                    className=\"backoffice-magnifying-glass text-xl mr-2\"\n                ></app-icon>\n                <input\n                    [ngModel]=\"''\"\n                    (ngModelChange)=\"filter$.next($event)\"\n                    matInput\n                    placeholder=\"Filter Devices...\"\n                    class=\"rounded-none\"\n                />\n            </mat-form-field>\n        </section>\n        <section>\n            <div\n                role=\"table\"\n                class=\"overflow-x-auto\"\n                *ngIf=\"(modules | async)?.length; else empty_state\"\n            >\n                <div table-head>\n                    <div class=\"w-12 p-2\">State</div>\n                    <div flex class=\"flex-1 p-2\" i18n=\"@@nameLabel\">Name</div>\n                    <div class=\"w-24 p-2\"></div>\n                </div>\n                <div table-body class=\"overflow-y-auto\">\n                    <div\n                        table-row\n                        *ngFor=\"let module of modules | async; let i = index\"\n                    >\n                        <div class=\"w-12 p-2 flex items-center justify-center\">\n                            <i\n                                *ngIf=\"module.system\"\n                                binding\n                                [(model)]=\"module.connected\"\n                                [sys]=\"module.system.id\"\n                                [mod]=\"module\"\n                                bind=\"connected\"\n                            ></i>\n                            <div\n                                class=\"h-2 w-2 rounded-full bg-base-content\"\n                                [class.bg-error]=\"\n                                    module.running && !module.connected\n                                \"\n                                [class.bg-success]=\"\n                                    module.running && module.connected\n                                \"\n                            ></div>\n                        </div>\n                        <div\n                            flex\n                            class=\"flex-1 p-2 underline\"\n                            i18n=\"@@nameLabel\"\n                        >\n                            <a [routerLink]=\"['/modules', module.id]\">\n                                {{ module.custom_name || module.name }}\n                            </a>\n                        </div>\n                        <div class=\"w-24 p-2\">\n                            <button\n                                btn\n                                icon\n                                matTooltip=\"View Systems\"\n                                [matMenuTriggerFor]=\"menu\"\n                                (click)=\"loadSystems(module)\"\n                            >\n                                <app-icon className=\"backoffice-eye\"></app-icon>\n                            </button>\n                            <mat-menu #menu=\"matMenu\">\n                                <div\n                                    class=\"flex items-center justify-center px-2 pb-2 opacity-70 border-b border-base-200 text-sm\"\n                                >\n                                    {{ systems[module.id]?.length }} System(s)\n                                </div>\n                                <div\n                                    *ngIf=\"loading_systems\"\n                                    class=\"flex items-center space-x-2 p-2 text-sm\"\n                                >\n                                    <mat-spinner [diameter]=\"32\"></mat-spinner>\n                                    <span>Loading systems...</span>\n                                </div>\n                                <a\n                                    mat-menu-item\n                                    *ngFor=\"\n                                        let system of systems[module.id] || []\n                                    \"\n                                    class=\"leading-tight\"\n                                    [routerLink]=\"['/systems', system.id]\"\n                                >\n                                    <div\n                                        class=\"flex flex-col justify-center px-2 h-full\"\n                                    >\n                                        <div class=\"text-base\">\n                                            {{\n                                                system.display_name ||\n                                                    system.name\n                                            }}\n                                        </div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ system.id }}\n                                        </div>\n                                    </div>\n                                </a>\n                            </mat-menu>\n                            <button\n                                icon\n                                btn\n                                icon\n                                (click)=\"removeModule(module)\"\n                            >\n                                <app-icon\n                                    className=\"backoffice-trash\"\n                                ></app-icon>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 mx-auto\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>Loading modules...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 mx-auto\">\n                <p>No modules with driver</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [role='table'] > div {\n                width: 100%;\n                min-width: 28rem;\n            }\n        `,\n    ],\n})\nexport class DriverModulesComponent extends AsyncHandler {\n    public loading_systems = false;\n    /** Subject holding the value of the search */\n    public readonly filter$ = new BehaviorSubject<string>('');\n    /** Whether systems are being loaded */\n    public readonly loading = this._service.loading;\n    /** Currently active driver */\n    public readonly item = this._service.item;\n    /** List of systems associated with modules */\n    public readonly systems: HashMap<PlaceSystem[]> = {};\n    /** Whether systems are being loaded */\n    /** List of modules */\n    public readonly modules = combineLatest([\n        this.filter$,\n        this._service.modules,\n    ]).pipe(\n        map((details) => {\n            const [filters, modules] = details;\n            const search = filters.toLowerCase();\n            return filters\n                ? modules.filter(\n                      (mod) =>\n                          mod.name.toLowerCase().includes(search) ||\n                          mod.custom_name.toLowerCase().includes(search)\n                  )\n                : modules;\n        })\n    );\n\n    public readonly removeModule = (d) => this._service.removeModule(d);\n\n    constructor(private _service: DriverStateService) {\n        super();\n    }\n\n    public async loadSystems(mod: PlaceModule) {\n        this.loading_systems = true;\n        const systems = await querySystems({ module_id: mod.id })\n            .pipe(map(({ data }) => data))\n            .toPromise();\n        this.systems[mod.id] = systems || [];\n        this.loading_systems = false;\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PlaceDriver, queryModules } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\nimport { extensionsForItem } from '../common/api';\nimport { AsyncHandler } from '../common/async-handler.class';\nimport { PlaceDebugService } from '../common/debug.service';\nimport { ActiveItemService } from '../common/item.service';\n\n@Component({\n    selector: 'new-drivers-view',\n    template: `\n        <div\n            class=\"absolute inset-0 flex items-center divide-y sm:divide-y-0 sm:divide-x divide-base-200  bg-base-100 \"\n        >\n            <sidebar-menu [(open)]=\"open_menu\" class=\"sm:h-full\"></sidebar-menu>\n            <div class=\"flex flex-col h-full flex-1 overflow-hidden w-px\">\n                <div class=\"flex flex-1 h-px\">\n                    <item-sidebar\n                        class=\"hidden sm:block\"\n                        [route]=\"name\"\n                        title=\"Drivers\"\n                    ></item-sidebar>\n                    <div class=\"flex-1 w-1/2 h-full relative flex flex-col z-0\">\n                        <item-selection\n                            class=\"z-20 sm:hidden\"\n                            [route]=\"name\"\n                            title=\"Drivers\"\n                        >\n                            <button\n                                btn\n                                icon\n                                class=\"sm:hidden mr-2\"\n                                (click)=\"open_menu = true\"\n                            >\n                                <app-icon\n                                    className=\"backoffice-menu\"\n                                ></app-icon>\n                            </button>\n                        </item-selection>\n                        <div class=\"flex flex-col flex-1 h-1/2\">\n                            <ng-container *ngIf=\"item?.id\">\n                                <item-details\n                                    [can_edit]=\"true\"\n                                    [item]=\"item\"\n                                    type=\"Driver\"\n                                ></item-details>\n                                <item-tablist\n                                    [base]=\"name\"\n                                    [tabs]=\"tab_list\"\n                                    [scrolled]=\"scroll > 0\"\n                                    class=\"z-10\"\n                                ></item-tablist>\n                                <div\n                                    #el\n                                    class=\"flex-1 h-1/2 w-full overflow-auto p-4 z-0 relative\"\n                                    (scroll)=\"scroll = el.scrollTop\"\n                                >\n                                    <router-outlet></router-outlet>\n                                </div>\n                            </ng-container>\n                        </div>\n                        <button\n                            class=\"absolute bottom-2 left-2 sm:-left-9 w-12 h-12 flex items-center justify-center bg-secondary rounded-lg shadow z-30 text-secondary-content\"\n                            matTooltip=\"New driver\"\n                            matTooltipPosition=\"right\"\n                            matRipple\n                            (click)=\"newItem()\"\n                        >\n                            <app-icon\n                                [className]=\"'backoffice-plus'\"\n                                class=\"text-3xl\"\n                            ></app-icon>\n                        </button>\n                    </div>\n                </div>\n                <app-debug-output\n                    below\n                    *ngIf=\"debug_position === 'below'\"\n                ></app-debug-output>\n            </div>\n            <app-debug-output\n                side\n                *ngIf=\"debug_position === 'side'\"\n                class=\"h-full max-w-[30rem]\"\n            ></app-debug-output>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DriversComponent extends AsyncHandler {\n    public readonly name = 'drivers';\n\n    public open_menu = false;\n    public device_count: number;\n    public tab_list = [];\n\n    public readonly newItem = () => this._service.create();\n\n    public get item() {\n        return this._service.active_item;\n    }\n\n    public get extensions() {\n        return extensionsForItem(this._service.active_item, this.name);\n    }\n\n    public get debug_position() {\n        return this._debug.position;\n    }\n\n    public updateTabList() {\n        this.tab_list = [\n            {\n                id: 'about',\n                name: 'About',\n                icon: { class: 'backoffice-info-with-circle' },\n            },\n            {\n                id: 'modules',\n                name: 'Modules',\n                count: this.device_count ?? '?',\n                icon: { class: 'backoffice-tablet' },\n            },\n            {\n                id: 'history',\n                name: 'Settings History',\n                icon: { class: 'backoffice-clock' },\n            },\n        ].concat(this.extensions);\n    }\n\n    constructor(\n        protected _service: ActiveItemService,\n        private _debug: PlaceDebugService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item',\n            this._service.item.subscribe((item) => {\n                this.device_count = null;\n                this.updateTabList();\n                this.loadValues(item as any);\n            })\n        );\n    }\n\n    protected async loadValues(item: PlaceDriver) {\n        if (!item) return;\n        const query: any = { offset: 0, limit: 1, driver_id: item.id };\n        this.device_count = await queryModules(query)\n            .pipe(map(({ total }) => total))\n            .toPromise()\n            .catch((_) => 0);\n        this.updateTabList();\n    }\n}\n","import { Routes } from '@angular/router';\n\nimport { DriverAboutComponent } from './driver-about.component';\nimport { DriverModulesComponent } from './driver-devices.component';\nimport { ExtensionOutletComponent } from '../ui/extension-outlet.component';\nimport { SettingsHistoryViewComponent } from '../ui/settings-history-view.component';\nimport { DriversComponent } from './drivers.component';\n\nexport const ROUTES: Routes = [\n    {\n        path: ':id',\n        component: DriversComponent,\n        children: [\n            { path: 'about', component: DriverAboutComponent },\n            { path: 'modules', component: DriverModulesComponent },\n            { path: 'extend/:id', component: ExtensionOutletComponent },\n            { path: 'history', component: SettingsHistoryViewComponent },\n            { path: '**', redirectTo: 'about' },\n        ],\n    },\n    { path: '**', redirectTo: '-' },\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ROUTES } from './drivers.routes';\n\nimport { DriverAboutComponent } from './driver-about.component';\nimport { DriverModulesComponent } from './driver-devices.component';\nimport { SharedContentModule } from 'apps/backoffice/src/app/ui/ui.module';\nimport { DriversComponent } from './drivers.component';\n\n@NgModule({\n    declarations: [\n        DriverAboutComponent,\n        DriverModulesComponent,\n        DriversComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n    ],\n})\nexport class AppDriversModule {}\n"],"x_google_ignoreList":[]}