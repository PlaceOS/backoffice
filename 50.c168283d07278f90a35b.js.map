{"version":3,"sources":["./apps/backoffice/src/app/modules/modules.component.ts","./apps/backoffice/src/app/modules/module-state.service.ts","./apps/backoffice/src/app/modules/module-about.component.ts","./apps/backoffice/src/app/modules/module-systems.component.ts","./apps/backoffice/src/app/modules/modules.routes.ts","./apps/backoffice/src/app/modules/modules.module.ts"],"names":["ModulesComponent","_service","super","name","show_options","this","tab_list","active_item","id","icon","class","count","system_count","concat","extensions","subscription","item","subscribe","loadValues","updateTabList","query","offset","limit","module_id","toPromise","total","ModuleStateService","_state","_dialog","_loading","BehaviorSubject","loading","asObservable","pipe","filter","_","associated_settings","all_item","debounceTime","switchMap","driver","driver_id","shareReplay","system","system_id","of","system_list","next","console","log","map","details","data","catchError","tap","method","running","error","catch","err","length","viewDetails","content","open","ModuleAboutComponent","other_settings","stopping","toggleModuleState","ROUTES","path","component","children","ModuleSystemsComponent","filter$","combineLatest","systems","search","toLowerCase","sys","includes","redirectTo","AppModulesModule"],"mappings":"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","file":"50.c168283d07278f90a35b.js","sourcesContent":["import { Component } from '@angular/core';\nimport { querySystems, PlaceModule } from '@placeos/ts-client';\n\nimport { ActiveItemService } from '../common/item.service';\nimport { BaseClass } from '../common/base.class';\nimport { extensionsForItem } from '../common/api';\n\n@Component({\n    selector: 'app-modules',\n    template: `\n        <div\n            class=\"flex-1 flex-col sm:flex-row flex h-full w-full relative\"\n        >\n            <sidebar\n                heading=\"Modules\"\n                name=\"modules\"\n                class=\"absolute top-0 left-0 h-12 w-full sm:h-full sm:static\"\n            ></sidebar>\n            <item-display\n                name=\"module\"\n                route=\"modules\"\n                [tabs]=\"tab_list\"\n                class=\"flex-1 relative mt-12 sm:mt-0 w-full sm:w-1/2\"\n            ></item-display>\n        </div>\n    `,\n    styles: [\n        `\n            sidebar {\n                transition: height 300ms;\n            }\n            @media screen and (min-width: 640px) {\n                sidebar {\n                    width: 20em !important;\n                }\n            }\n        `,\n    ],\n})\nexport class ModulesComponent extends BaseClass {\n    /** Number of systems for the active device */\n    public system_count: number;\n    /** Whether the list of devices should show only the disconnected devices */\n    public only_disconnected: boolean;\n\n    public readonly name = 'modules';\n\n    public readonly show_options = this._service.show_options;\n\n    public tab_list = [];\n\n    public get extensions() {\n        return extensionsForItem(this._service.active_item, this.name);\n    }\n\n    public updateTabList() {\n        this.tab_list = [\n            { id: 'about', name: 'About', icon: { class: 'backoffice-info-with-circle' } },\n            {\n                id: 'systems',\n                name: 'Systems',\n                count: this.system_count,\n                icon: { class: 'backoffice-documents' },\n            },\n        ].concat(this.extensions);\n    }\n\n    constructor(private _service: ActiveItemService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'item',\n            this._service.item.subscribe((item) => {\n                this.loadValues(item as any);\n                this.updateTabList();\n            })\n        );\n        this.updateTabList();\n    }\n\n    protected async loadValues(item: PlaceModule) {\n        if (!item) return;\n        const query: any = { offset: 0, limit: 1, module_id: item.id };\n        // Get system count\n        this.system_count = (await querySystems(query).toPromise()).total;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    moduleSettings,\n    PlaceModule,\n    querySystems,\n    showDriver,\n    showSystem,\n    startModule,\n    stopModule,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { catchError, debounceTime, filter, map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { ActiveItemService } from '../common/item.service';\nimport { notifyError, notifySuccess } from '../common/notifications';\nimport { ViewResponseModalComponent } from '../overlays/view-response-modal/view-response-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ModuleStateService {\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n    /** Active module */\n    public readonly item: Observable<PlaceModule> = this._state.item.pipe(\n        filter((_) => _ instanceof PlaceModule)\n    ) as any;\n    /** Observable for associated settings of the active item */\n    public readonly associated_settings = this._state.all_item.pipe(\n        debounceTime(300),\n        switchMap((item: PlaceModule) => {\n            if (!item || !(item instanceof PlaceModule)) return [];\n            return moduleSettings(item.id);\n        })\n    );\n    /** Driver associated with the active module */\n    public readonly driver = this.item.pipe(\n        switchMap((item) => showDriver(item.driver_id)),\n        shareReplay(1)\n    );\n    /** System assoicated with the active module */\n    public readonly system = this.item.pipe(\n        switchMap((item) => (item.system_id ? showSystem(item.system_id) : of(null))),\n        shareReplay(1)\n    );\n    /** System assoicated with the active module */\n    public readonly system_list = this.item.pipe(\n        switchMap((item) => {\n            this._loading.next(true);\n            console.log('Loading Systems...');\n            return querySystems({ module_id: item.id });\n        }),\n        map((details) => details.data),\n        catchError(() => []),\n        tap((_) => this._loading.next(false)),\n        shareReplay(1)\n    );\n\n    public get active_item(): PlaceModule {\n        return this._state.active_item as any;\n    }\n\n    constructor(private _state: ActiveItemService, private _dialog: MatDialog) {}\n\n    public async toggleModuleState() {\n        const method = this.active_item.running ? stopModule : startModule;\n        const error = await method(this.active_item.id)\n            .toPromise()\n            .catch((err) => err);\n        if (error) {\n            if (typeof error === 'string' && error.length < 64) {\n                notifyError(error);\n            } else {\n                notifyError(\n                    `Failed to ${this.active_item.running ? 'stop' : 'start'} device '${\n                        this.active_item.id\n                    }'.\\nView Error?`,\n                    'View',\n                    () => this.viewDetails(error)\n                );\n            }\n            return;\n        }\n        notifySuccess(`Module successfully ${this.active_item.running ? 'stopped' : 'started'}`);\n        (this.active_item as any).running = !this.active_item.running;\n    }\n\n    /** View Results of the execute */\n    private viewDetails(content: any) {\n        this._dialog.open<ViewResponseModalComponent>(ViewResponseModalComponent, {\n            data: { content },\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { PlaceModule } from '@placeos/ts-client';\n\nimport { ModuleStateService } from './module-state.service';\n\n@Component({\n    selector: 'module-about',\n    template: `\n        <section class=\"space-y-2\">\n            <div class=\"flex items-center space-x-2\" *ngIf=\"item.notes\">\n                <label i18n=\"@moduleNotesLabel\">Notes:</label>\n                <div class=\"value\">{{ item.notes }}</div>\n            </div>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"item.ip\">\n                <label i18n=\"@moduleIPLabel\">IP:</label>\n                <div class=\"value\">{{ item.ip }}</div>\n            </div>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"item.port\">\n                <label i18n=\"@modulePortLabel\">Port:</label>\n                <div class=\"value\">{{ item.port }}</div>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <label i18n=\"@moduleTLSLabel\">TLS:</label>\n                <div class=\"value\">{{ item.tls }}</div>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <label i18n=\"@moduleUDPLabel\">UDP:</label>\n                <div class=\"value\">{{ item.udp }}</div>\n            </div>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"item.created_at\">\n                <label i18n=\"@@moduleCreatedAtLabel\">Created:</label>\n                <div class=\"value\">{{ item.created_at * 1000 | dateFrom }}</div>\n            </div>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"item.updated_at\">\n                <label i18n=\"@moduleUpdatedAtLabel\">Updated:</label>\n                <div class=\"value\">{{ item.updated_at * 1000 | dateFrom }}</div>\n            </div>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"driver | async\">\n                <label i18n=\"@moduleUpdatedAtLabel\">Driver:</label>\n                <a class=\"underline\" [routerLink]=\"['/drivers', item.driver_id]\">\n                    {{ (driver | async).name || '&lt;Unnamed&gt;' }}\n                </a>\n            </div>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"system | async\">\n                <label i18n=\"@moduleUpdatedAtLabel\">Logic for system:</label>\n                <a class=\"underline\" [routerLink]=\"['/systems', (system | async).id, 'modules']\">\n                    {{ (system | async).name }}\n                </a>\n            </div>\n        </section>\n        <hr class=\"my-4\" />\n        <section>\n            <button mat-button [disabled]=\"stopping\" (click)=\"toggleModuleState()\">\n                <div class=\"text\" *ngIf=\"!stopping\" i18n=\"@@moduleStateToggle\">\n                    { item.running, select, true { Stop Module } false { Start Module } }\n                </div>\n                <mat-spinner diameter=\"32\" *ngIf=\"stopping\"></mat-spinner>\n            </button>\n        </section>\n        <hr class=\"my-4\" />\n        <header class=\"font-medium text-lg\" i18n=\"@@settingsLabel\">Settings</header>\n        <section *ngIf=\"item.settings && (other_settings | async); else load_state\">\n            <a-settings-form\n                [id]=\"item.id\"\n                [merge]=\"true\"\n                [settings]=\"item.settings\"\n                [merge_settings]=\"(other_settings | async) || []\"\n            ></a-settings-form>\n        </section>\n        <ng-template #load_state>\n            <div class=\"p-8 flex flex-col items-center justify-center m-auto\">\n                <mat-spinner class=\"mb-4\" diameter=\"48\"></mat-spinner>\n                <p i18n=\"@@moduleDetailsLoading\">Loading module settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                padding: 1rem;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class ModuleAboutComponent {\n    /** Driver for the active item */\n    public readonly driver = this._service.driver;\n    /** Control System for the active item */\n    public readonly system = this._service.system;\n    /** List of settings for associated modules, drivers and zones */\n    public readonly other_settings = this._service.associated_settings;\n    /** Whether module is being stopped */\n    public stopping: boolean;\n\n    public get item(): PlaceModule {\n        return this._service.active_item as any;\n    }\n\n    constructor(private _service: ModuleStateService) {}\n\n    public async toggleModuleState() {\n        this.stopping = true;\n        await this._service;\n        this.stopping = false;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PlaceModule, PlaceSystem, querySystems } from '@placeos/ts-client';\nimport { Subject, Observable, of, BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    catchError,\n    map,\n} from 'rxjs/operators';\n\nimport { BaseClass } from 'apps/backoffice/src/app/common/base.class';\nimport { ActiveItemService } from 'apps/backoffice/src/app/common/item.service';\nimport { ModuleStateService } from './module-state.service';\n\n@Component({\n    selector: 'module-systems',\n    template: `\n        <section class=\"flex items-center mb-4\">\n            <mat-form-field appearance=\"outline\" class=\"h-12 flex-1\">\n                <app-icon\n                    matPrefix\n                    className=\"backoffice-magnifying-glass text-xl mr-2\"\n                ></app-icon>\n                <input\n                    [ngModel]=\"''\"\n                    (ngModelChange)=\"filter$.next($event)\"\n                    matInput\n                    placeholder=\"Filter systems...\"\n                    class=\"rounded-none\"\n                />\n            </mat-form-field>\n        </section>\n        <section *ngIf=\"!(loading | async); else load_state\">\n            <div\n                role=\"table\"\n                class=\"overflow-x-auto\"\n                *ngIf=\"(system_list | async)?.length; else empty_state\"\n            >\n                <div table-head>\n                    <div flex class=\"flex-1 p-2\" i18n=\"@@nameLabel\">Name</div>\n                    <div class=\"w-48 p-2\" i18n=\"@@systemLabel\">No. Modules</div>\n                    <div class=\"w-36 p-2\" i18n=\"@@createdLabel\">Created</div>\n                </div>\n                <div table-body class=\"overflow-y-auto\">\n                    <div\n                        table-row\n                        *ngFor=\"\n                            let system of system_list | async;\n                            let i = index\n                        \"\n                    >\n                        <div flex class=\"flex-1 p-2 underline\">\n                            <a [routerLink]=\"['/systems', system.id]\">{{\n                                system.name\n                            }}</a>\n                        </div>\n                        <div class=\"w-48 p-2\">\n                            {{ system.installed_ui_devices || '0' }}\n                        </div>\n                        <div class=\"w-36 p-2\">\n                            {{ system.created_at * 1000 | dateFrom }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 mx-auto\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>Loading systems...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 mx-auto\">\n                <p>No systems with module</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                padding: 1rem;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class ModuleSystemsComponent {\n    /** Subject holding the value of the search */\n    public readonly filter$ = new BehaviorSubject<string>('');\n    /** Whether systems are being loaded */\n    public readonly loading = this._service.loading;\n\n    public readonly system_list = combineLatest([\n        this.filter$,\n        this._service.system_list,\n    ]).pipe(\n        map((details) => {\n            const [filter, systems] = details;\n            const search = filter.toLowerCase();\n            return filter\n                ? systems.filter((sys) =>\n                      sys.name.toLowerCase().includes(search)\n                  )\n                : systems;\n        })\n    );\n\n    constructor(private _service: ModuleStateService) {}\n}\n","import { Routes } from '@angular/router';\n\nimport { ModulesComponent } from './modules.component';\nimport { ModuleAboutComponent } from './module-about.component';\nimport { ModuleSystemsComponent } from './module-systems.component';\nimport { ExtensionOutletComponent } from '../ui/extension-outlet.component';\n\nexport const ROUTES: Routes = [\n    {\n        path: ':id',\n        component: ModulesComponent,\n        children: [\n            { path: 'about', component: ModuleAboutComponent },\n            { path: 'systems', component: ModuleSystemsComponent },\n            { path: 'extend/:id', component: ExtensionOutletComponent },\n            { path: '**', redirectTo: 'about' },\n        ],\n    },\n    { path: '**', redirectTo: '-' },\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ROUTES } from './modules.routes';\n\nimport { ModulesComponent } from './modules.component';\nimport { ModuleAboutComponent } from './module-about.component';\nimport { ModuleSystemsComponent } from './module-systems.component';\nimport { SharedContentModule } from 'apps/backoffice/src/app/ui/ui.module';\n\n@NgModule({\n    declarations: [\n        ModulesComponent,\n        ModuleAboutComponent,\n        ModuleSystemsComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n    ],\n})\nexport class AppModulesModule {}\n"],"sourceRoot":"webpack:///"}