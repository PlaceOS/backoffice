{"version":3,"sources":["./apps/backoffice/src/app/repositories/repositories-state.service.ts","./apps/backoffice/src/app/repositories/repositories.component.ts","./apps/backoffice/src/app/repositories/repository-about.component.ts","./apps/backoffice/src/app/repositories/repository-drivers.component.ts","./apps/backoffice/src/app/repositories/repositories.routes.ts","./apps/backoffice/src/app/repositories/repositories.module.ts"],"names":["RepositoriesStateService","_state","_dialog","_loading","BehaviorSubject","loading","this","asObservable","item","driver_list","all_item","pipe","switchMap","repo_type","next","id","limit","of","catchError","_","map","commit","filter","i","count","details","active_item","toPromise","catch","err","JSON","stringify","response","message","replaceItem","commit_hash","driver","open","height","width","maxHeight","maxWidth","data","name","module_name","repository_id","file_name","save","RepositoriesComponent","_service","super","tab_list","driver_count","icon","class","concat","extensions","subscription","subscribe","list","length","updateTabList","RepositoryAboutComponent","type","location","origin","folder_name","hash","uri","replace","pulling","pullLatestCommit","ROUTES","path","component","children","RepositoryDriversComponent","newDriver","d","redirectTo","AppRepositoriesModule"],"mappings":"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","file":"987.2b1682c4e85b5b3a5b96.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    addDriver,\n    listRepositoryCommits,\n    listRepositoryDrivers,\n    PlaceDriver,\n    PlaceRepository,\n    PlaceRepositoryType,\n    pullRepositoryChanges,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    share,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { ActiveItemService } from '../common/item.service';\nimport { notifyError } from '../common/notifications';\nimport {\n    CreateEditModalData,\n    ItemCreateUpdateModalComponent,\n} from '../overlays/item-modal/item-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RepositoriesStateService {\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n    /** Active module */\n    public readonly item = this._state.item;\n    /** List of available drivers for repository */\n    public readonly driver_list = this._state.all_item.pipe(\n        switchMap((item: PlaceRepository) => {\n            if (\n                !(item instanceof PlaceRepository) ||\n                item.repo_type === PlaceRepositoryType.Interface\n            )\n                return of(null);\n            this._loading.next(true);\n            return listRepositoryDrivers(item.id, { limit: 2000 });\n        }),\n        catchError((_) => []),\n        map((_) => {\n            this._loading.next(false);\n            return _;\n        })\n    );\n    /** Get latest commit for the active repository */\n    public readonly commit = this._state.all_item.pipe(\n        filter((i) => i instanceof PlaceRepository),\n        switchMap((item) =>\n            listRepositoryCommits(item.id, { count: 1 } as any)\n        ),\n        catchError((_) => []),\n        map((details) => details[0]?.commit || 'HEAD')\n    );\n\n    public get active_item(): PlaceRepository {\n        return this._state.active_item as any;\n    }\n\n    constructor(\n        private _state: ActiveItemService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async pullLatestCommit() {\n        const commit: any = await pullRepositoryChanges(this.active_item.id)\n            .toPromise()\n            .catch((err) => {\n                notifyError(\n                    `Error pulling latest commit. Error: ${JSON.stringify(\n                        err.response || err.message || 'Pull timed out'\n                    )}`\n                );\n            });\n        if (!commit) return;\n        this._state.replaceItem(\n            new PlaceRepository({\n                ...this.active_item,\n                commit_hash: commit.commit_hash,\n            })\n        );\n    }\n\n    public async newDriver(driver: string) {\n        this._dialog.open<ItemCreateUpdateModalComponent, CreateEditModalData>(\n            ItemCreateUpdateModalComponent,\n            {\n                height: 'auto',\n                width: 'auto',\n                maxHeight: 'calc(100vh - 2em)',\n                maxWidth: 'calc(100vw - 2em)',\n                data: {\n                    item: new PlaceDriver({\n                        name: '',\n                        module_name: '',\n                        repository_id: this.active_item.id,\n                        file_name: driver,\n                    }),\n                    name: 'Driver',\n                    save: (item) => addDriver(item),\n                },\n            }\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { extensionsForItem } from '../common/api';\n\nimport { BaseClass } from '../common/base.class';\nimport { RepositoriesStateService } from './repositories-state.service';\n\n@Component({\n    selector: 'app-repositories',\n    template: `\n        <div class=\"flex-1 flex-col sm:flex-row flex h-full w-full relative\">\n            <sidebar\n                heading=\"Repositories\"\n                name=\"repositories\"\n                class=\"absolute top-0 left-0 h-12 w-full sm:h-full sm:static\"\n            ></sidebar>\n            <item-display\n                name=\"repo\"\n                route=\"repositories\"\n                [tabs]=\"tab_list\"\n                class=\"flex-1 relative mt-12 sm:mt-0 w-full sm:w-1/2\"\n            ></item-display>\n        </div>\n    `,\n    styles: [\n        `\n            sidebar {\n                transition: height 300ms;\n            }\n            @media screen and (min-width: 640px) {\n                sidebar {\n                    width: 20em !important;\n                }\n            }\n        `,\n    ],\n})\nexport class RepositoriesComponent extends BaseClass {\n    /** Number of drivers in the repository */\n    public driver_count: number;\n\n    public readonly name = 'repositories';\n\n    public tab_list = [];\n\n    public get extensions() {\n        return extensionsForItem(this._service.active_item, this.name);\n    }\n\n    public updateTabList() {\n        this.tab_list = (this.driver_count < 0 || !this.driver_count\n            ? [{ id: 'about', name: 'About', icon: { class: 'backoffice-info-with-circle' } }]\n            : [\n                  { id: 'about', name: 'About', icon: { class: 'backoffice-info-with-circle' } },\n                  {\n                      id: 'drivers',\n                      name: 'Drivers',\n                      count: this.driver_count,\n                      icon: { class: 'backoffice-documents' },\n                  },\n              ]\n        ).concat(this.extensions);\n    }\n\n    constructor(protected _service: RepositoriesStateService) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'item',\n            this._service.driver_list.subscribe((list) => {\n                this.driver_count = list ? list.length : -1;\n                this.updateTabList();\n            })\n        );\n        this.updateTabList();\n    }\n}\n","import { Component } from '@angular/core';\nimport { PlaceRepositoryType } from '@placeos/ts-client';\nimport { BaseClass } from '../common/base.class';\nimport { RepositoriesStateService } from './repositories-state.service';\n\n@Component({\n    selector: 'repository-about',\n    template: `\n        <section class=\"mb-4 text-center\">\n            <mat-card class=\"w-52\">\n                <mat-card-content i18n=\"@@repoPullActionDetails\">\n                    Pull the latest commit for<br />\n                    this repository\n                </mat-card-content>\n                <mat-card-actions>\n                    <button\n                        mat-button\n                        class=\"w-40\"\n                        [disabled]=\"pulling\"\n                        (click)=\"pullLatestCommit()\"\n                    >\n                        <ng-container\n                            *ngIf=\"!pulling; else spinner\"\n                            i18n=\"@@repoPullAction\"\n                        >\n                            Pull\n                        </ng-container>\n                    </button>\n                </mat-card-actions>\n            </mat-card>\n        </section>\n        <section class=\"space-y-2\">\n            <div class=\"flex items-center space-x-2\">\n                <label i18n=\"@@repoTypeLabel\">Type:</label>\n                <div class=\"value\" i18n=\"@@driverListEmpty\">\n                    { item.type, select, interface { Interface Repository }\n                    driver { Driver Repository }, other { =Unknown=} }\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <label i18n=\"@@repoFolderNameLabel\">Folder name:</label>\n                <div\n                    class=\"value select-all\"\n                    [class.underline]=\"item.type === 'interface'\"\n                    [class.pointer-events-none]=\"item.type !== 'interface'\"\n                >\n                    <a [href]=\"local_url\" target=\"_blank\">{{\n                        item.folder_name || 'No folder set'\n                    }}</a>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <label i18n=\"@@repoUriLabel\">Repository URI:</label>\n                <div class=\"value underline select-all\">\n                    <a [href]=\"item.uri | safe: 'url'\" target=\"_blank\">{{\n                        repo_uri || 'No URI set'\n                    }}</a>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <label i18n=\"@@repoBranchLabel\">Branch:</label>\n                <div\n                    class=\"value select-all bg-gray-200 px-2 pb-1 pt-2 text-xs rounded mono\"\n                >\n                    {{ item.branch || 'master' }}\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <label i18n=\"@@repoCommitHashLabel\">Commit hash:</label>\n                <div\n                    class=\"value select-text bg-gray-200 px-2 pb-1 pt-2 text-xs rounded mono\"\n                >\n                    {{ item.commit_hash || 'No Commit hash set' }}\n                    <span\n                        class=\"select-text mono\"\n                        *ngIf=\"commit && commit !== item.commit_hash\"\n                    >\n                        ({{ commit }})\n                    </span>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <label i18n=\"@@descriptionLabel\">Description:</label>\n                <div class=\"value select-all\">\n                    {{ item.description || 'No description' }}\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <label i18n=\"@@repoCreatedAtLabel\">Created:</label>\n                <div class=\"value\">{{ item.created_at * 1000 | dateFrom }}</div>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <label i18n=\"@@repoUpdatedAtLabel\">Updated:</label>\n                <div class=\"value\">{{ item.updated_at * 1000 | dateFrom }}</div>\n            </div>\n        </section>\n        <ng-template #spinner>\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                padding: 1rem;\n                height: 100%;\n                width: 100%;\n            }\n\n            .mono {\n                font-family: var(--mono-font);\n            }\n        `,\n    ],\n})\nexport class RepositoryAboutComponent extends BaseClass {\n    /** Whether the latest commit is being pulled on the server */\n    public pulling: boolean;\n\n    public commit = '';\n\n    public get item(): any {\n        return this._service.active_item as any;\n    }\n\n    public get local_url() {\n        return this.item.type === PlaceRepositoryType.Interface\n            ? `${location.origin}/${this.item.folder_name}/`\n            : `${location.hash}`;\n    }\n\n    public get repo_uri() {\n        return this.item?.uri.replace(/\\/[a-zA-Z0-9\\-\\.:]*@/, '/...@');\n    }\n\n    constructor(private _service: RepositoriesStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.commit = '';\n        this.subscription(\n            'commit',\n            this._service.commit.subscribe((_) => (this.commit = _))\n        );\n    }\n\n    /**\n     * Send request to server to pull the latest commit for the active repository\n     */\n    public async pullLatestCommit() {\n        this.pulling = true;\n        await this._service.pullLatestCommit();\n        this.pulling = false;\n    }\n}\n","import { Component } from '@angular/core';\nimport { PlaceRepository } from '@placeos/ts-client';\n\nimport { RepositoriesStateService } from './repositories-state.service';\n\n@Component({\n    selector: 'repository-drivers',\n    template: `\n        <h3 class=\"font-medium text-lg mb-2\" i18n=\"@@repoDriverHeader\">Available Drivers</h3>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <div\n                role=\"table\"\n                class=\"overflow-x-auto\"\n                *ngIf=\"(driver_list | async)?.length; else empty_state\"\n            >\n                <div table-head>\n                    <td class=\"flex-1 p-2\" i18n=\"@@driverListname\">Name</td>\n                    <td class=\"w-12 p-2 h-10\"></td>\n                </div>\n                <div body class=\"overflow-y-auto\">\n                    <div table-row *ngFor=\"let item of driver_list | async\">\n                        <div class=\"flex-1 p-2\" [innerHTML]=\"item | driverFormat\"></div>\n                        <div class=\"w-12 flex justify-center\">\n                            <button mat-icon-button (click)=\"newDriver(item)\">\n                                <app-icon className=\"backoffice-plus\"></app-icon>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col p-8 items-center justify-center\">\n                <p i18n=\"@@driverListEmpty\">No drivers for repository</p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div class=\"flex flex-col p-8 items-center justify-center\">\n                <mat-spinner class=\"mb-4\" diameter=\"48\"></mat-spinner>\n                <p i18n=\"@@driverListLoading\">Loading driver list...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                padding: 1rem;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class RepositoryDriversComponent {\n    /** Whether driver list is loading */\n    public loading: boolean;\n    /** List of drivers available in the repository */\n    public readonly driver_list = this._service.driver_list;\n\n    public get item(): PlaceRepository {\n        return this._service.active_item as any;\n    }\n\n    public readonly newDriver = (d) => this._service.newDriver(d);\n\n    constructor(private _service: RepositoriesStateService) { }\n}\n","import { Routes } from '@angular/router';\n\nimport { RepositoriesComponent } from './repositories.component';\nimport { RepositoryAboutComponent } from './repository-about.component';\nimport { RepositoryDriversComponent } from './repository-drivers.component';\nimport { ExtensionOutletComponent } from '../ui/extension-outlet.component';\n\nexport const ROUTES: Routes = [\n    {\n        path: ':id',\n        component: RepositoriesComponent,\n        children: [\n            { path: 'about', component: RepositoryAboutComponent },\n            { path: 'drivers', component: RepositoryDriversComponent },\n            { path: 'extend/:id', component: ExtensionOutletComponent },\n            { path: '**', redirectTo: 'about' },\n        ],\n    },\n    { path: '**', redirectTo: '-' },\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ROUTES } from './repositories.routes';\n\nimport { RepositoriesComponent } from './repositories.component';\nimport { RepositoryAboutComponent } from './repository-about.component';\nimport { RepositoryDriversComponent } from './repository-drivers.component';\nimport { SharedContentModule } from 'apps/backoffice/src/app/ui/ui.module';\n\n@NgModule({\n    declarations: [\n        RepositoriesComponent,\n        RepositoryAboutComponent,\n        RepositoryDriversComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n    ],\n})\nexport class AppRepositoriesModule {}\n"],"sourceRoot":"webpack:///"}