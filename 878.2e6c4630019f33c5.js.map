{"version":3,"file":"878.2e6c4630019f33c5.js","mappings":"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","names":["i0","_c0","item_r3","id","icon","name","PlaceComponent","AsyncHandler","extensions","extensionsForItem","this","_service","active_item","dark_mode","_users","debug_position","_debug","position","updateTabList","tab_list","class","concat","constructor","_settings","super","open_menu","ngOnInit","title","t","i1","i2","i3","i4","core","Xpm","selectors","features","decls","vars","consts","template","rf","ctx","$event","PlaceComponent_a_5_Template","PlaceComponent_app_debug_output_10_Template","PlaceComponent_app_debug_output_11_Template","PlaceDatabase","reindex","backfill","url","apiEndpoint","post","toPromise","Yz7","factory","ɵfac","providedIn","PlaceDatabaseDetailsComponent","_engine_service","reindexing","then","err","notifyError","JSON","stringify","response","message","backfilling","PlaceDatabaseDetailsComponent_ng_container_7_Template","PlaceDatabaseDetailsComponent_ng_container_14_Template","PlaceDatabaseDetailsComponent_ng_template_15_Template","_r2","_r7","ctx_r6","changelog","backoffice_logs","ctx_r1","backend_version","_r9","ctx_r8","changelog_data","api_r11","service","commit","version","build_time","platform_version","PlaceDetailsComponent_ng_container_28_div_1_Template","ctx_r3","api_details","PlaceDetailsComponent","user","backoffice_version","VERSION","stamp","backoffice_tag","tag","backoffice_hash","hash","backoffice_build","format","time","_dialog","_cdr","loadApiDetails","loadPlatformDetails","log","open","ChangelogModalComponent","data","copy","content","copyToClipboard","notifyInfo","_this","_asyncToGenerator","details","get","catch","detectChanges","_this2","replace","fetch","text","i18n_0","$localize","PlaceDetailsComponent_button_3_Template","PlaceDetailsComponent_code_25_Template","PlaceDetailsComponent_button_26_Template","PlaceDetailsComponent_ng_container_28_Template","PlaceDetailsComponent_ng_template_29_Template","length","_r4","AdminClusterNodeComponent","points","used_memory","humanReadableByteCount","node","memory_usage","total_memory","memory_total","memory_percentage","generateCharts","ngOnChanges","changes","history","list","unshift","slice","Math","max","map","event","idx","x","y","value","viewQuery","hostname","toFixed","total_cpu","node_r1","ctx_r0","cpu_history","PlaceClusterItemComponent","cluster","cluster_nodes","edge_nodes","inputs","PlaceClusterItemComponent_ng_container_0_Template","element_r4","_r6","$implicit","ctx_r5","confirmKillProcess","cpu_usage","module_instances","PlaceClusterTaskListComponent_div_9_div_12_Template","filtered_list","PlaceClusterTaskListComponent","close","EventEmitter","column_list","filter","BehaviorSubject","_poll","process_list","pipe","loading","switchMap","queryProcesses","include_status","catchError","_","console","error","of","l","sort","a","b","tap","shareReplay","combineLatest","processes","toLowerCase","includes","next","Date","now","interval","process","ref","ConfirmModalComponent","CONFIRM_METADATA","type","subscription","componentInstance","subscribe","reason","killing","killProcess","terminateProcess","outputs","emit","PlaceClusterTaskListComponent_div_9_Template","PlaceClusterTaskListComponent_ng_template_11_Template","_c4","getValue","tmp_3_0","_r1","cluster_r7","active_cluster","_c2","PlaceClusterDetailsComponent_ng_container_1_ng_container_1_ng_container_1_Template","cluster_list","PlaceClusterDetailsComponent_ng_container_1_ng_container_1_Template","_r3","_c5","_r11","ctx_r10","ctx_r4","PlaceClusterDetailsComponent","clusters$","startWith","queryClusters","resp","date","forEach","nodes","push","core_cpu","shift","PlaceClusterDetailsComponent_ng_container_1_Template","PlaceClusterDetailsComponent_ng_template_2_Template","PlaceClusterDetailsComponent_ng_template_4_Template","item_r4","AdminInterfacesComponent_div_0_div_7_Template","interfaces","AdminInterfacesComponent","loadInterfaces","listInterfaceRepositories","Object","keys","AdminInterfacesComponent_div_0_Template","AdminInterfacesComponent_ng_template_1_Template","editBroker","ctx_r7","deleteBroker","description","host","port","filters","AdminBrokersComponent_div_6_div_18_Template","brokers","AdminBrokersComponent","loadBrokers","newBroker","ItemCreateUpdateModalComponent","height","width","maxHeight","maxWidth","item","PlaceMQTTBroker","save","addBroker","updateBroker","openConfirmModal","removeBroker","notifySuccess","queryBrokers","AdminBrokersComponent_div_6_Template","AdminBrokersComponent_ng_template_7_Template","type_r8","type_r11","condition_r9","_r13","ExtensionModalComponent_main_4_div_27_mat_option_7_Template","ctx_r16","removeCondition","_c19","condition_ops","_c20","ExtensionModalComponent_main_4_mat_option_8_Template","ExtensionModalComponent_main_4_label_26_Template","ExtensionModalComponent_main_4_div_27_Template","_r18","ctx_r17","addCondition","form","available_types","controls","conditions","_r20","ctx_r19","submit","ctx_r2","ExtensionModalComponent","_data","_hotkey","FormGroup","FormControl","Validators","required","listen","patchValue","condition","setValue","c","markAllAsTouched","valid","metadata","MAT_DIALOG_DATA","i18n_1","ExtensionModalComponent_button_3_Template","ExtensionModalComponent_main_4_Template","ExtensionModalComponent_footer_5_Template","ExtensionModalComponent_ng_template_6_Template","domain_r5","extension_r6","_r8","editExtension","ctx_r9","removeExtension","_c1","domain","ctx_r12","setDomain","PlaceExtensionsComponent_div_2_mat_option_6_Template","ctx_r13","PlaceExtensionsComponent_div_2_div_26_Template","domain_list","extension_list","PlaceExtensionsComponent","queryDomains","r","config","backoffice","extend","localeCompare","parse","undefined","first","_ref","i","updateDomain","_x","apply","arguments","_this3","_ref2","e","_x2","_this4","ext","updated","PlaceDomain","attrs","PlaceExtensionsComponent_div_2_Template","PlaceExtensionsComponent_ng_template_3_Template","BookingLimitsModalComponent","_dialog_ref","tenant","booking_limits","limits","k","amount","disableClose","BookingLimitsModalComponent_button_4_Template","BookingLimitsModalComponent_main_5_Template","BookingLimitsModalComponent_footer_6_Template","BookingLimitsModalComponent_ng_template_7_Template","item_r10","key","name_map","StaffTenantModalComponent_main_5_form_35_ng_container_1_span_4_Template","StaffTenantModalComponent_main_5_form_35_ng_container_1_input_8_Template","StaffTenantModalComponent_main_5_form_35_ng_container_1_textarea_9_Template","disabled","StaffTenantModalComponent_main_5_form_35_ng_container_1_Template","credentials","_r17","show_outlook","StaffTenantModalComponent_main_5_div_31_Template","StaffTenantModalComponent_main_5_form_35_Template","StaffTenantModalComponent_main_5_div_36_Template","StaffTenantModalComponent_main_5_form_37_Template","platform","delegated","_r19","ctx_r18","FIELD_NAME_MAPPING","issuer","conference_type","signing_key","sub","client_id","client_secret","scopes","user_agent","StaffTenantModalComponent","office_form","google_form","email_domain","service_account","email","fields","handleDelegation","field","disable","setValidators","enable","updateValueAndValidity","valueChanges","removeControl","addControl","app_id","app_domain","app_resource","source_location","base_path","getInvalidFields","reduce","m","outlook_config","cleanObject","put","StaffTenantModalComponent_button_4_Template","StaffTenantModalComponent_main_5_Template","StaffTenantModalComponent_footer_6_Template","StaffTenantModalComponent_ng_template_7_Template","domain_r6","item_r9","editLimits","editTenant","removeTenant","PlaceStaffAPIComponent_ng_container_9_div_1_div_9_Template","tenants","PlaceStaffAPIComponent_ng_container_9_div_1_Template","tmp_0_0","PlaceStaffAPIComponent","afterClosed","system","del","statusText","PlaceStaffAPIComponent_mat_option_6_Template","PlaceStaffAPIComponent_ng_container_9_Template","PlaceStaffAPIComponent_ng_template_10_Template","PlaceStaffAPIComponent_ng_template_12_Template","EdgeModalComponent","edge","new_edge","updateEdge","addEdge","EdgeModalComponent_button_4_Template","EdgeModalComponent_main_5_Template","EdgeModalComponent_footer_6_Template","EdgeModalComponent_ng_template_7_Template","item_r8","_r10","edit","ctx_r11","remove","PlaceEdgeComponent_ng_container_2_div_1_div_10_Template","edges","PlaceEdgeComponent_ng_container_2_div_1_Template","copyKey","x_api_key","PlaceEdgeComponent","last_change","_clipboard","_change","_hide","_edge_list","debounceTime","queryEdges","hide","token","retrieveEdgeToken","sessionStorage","setItem","_ref3","removeEdge","removeItem","_x3","edge_data","getItem","PlaceEdgeComponent_ng_container_2_Template","PlaceEdgeComponent_div_3_Template","PlaceEdgeComponent_ng_template_5_Template","PlaceEdgeComponent_ng_template_7_Template","tmp_2_0","schema_r5","schema_copy","saveSchema","schema","AdminSchemasComponent","_state","schema_list","schemas","copySchema","active_schema","newSchema","AdminSchemasComponent_mat_option_6_Template","preventDefault","AdminSchemasComponent_div_13_Template","AdminSchemasComponent_ng_container_15_Template","AdminSchemasComponent_ng_template_16_Template","getUnixTime","dirtyDate","requiredArgs","floor","getTime","toDate","PlaceAPIKeyDetails","user_id","authority_id","permissions","created_at","updated_at","secret","scope_r12","_r14","removeScope","option_r15","addScope","input","item_r18","setSearch","APIKeyModalComponent_main_4_mat_chip_23_Template","_r22","ctx_r21","APIKeyModalComponent_main_4_mat_option_29_Template","ctx_r23","focusInput","stopPropagation","ctx_r25","APIKeyModalComponent_main_4_button_44_Template","scope_list","_r5","separators","_c3","users","_r27","ctx_r26","APIKeyModalComponent","minLength","search_str","available_scopes","sys_admin","support","ENTER","COMMA","SPACE","setTimeout","_input_el","nativeElement","focus","s","addChipItem","removeChipItem","join","APIKeyModalComponent_button_3_Template","APIKeyModalComponent_main_4_Template","APIKeyModalComponent_footer_5_Template","APIKeyModalComponent_ng_template_6_Template","APIKeyService","_search","_domain","_last_key","last_key","asObservable","active_domain","available_domains","limit","available_keys","query","query_params","fn","d","path","q","queryUsers","newKey","Promise","race","create","form_data","removeKey","tmp_1_0","scope_r11","AdminAPIKeysComponent_div_14_div_14_span_6_Template","deleteKey","AdminAPIKeysComponent_div_14_div_14_Template","key_list","ROUTES","component","canActivate","AuthorisedAdminGuard","children","AdminAPIKeysComponent","take","AdminAPIKeysComponent_mat_option_7_Template","AdminAPIKeysComponent_div_12_Template","AdminAPIKeysComponent_div_14_Template","AdminAPIKeysComponent_ng_template_16_Template","tmp_4_0","ExtensionOutletComponent","redirectTo","AppPlaceModule","oAB","cJS","imports","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","forChild","SharedContentModule","period","scheduler","async","isNumeric","schedule","Observable","subscriber","add","dispatch","counter","state"],"sourceRoot":"webpack:///","sources":["./apps/backoffice/src/app/admin/admin.component.ts","./apps/backoffice/src/app/common/database.service.ts","./apps/backoffice/src/app/admin/database-details.component.ts","./apps/backoffice/src/app/admin/details.component.ts","./apps/backoffice/src/app/admin/cluster-details/cluster-node.component.ts","./apps/backoffice/src/app/admin/cluster-details/cluster-item.component.ts","./apps/backoffice/src/app/admin/cluster-details/cluster-task-list.component.ts","./apps/backoffice/src/app/admin/cluster-details/cluster-details.component.ts","./apps/backoffice/src/app/admin/interfaces.component.ts","./apps/backoffice/src/app/admin/brokers.component.ts","./apps/backoffice/src/app/admin/extension-modal/extension-modal.component.html","./apps/backoffice/src/app/admin/extension-modal/extension-modal.component.ts","./apps/backoffice/src/app/admin/extensions.component.ts","./apps/backoffice/src/app/admin/booking-limits-modal.component.ts","./apps/backoffice/src/app/admin/staff-tenant-modal.component.ts","./apps/backoffice/src/app/admin/staff-api.component.ts","./apps/backoffice/src/app/admin/edge-modal.component.ts","./apps/backoffice/src/app/admin/edge.component.ts","./apps/backoffice/src/app/admin/schemas.component.ts","./node_modules/date-fns/esm/getUnixTime/index.js","./node_modules/date-fns/esm/getTime/index.js","./apps/backoffice/src/app/admin/api-keys/api-key-details.class.ts","./apps/backoffice/src/app/admin/api-keys/api-key-modal.component.ts","./apps/backoffice/src/app/admin/api-keys/api-keys.service.ts","./apps/backoffice/src/app/admin/api-keys/api-keys.component.ts","./apps/backoffice/src/app/admin/admin.routes.ts","./apps/backoffice/src/app/admin/admin.module.ts","./node_modules/rxjs/_esm2015/internal/observable/interval.js"],"sourcesContent":["import { Component } from '@angular/core';\n\nimport { AsyncHandler } from 'apps/backoffice/src/app/common/base.class';\nimport { extensionsForItem } from '../common/api';\nimport { PlaceDebugService } from '../common/debug.service';\nimport { ActiveItemService } from '../common/item.service';\nimport { SettingsService } from '../common/settings.service';\nimport { BackofficeUsersService } from '../users/users.service';\n\n@Component({\n    selector: 'app-engine',\n    template: `\n        <div\n            class=\"absolute inset-0 flex items-center divide-y sm:divide-y-0 sm:divide-x divide-gray-300 dark:divide-neutral-600 bg-white dark:bg-neutral-700\"\n        >\n            <sidebar-menu [(open)]=\"open_menu\" class=\"sm:h-full\"></sidebar-menu>\n            <div class=\"flex flex-col h-full flex-1 overflow-hidden w-px\">\n                <div\n                    class=\"flex flex-1 z-0 h-1/2 dark:text-white dark:bg-neutral-700\"\n                >\n                    <div\n                        class=\"h-full relative sm:w-56 px-2 my-4 border-r border-gray-400 border-opacity-30 z-10 pt-10 sm:pt-0\"\n                    >\n                        <a\n                            *ngFor=\"let item of tab_list\"\n                            class=\"flex items-center space-x-2 m-2 rounded h-8 px-3 hover:bg-primary hover:bg-opacity-25\"\n                            [routerLink]=\"['/admin', item.id]\"\n                            routerLinkActive=\"active\"\n                        >\n                            <app-icon [icon]=\"item.icon\"></app-icon>\n                            <span class=\"hidden sm:block\">{{ item.name }}</span>\n                        </a>\n                    </div>\n                    <div\n                        class=\"relative flex-1 w-1/2 h-full z-0 px-4 dark:text-white overflow-auto\"\n                    >\n                        <router-outlet></router-outlet>\n                    </div>\n                    <button\n                        btn\n                        icon\n                        class=\"sm:hidden mr-2 absolute top-2 left-4 z-40\"\n                        (click)=\"open_menu = true\"\n                    >\n                        <app-icon className=\"backoffice-menu\"></app-icon>\n                    </button>\n                </div>\n                <app-debug-output\n                    below\n                    *ngIf=\"debug_position === 'below'\"\n                ></app-debug-output>\n            </div>\n            <app-debug-output\n                side\n                *ngIf=\"debug_position === 'side'\"\n                class=\"h-full max-w-[30rem]\"\n            ></app-debug-output>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                height: 100%;\n            }\n\n            .active {\n                background-color: var(--primary) !important;\n                color: #fff;\n                margin-right: -1px;\n            }\n        `,\n    ],\n})\nexport class PlaceComponent extends AsyncHandler {\n    public tab_list = [];\n    public open_menu = false;\n\n    public get extensions() {\n        return extensionsForItem(this._service.active_item, 'admin');\n    }\n\n    public get dark_mode() {\n        return this._users.dark_mode;\n    }\n\n    public get debug_position() {\n        return this._debug.position;\n    }\n\n    public updateTabList() {\n        this.tab_list = [\n            { id: 'about', name: 'About', icon: { class: 'backoffice-info' } },\n            {\n                id: 'database',\n                name: 'Database',\n                icon: { class: 'backoffice-database' },\n            },\n            {\n                id: 'clusters',\n                name: 'Clusters',\n                icon: { class: 'backoffice-server' },\n            },\n            { id: 'edge', name: 'Edges', icon: { class: 'backoffice-server' } },\n            {\n                id: 'interfaces',\n                name: 'Interfaces',\n                icon: { class: 'backoffice-browser' },\n            },\n            {\n                id: 'brokers',\n                name: 'MQTT Brokers',\n                icon: { class: 'backoffice-server' },\n            },\n            {\n                id: 'staff-api',\n                name: 'Staff API',\n                icon: { class: 'backoffice-gist' },\n            },\n            {\n                id: 'extensions',\n                name: 'Extensions',\n                icon: { class: 'backoffice-gist' },\n            },\n            {\n                id: 'api-keys',\n                name: 'API Keys',\n                icon: { class: 'backoffice-key' },\n            },\n            {\n                id: 'schemas',\n                name: 'Custom Schemas',\n                icon: { class: 'backoffice-list' },\n            },\n        ].concat(this.extensions);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _service: ActiveItemService,\n        private _users: BackofficeUsersService,\n        private _debug: PlaceDebugService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._settings.title = 'Admin';\n        this.updateTabList();\n    }\n}\n","import { post, apiEndpoint } from '@placeos/ts-client';\nimport { Injectable } from '@angular/core';\n\nimport { AsyncHandler } from 'apps/backoffice/src/app/common/base.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PlaceDatabase extends AsyncHandler {\n    public reindex(backfill: boolean = true) {\n        const url = `${apiEndpoint()}/reindex${\n            backfill ? '?backfill=true' : ''\n        }`;\n        return post(url, null).toPromise();\n    }\n\n    public backfill() {\n        const url = `${apiEndpoint()}/backfill`;\n        return post(url, null).toPromise();\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { PlaceDatabase } from 'apps/backoffice/src/app/common/database.service';\nimport { notifyError } from 'apps/backoffice/src/app/common/notifications';\n\n@Component({\n    selector: 'app-database-details',\n    template: `\n        <div class=\"flex w-full p-4 space-x-4\">\n            <div\n                class=\"rounded p-2 border border-gray-200 dark:border-neutral-500 space-y-2 w-1/3 flex-1 flex flex-col\"\n            >\n                <p class=\"text-center p-2\">\n                    Re-index elasticsearch for the<br />current state of the\n                    database\n                </p>\n                <button\n                    btn\n                    class=\"w-[calc(100%-0.5rem)]\"\n                    [disabled]=\"reindexing\"\n                    (click)=\"reindex()\"\n                >\n                    <ng-container *ngIf=\"!reindexing; else spinner\">\n                        Re-index\n                    </ng-container>\n                </button>\n            </div>\n            <div\n                class=\"rounded p-2 border border-gray-200 dark:border-neutral-500 space-y-2 w-1/3 flex-1 flex flex-col\"\n            >\n                <p class=\"text-center p-2\">\n                    Backfill elasticsearch with the<br />current state of the\n                    database\n                </p>\n                <button\n                    btn\n                    class=\"w-[calc(100%-0.5rem)]\"\n                    [disabled]=\"backfilling\"\n                    (click)=\"backfill()\"\n                >\n                    <ng-container *ngIf=\"!backfilling; else spinner\">\n                        Backfill\n                    </ng-container>\n                </button>\n            </div>\n        </div>\n        <ng-template #spinner>\n            <div class=\"flex justify-center w-full my-1\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                padding-top: 1em;\n                display: flex;\n                flex-wrap: wrap;\n            }\n\n            button {\n                min-width: 10em;\n                margin: 0.25em;\n            }\n\n            mat-card {\n                margin: 0.5em;\n                text-align: center;\n            }\n        `,\n    ],\n})\nexport class PlaceDatabaseDetailsComponent {\n    /** Whether backend is reindexing the database */\n    public reindexing: boolean;\n    /** Whether backend is reindexing the database */\n    public backfilling: boolean;\n\n    constructor(private _engine_service: PlaceDatabase) {}\n\n    public reindex() {\n        this.reindexing = true;\n        this._engine_service.reindex().then(\n            () => (this.reindexing = false),\n            (err) => {\n                this.reindexing = false;\n                notifyError(\n                    `Error reindexing database. Error: ${JSON.stringify(\n                        err.response || err.message || err\n                    )}`\n                );\n            }\n        );\n    }\n\n    public backfill() {\n        this.backfilling = true;\n        this._engine_service.backfill().then(\n            () => (this.backfilling = false),\n            (err) => {\n                this.backfilling = false;\n                notifyError(\n                    `Error reindexing database. Error: ${JSON.stringify(\n                        err.response || err.message || err\n                    )}`\n                );\n            }\n        );\n    }\n}\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { get, apiEndpoint } from '@placeos/ts-client';\n\nimport { VERSION } from '../../environments/version';\nimport { AsyncHandler } from 'apps/backoffice/src/app/common/base.class';\nimport {\n    ChangelogModalComponent,\n    ChangelogModalData,\n} from 'apps/backoffice/src/app/overlays/changelog-modal/changelog-modal.component';\nimport { BackofficeUsersService } from 'apps/backoffice/src/app/users/users.service';\nimport {\n    notifyError,\n    notifyInfo,\n} from 'apps/backoffice/src/app/common/notifications';\n\nimport { copyToClipboard } from '../common/general';\nimport { format } from 'date-fns';\n\nexport interface PlaceServiceDetails {\n    /** Name of the service */\n    service: string;\n    /** Commit hash of the service */\n    commit: string;\n    /** Current version number of the service */\n    version: string;\n    /** Build time of the active version of the service */\n    build_time: string;\n    /** Version of the backend service platform */\n    platform_version: string;\n}\n\n@Component({\n    selector: 'app-engine-details',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <h3 class=\"text-lg font-medium\" i18n=\"@@backoffice\">\n                Application Details (Backoffice)\n            </h3>\n            <button\n                *ngIf=\"backoffice_logs\"\n                class=\"p-2 text-xs underline\"\n                (click)=\"changelog(backoffice_logs)\"\n            >\n                View Changelog\n            </button>\n        </div>\n        <section class=\"space-y-2 mb-4 flex flex-col px-2\">\n            <div class=\"flex items-center\">\n                <label for=\"version\" class=\"w-24\" i18n=\"@@version\"\n                    >Version:</label\n                >\n                <code\n                    name=\"version\"\n                    (click)=\"copy('version', backoffice_version)\"\n                >\n                    {{ backoffice_version }}\n                </code>\n                <code\n                    name=\"tag\"\n                    class=\"ml-2\"\n                    (click)=\"copy('tag', backoffice_tag)\"\n                >\n                    {{ backoffice_tag }}\n                </code>\n            </div>\n            <div class=\"flex items-center\">\n                <label for=\"hash\" class=\"w-24\" i18n=\"@@commitHash\"\n                    >Commit Hash:</label\n                >\n                <code name=\"hash\" (click)=\"copy('hash', backoffice_hash)\">\n                    {{ backoffice_hash }}\n                </code>\n            </div>\n            <div class=\"flex items-center\">\n                <label for=\"build-time\" class=\"w-24\" i18n=\"@@buildTime\"\n                    >Build:</label\n                >\n                <div\n                    name=\"build-time\"\n                    class=\"text-sm\"\n                    (click)=\"copy('build time', backoffice_build)\"\n                >\n                    {{ backoffice_build }}\n                </div>\n            </div>\n        </section>\n        <div class=\"flex items-center space-x-2\">\n            <div class=\"text-lg font-medium\" i18n=\"@@apiHeader\">\n                API Services\n            </div>\n            <code *ngIf=\"backend_version\">{{ backend_version }}</code>\n            <button\n                *ngIf=\"changelog_data\"\n                class=\"p-2 text-xs underline\"\n                (click)=\"changelog(changelog_data)\"\n            >\n                View Changelog\n            </button>\n        </div>\n        <section class=\"flex flex-wrap py-2\">\n            <ng-container *ngIf=\"api_details.length > 0; else empty_state\">\n                <div\n                    class=\"bg-white dark:bg-neutral-700 rounded border border-gray-200 dark:border-neutral-500 m-2 min-w-[40%] flex-1 overflow-hidden\"\n                    *ngFor=\"let api of api_details\"\n                >\n                    <h3\n                        class=\"w-full px-4 py-2 mb-1 border-b border-gray-200 dark:border-neutral-500 mono\"\n                    >\n                        {{ api.service }}\n                    </h3>\n                    <div\n                        class=\"flex items-center px-4 py-1 hover:bg-gray-400/20\"\n                    >\n                        <label class=\"w-24\">Commit Hash</label>\n                        <code>\n                            {{ api.commit | slice: 0:8 }}\n                        </code>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4 py-1 hover:bg-gray-400/20\"\n                    >\n                        <label class=\"w-24\">Version</label>\n                        <code>\n                            {{ api.version }}\n                        </code>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4 py-1 hover:bg-gray-400/20\"\n                    >\n                        <label class=\"w-24\">Build time</label>\n                        <div class=\"text-sm\">\n                            {{ api.build_time | date: 'MMM d, y, h:mm a' }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4 py-1 hover:bg-gray-400/20 mb-1\"\n                    >\n                        <label class=\"w-24\">Platform</label>\n                        <code>\n                            {{ api.platform_version }}\n                        </code>\n                    </div>\n                </div>\n            </ng-container>\n        </section>\n        <ng-template #empty_state>\n            <div class=\"w-full p-24 flex flex-col items-center justify-center\">\n                <div\n                    class=\"p-4 border rounded-lg border-gray-200 dark:border-neutral-500 opacity-60\"\n                >\n                    No API service details available.\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                padding: 1rem;\n                width: 100%;\n                height: 100%;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class PlaceDetailsComponent extends AsyncHandler implements OnInit {\n    /** Current details about the API */\n    public api_details: PlaceServiceDetails[] = [];\n    public changelog_data: string = '';\n    public backend_version = '';\n    public backoffice_logs = '';\n\n    public get user() {\n        return this._users.user;\n    }\n\n    public get backoffice_version() {\n        return VERSION?.stamp || '';\n    }\n\n    public get backoffice_tag() {\n        return VERSION?.tag || '';\n    }\n\n    public get backoffice_hash() {\n        return VERSION?.hash || '';\n    }\n\n    public get backoffice_build() {\n        return `${format(VERSION.time, 'dd MMM yyyy')} at ${format(\n            VERSION.time,\n            ' h:mma'\n        )}`;\n    }\n\n    constructor(\n        private _users: BackofficeUsersService,\n        private _dialog: MatDialog,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.loadApiDetails();\n        this.loadPlatformDetails();\n    }\n\n    public changelog(log: string) {\n        this._dialog.open<ChangelogModalComponent, ChangelogModalData>(\n            ChangelogModalComponent,\n            {\n                data: { changelog: log },\n            }\n        );\n    }\n\n    public copy(name: string, content: string) {\n        copyToClipboard(content);\n        notifyInfo(`Copied ${name} to clipboard`);\n    }\n\n    public async loadApiDetails() {\n        const details = await get(`${apiEndpoint()}/cluster/versions`)\n            .toPromise()\n            .catch((err) =>\n                notifyError(\n                    `Error loading API details. Error: ${JSON.stringify(\n                        err.response || err.message || err\n                    )}`\n                )\n            );\n        this.api_details = (details as any) || [];\n        this._cdr.detectChanges();\n    }\n\n    public async loadPlatformDetails() {\n        const { changelog, version } = await get(`${apiEndpoint()}/platform`)\n            .toPromise()\n            .catch((err) => {\n                notifyError(\n                    `Error loading API details. Error: ${JSON.stringify(\n                        err.response || err.message || err\n                    )}`\n                );\n                throw err;\n            });\n        this.changelog_data = changelog.replace('# Changelog\\n\\n', '');\n        this.backend_version = version;\n        this.backoffice_logs = await (\n            await fetch(\n                'https://raw.githubusercontent.com/PlaceOS/backoffice/develop/CHANGELOG.md'\n            )\n        ).text();\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { humanReadableByteCount } from '@placeos/ts-client';\n\nimport { differenceInSeconds } from 'date-fns';\nimport { Point } from '../../common/types';\n\ninterface PlaceClusterRunCounts {\n    modules: number;\n    drivers: number;\n}\n\nexport interface PlaceClusterNode {\n    hostname: string;\n    cpu_count: number;\n    core_cpu: number;\n    total_cpu: number;\n    memory_total: number;\n    memory_usage: number;\n    core_memory: number;\n    run_count?: PlaceClusterRunCounts;\n}\n\nexport interface PlaceClusterUsageStamp {\n    id: number;\n    value: number;\n}\n\n@Component({\n    selector: 'admin-cluster-node',\n    template: `\n        <h4>{{ node?.hostname }}</h4>\n        <div class=\"mb-2 h-40 w-64\">\n            <div basic-line-graph [points]=\"points\"></div>\n        </div>\n        <div class=\"memory-utilisation\">\n            <div class=\"flex items-center space-x-2 p-2\">\n                <label i18n=\"@@cluserMemoryUsed\">Memory Used</label>\n                <div class=\"value\">\n                    {{ used_memory }} / {{ total_memory }} ({{\n                        memory_percentage.toFixed(2)\n                    }}%)\n                </div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 bg-black bg-opacity-5 rounded p-2\"\n            >\n                <label i18n=\"@@clusterCpuUsage\">CPU Usage</label>\n                <div class=\"value\">{{ node?.total_cpu }}%</div>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class AdminClusterNodeComponent implements OnChanges, OnInit {\n    /** Node to display on the view */\n    @Input() public node: PlaceClusterNode;\n    /** Historical data for node */\n    @Input() public history: PlaceClusterUsageStamp[];\n    /** Store for the chart data object */\n    // private _chart: Chart;\n    /**  */\n    public points: Point[] = [];\n\n    public get used_memory() {\n        return humanReadableByteCount((this.node?.memory_usage || 0) * 1024);\n    }\n\n    public get total_memory() {\n        return humanReadableByteCount((this.node?.memory_total || 0) * 1024);\n    }\n\n    public get memory_percentage() {\n        return (\n            ((this.node?.memory_usage || 0) / (this.node?.memory_total || 1)) *\n            100\n        );\n    }\n\n    @ViewChild('chart', { static: true })\n    public _chart_el: ElementRef<HTMLCanvasElement>;\n\n    public ngOnInit() {\n        this.generateCharts();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.history && this.history) {\n            this.generateCharts();\n        }\n    }\n\n    public generateCharts(): void {\n        const list = [...this.history] || [];\n        while (list.length < 12) {\n            list.unshift({} as any);\n        }\n        const data = list\n            .slice(Math.max(0, list.length - 12))\n            .map((event, idx) => ({\n                x: idx,\n                y: event.value || 0,\n            }));\n        this.points = [...data];\n    }\n}\n","import {\n    Component,\n    OnInit,\n    Input,\n    OnChanges,\n    SimpleChanges,\n} from '@angular/core';\nimport { PlaceCluster } from '@placeos/ts-client';\nimport { HashMap } from 'apps/backoffice/src/app/common/types';\nimport {\n    PlaceClusterNode,\n    PlaceClusterUsageStamp,\n} from './cluster-node.component';\n\n@Component({\n    selector: 'engine-cluster-item',\n    template: `\n        <ng-container *ngFor=\"let node of cluster_nodes\">\n            <admin-cluster-node\n                [node]=\"node\"\n                [history]=\"cpu_history[node.hostname] || []\"\n            ></admin-cluster-node>\n        </ng-container>\n    `,\n    styles: [``],\n})\nexport class PlaceClusterItemComponent implements OnChanges {\n    /** Cluster to display details for */\n    @Input() public cluster: PlaceCluster;\n    /** List of historical data for cluster's CPU usage */\n    @Input() public cpu_history: HashMap<PlaceClusterUsageStamp[]> = {};\n    /** List of nodes contained by the cluster */\n    public cluster_nodes: PlaceClusterNode[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.cluster && this.cluster) {\n            this.cluster_nodes = [this.cluster, ...this.cluster.edge_nodes];\n            this.cpu_history = this.cpu_history || {};\n        }\n    }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    PlaceCluster,\n    PlaceProcess,\n    terminateProcess,\n    queryProcesses,\n} from '@placeos/ts-client';\n\nimport { AsyncHandler } from 'apps/backoffice/src/app/common/base.class';\nimport {\n    ConfirmModalComponent,\n    CONFIRM_METADATA,\n} from 'apps/backoffice/src/app/overlays/confirm-modal.component';\nimport { notifyError } from 'apps/backoffice/src/app/common/notifications';\nimport { BehaviorSubject, combineLatest, interval, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'engine-cluster-task-list',\n    template: `\n        <div class=\"flex items-center mb-4\">\n            <button btn icon (click)=\"close.emit()\">\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'backoffice-arrow-left' }\"\n                ></app-icon>\n            </button>\n            <h3 class=\"text-lg font-medium\" i18n=\"@@clusterHeader\">\n                Cluster - {{ cluster?.hostname }}\n            </h3>\n            <div class=\"flex-1\"></div>\n            <mat-form-field appearance=\"outline\" class=\"h-12\">\n                <app-icon\n                    matPrefix\n                    className=\"backoffice-magnifying-glass\"\n                ></app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"filter.getValue()\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter processes...\"\n                />\n            </mat-form-field>\n        </div>\n        <div\n            role=\"table\"\n            class=\"h-1/2 flex-1\"\n            *ngIf=\"(filtered_list | async)?.length; else empty_state\"\n        >\n            <div table-head>\n                <div class=\"flex-1 p-2\">Name</div>\n                <div class=\"w-24 p-2\">CPU %</div>\n                <div class=\"w-24 p-2\">Memory</div>\n                <div class=\"w-24 p-2\">Instances</div>\n                <div class=\"w-12 p-2\"></div>\n            </div>\n            <div table-body>\n                <div table-row *ngFor=\"let element of filtered_list | async\">\n                    <div class=\"flex-1 p-2\" [title]=\"element.id\">\n                        <code\n                            class=\"truncate\"\n                            [innerHTML]=\"element.id | driverFormat\"\n                        ></code>\n                    </div>\n                    <div class=\"w-24 p-2 text-right justify-end\">\n                        {{ element.cpu_usage.toFixed(2) }}%\n                    </div>\n                    <div class=\"w-24 p-2 text-right justify-end\">\n                        {{ element.used_memory }}\n                    </div>\n                    <div class=\"w-24 p-2 text-right justify-end\">\n                        {{ element.module_instances }}\n                    </div>\n                    <div class=\"w-12 flex items-center justify-center\">\n                        <button btn icon (click)=\"confirmKillProcess(element)\">\n                            <app-icon className=\"backoffice-trash\"></app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8\">\n                <p i18n=\"@@processTableEmpty\">No tasks running on cluster</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                padding: 1rem;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class PlaceClusterTaskListComponent extends AsyncHandler {\n    /** Cluster to display tasks details for */\n    @Input() public cluster: PlaceCluster;\n    /** Emitter for close events */\n    @Output() public close = new EventEmitter<void>();\n    /** Whether the task list is updating */\n    public loading: boolean;\n    /** ID of the process being killed */\n    public killing: string;\n\n    public column_list: string[] = [\n        'id',\n        'cpu_usage',\n        'memory_usage',\n        'module_instances',\n        'running',\n    ];\n\n    public filter = new BehaviorSubject('');\n\n    private _poll = new BehaviorSubject(0);\n\n    public readonly process_list: Observable<PlaceProcess[]> = this._poll.pipe(\n        filter(() => !this.loading),\n        switchMap(() => {\n            this.loading = true;\n            return queryProcesses(this.cluster.id, {\n                include_status: true,\n            } as any).pipe(\n                catchError((_) => {\n                    console.error(_);\n                    return of([]);\n                })\n            );\n        }),\n        map((l) =>\n            (l || []).sort((a, b) => b.module_instances - a.module_instances)\n        ),\n        tap(() => (this.loading = false)),\n        shareReplay(1)\n    );\n\n    public readonly filtered_list = combineLatest([\n        this.filter,\n        this.process_list,\n    ]).pipe(\n        map(([filter, processes]) => {\n            return processes.filter((_) =>\n                _.id.toLowerCase().includes(filter.toLowerCase())\n            );\n        }),\n        shareReplay(1)\n    );\n\n    constructor(private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._poll.next(Date.now());\n        this.interval('poll', () => this._poll.next(Date.now()), 5000);\n    }\n\n    public confirmKillProcess(process: PlaceProcess): void {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: `Kill process`,\n                content: `\n                    <p>Are you sure you want kill the process for \"${process.id}\"?</p>\n                    <p>The process will be terminated <strong>immediately</strong>.\n                    The process may be restarted after a short while.</p>\n                `,\n                icon: { type: 'icon', class: 'backoffice-trash' },\n            },\n        });\n        this.subscription(\n            'confirm_kill',\n            ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done') {\n                    this.killing = process.id;\n                    ref.componentInstance.loading = 'Processing request...';\n                    this.killProcess(process).then(\n                        () => {\n                            this.killing = null;\n                            ref.close();\n                        },\n                        (err) => {\n                            ref.componentInstance.loading = null;\n                            this.killing = null;\n                            notifyError(\n                                `Error killing process. Error: ${JSON.stringify(\n                                    err.response || err.message || err\n                                )}`\n                            );\n                            ref.close();\n                        }\n                    );\n                }\n            })\n        );\n    }\n\n    public killProcess(process: PlaceProcess) {\n        return terminateProcess(this.cluster.id, process.id).toPromise();\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n    map,\n    catchError,\n    switchMap,\n    tap,\n    filter,\n    startWith,\n} from 'rxjs/operators';\n\nimport { PlaceCluster, queryClusters } from '@placeos/ts-client';\nimport { AsyncHandler } from 'apps/backoffice/src/app/common/base.class';\nimport { HashMap } from 'apps/backoffice/src/app/common/types';\n\nimport { PlaceClusterUsageStamp } from './cluster-node.component';\nimport { interval } from 'rxjs';\n\n@Component({\n    selector: 'engine-cluster-details',\n    template: `\n        <div class=\"flex flex-wrap overflow-auto max-h-full\">\n            <ng-container\n                *ngIf=\"cluster_list && cluster_list.length; else empty_state\"\n            >\n                <ng-container *ngIf=\"!active_cluster; else process_state\">\n                    <ng-container *ngFor=\"let cluster of cluster_list\">\n                        <mat-card class=\"m-2 text-center\">\n                            <mat-card-header>\n                                <mat-card-title clas=\"capitalize\"\n                                    >{{\n                                        cluster.hostname || 'Undefined Cluster'\n                                    }}\n                                </mat-card-title>\n                            </mat-card-header>\n                            <mat-card-content>\n                                <engine-cluster-item\n                                    [cluster]=\"cluster\"\n                                    [cpu_history]=\"\n                                        cpu_history[cluster.id] || []\n                                    \"\n                                ></engine-cluster-item>\n                            </mat-card-content>\n                            <mat-card-actions>\n                                <button\n                                    btn\n                                    (click)=\"active_cluster = cluster\"\n                                    i18n=\"@@viewClusterProcesses\"\n                                >\n                                    View Processes\n                                </button>\n                            </mat-card-actions>\n                        </mat-card>\n                    </ng-container>\n                </ng-container>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center p-8 space-y-2\"\n            >\n                <app-icon\n                    class=\"text-3xl\"\n                    [icon]=\"{ class: 'backoffice-cross' }\"\n                ></app-icon>\n                <div class=\"text\" i18n=\"@@clusterListEmpty\">\n                    No Cluster details to show\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #process_state>\n            <engine-cluster-task-list\n                [cluster]=\"active_cluster\"\n                (close)=\"active_cluster = null\"\n            ></engine-cluster-task-list>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PlaceClusterDetailsComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** List of available clusters on this instance of engine */\n    public cluster_list: PlaceCluster[] = [];\n    /** Map of clusters to CPU usage history */\n    public cpu_history: HashMap<HashMap<PlaceClusterUsageStamp[]>> = {};\n    /** Active cluster to show details for */\n    public active_cluster: PlaceCluster;\n    /** Whether cluster details are being loaded */\n    public loading: boolean;\n\n    public readonly clusters$ = interval(2000).pipe(\n        startWith(0),\n        filter(() => !this.active_cluster && !this.loading),\n        switchMap(() => {\n            this.loading = true;\n            return queryClusters({ include_status: true } as any).pipe(\n                catchError((_) => ({ data: [] } as any))\n            );\n        }),\n        map((resp: { data: any[] }) => resp.data),\n        map((list) => {\n            this.cluster_list = list || [];\n            const date = Date.now();\n            this.cluster_list.forEach((cluster) => {\n                if (!this.cpu_history[cluster.id]) {\n                    this.cpu_history[cluster.id] = {};\n                }\n                const nodes = [cluster, ...cluster.edge_nodes] as any;\n                for (const node of nodes) {\n                    if (!this.cpu_history[cluster.id][node.hostname]) {\n                        this.cpu_history[cluster.id][node.hostname] = [];\n                    }\n                    this.cpu_history[cluster.id][node.hostname].push({\n                        id: date,\n                        value: node.core_cpu,\n                    });\n                    if (\n                        this.cpu_history[cluster.id][node.hostname].length > 120\n                    ) {\n                        this.cpu_history[cluster.id][node.hostname].shift();\n                    }\n                }\n            });\n        }),\n        tap(() => (this.loading = false))\n    );\n\n    public ngOnInit(): void {\n        this.subscription('load_cluster', this.clusters$.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { listInterfaceRepositories } from '@placeos/ts-client';\n\nimport { Identity } from 'apps/backoffice/src/app/common/types';\n\n@Component({\n    selector: 'app-interfaces',\n    template: `\n        <div\n            role=\"table\" \n            class=\"pt-4\"\n            *ngIf=\"interfaces && interfaces.length; else load_state\"\n        >\n            <div table-head>\n                <div class=\"flex-1 p-2\">Repository</div>\n                <div class=\"w-[20rem] p-2\">Commit Hash</div>\n            </div>\n            <div table-body>\n                <div table-row *ngFor=\"let item of interfaces\">\n                    <div class=\"flex-1 p-2\">{{ item.id }}</div>\n                    <div class=\"w-[20rem] p-2\">\n                        <code>\n                            {{ item.name || \"~No Commit Hash~\" }}\n                        </code>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8\">\n                <app-icon class=\"mb-4\" className=\"backoffice-cross\"></app-icon>\n                <p>No interfaces</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AdminInterfacesComponent implements OnInit {\n    /** List of interfaces */\n    public interfaces: Identity[] = [];\n\n    ngOnInit() {\n        this.loadInterfaces();\n    }\n\n    private async loadInterfaces() {\n        const interfaces = await listInterfaceRepositories().toPromise();\n        this.interfaces = Object.keys(interfaces).map((id) => ({\n            id,\n            name: interfaces[id],\n        }));\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport {\n    PlaceMQTTBroker,\n    updateBroker,\n    addBroker,\n    queryBrokers,\n    removeBroker,\n} from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { ItemCreateUpdateModalComponent } from 'apps/backoffice/src/app/overlays/item-modal/item-modal.component';\nimport { AsyncHandler } from 'apps/backoffice/src/app/common/base.class';\nimport {\n    notifySuccess,\n    notifyError,\n} from 'apps/backoffice/src/app/common/notifications';\nimport { openConfirmModal } from 'apps/backoffice/src/app/common/general';\n\n@Component({\n    selector: 'app-brokers',\n    template: `\n        <button btn class=\"my-4\" (click)=\"newBroker()\">\n            <div class=\"flex items-center\">\n                <app-icon className=\"backoffice-plus\"></app-icon>\n                <div class=\"text\">Add Broker</div>\n            </div>\n        </button>\n        <div class=\"overflow-auto\">\n            <div\n                role=\"table\"\n                *ngIf=\"brokers && brokers.length; else load_state\"\n                class=\"min-w-[52rem]\"\n            >\n                <div table-head>\n                    <div class=\"w-32 p-2\">Name</div>\n                    <div class=\"w-24 p-2\">Auth Type</div>\n                    <div class=\"flex-1 p-2\">Description</div>\n                    <div class=\"w-32 p-2 truncate\">Host</div>\n                    <div class=\"w-16 p-2\">Port</div>\n                    <div class=\"w-16 p-2\">TLS</div>\n                    <div class=\"w-32 p-2\">Filters</div>\n                    <div class=\"w-24 p-2\"></div>\n                </div>\n                <div table-body>\n                    <div table-row *ngFor=\"let item of brokers\">\n                        <div class=\"w-32 p-2\">{{ item.name }}</div>\n                        <div class=\"w-24 p-2\">\n                            { item.auth_type, select, 0 { Certificate }, 2 {\n                            User Password }, other { No Auth }}\n                        </div>\n                        <div class=\"flex-1 p-2\">{{ item.description }}</div>\n                        <div class=\"w-32 p-2 truncate\">{{ item.host }}</div>\n                        <div class=\"w-16 p-2\">{{ item.port }}</div>\n                        <div class=\"w-16 p-2\">\n                            { item.tls, select, true { Yes }, false { No } }\n                        </div>\n                        <div class=\"w-32 p-2\">{{ item.filters | json }}</div>\n                        <div class=\"w-24 p-2 flex items-center\">\n                            <button btn icon (click)=\"editBroker(item)\">\n                                <app-icon\n                                    [icon]=\"{ class: 'backoffice-edit' }\"\n                                ></app-icon>\n                            </button>\n                            <button btn icon (click)=\"deleteBroker(item)\">\n                                <app-icon\n                                    [icon]=\"{ class: 'backoffice-trash' }\"\n                                ></app-icon>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center\">\n                <p>No Brokers</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n            }\n        `,\n    ],\n})\nexport class AdminBrokersComponent extends AsyncHandler implements OnInit {\n    public brokers: PlaceMQTTBroker[] = [];\n\n    constructor(private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.loadBrokers();\n    }\n\n    public newBroker(): void {\n        const ref = this._dialog.open(ItemCreateUpdateModalComponent, {\n            height: 'auto',\n            width: 'auto',\n            maxHeight: 'calc(100vh - 2em)',\n            maxWidth: 'calc(100vw - 2em)',\n            data: {\n                item: new PlaceMQTTBroker(),\n                name: 'Broker',\n                save: (item) => addBroker(item),\n            },\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done') {\n                    this.loadBrokers();\n                }\n            })\n        );\n    }\n\n    public editBroker(item: PlaceMQTTBroker): void {\n        const ref = this._dialog.open(ItemCreateUpdateModalComponent, {\n            height: 'auto',\n            width: 'auto',\n            maxHeight: 'calc(100vh - 2em)',\n            maxWidth: 'calc(100vw - 2em)',\n            data: {\n                item,\n                name: 'Broker',\n                save: (item) => updateBroker(item.id, item),\n            },\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done') {\n                    this.loadBrokers();\n                }\n            })\n        );\n    }\n\n    public async deleteBroker(item: PlaceMQTTBroker): Promise<void> {\n        if (item) {\n            const details = await openConfirmModal(\n                {\n                    title: `Delete MQTT Broker`,\n                    content: `<p>Are you sure you want delete this boker?</p><p>The broker will be deleted <strong>immediately.</strong></p>`,\n                    icon: { type: 'icon', class: 'backoffice-trash' },\n                },\n                this._dialog\n            );\n            if (!details) return;\n            details.loading('Deleting broker...');\n            const err = await removeBroker(item.id)\n                .toPromise()\n                .catch((_) => _);\n            details.close();\n            if (err)\n                return notifyError(\n                    `Error deleting broker. Error: ${JSON.stringify(\n                        err.response || err.message || err\n                    )}`\n                );\n            notifySuccess(`Successfully deleted broker \"${item.name}\".`);\n            this.loadBrokers();\n        }\n    }\n\n    private async loadBrokers() {\n        const brokers = await queryBrokers()\n            .pipe(map((resp) => resp.data))\n            .toPromise();\n        this.brokers = brokers;\n    }\n}\n","<header>\n    <h3>{{ item ? 'Edit' : 'New' }} Extension</h3>\n    <button btn icon mat-dialog-close *ngIf=\"!loading\">\n        <app-icon\n            [icon]=\"{ type: 'icon', class: 'backoffice-cross' }\"\n        ></app-icon>\n    </button>\n</header>\n<main\n    class=\"max-h-[65vh] overflow-auto p-4\"\n    *ngIf=\"!loading; else load_state\"\n    [formGroup]=\"form\"\n>\n    <div class=\"fieldset\">\n        <div class=\"field\">\n            <label for=\"type\" i18n=\"@@typeLabel\">Type<span>*</span>: </label>\n            <mat-form-field appearance=\"outline\">\n                <mat-select formControlName=\"type\">\n                    <mat-option\n                        *ngFor=\"let type of available_types\"\n                        [value]=\"type\"\n                    >\n                        <span class=\"capitalize\">{{ type }}</span>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"field\">\n            <label for=\"name\" i18n=\"@@nameLabel\">Name<span>*</span>: </label>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"name\"\n                    placeholder=\"Extension Display Name\"\n                    i18n-placeholder=\"@@extensionNamePlaceholder\"\n                    formControlName=\"name\"\n                />\n                <mat-error i18n=\"@@nameError\"\n                    >A valid name is required</mat-error\n                >\n            </mat-form-field>\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"url\" i18n=\"@@urlLabel\">URL<span>*</span>: </label>\n        <mat-form-field appearance=\"outline\">\n            <input\n                matInput\n                name=\"url\"\n                placeholder=\"Extension URL\"\n                i18n-placeholder=\"@@extensionUrlPlaceholder\"\n                formControlName=\"url\"\n            />\n            <mat-error i18n=\"@@urlError\">A valid URL is required</mat-error>\n        </mat-form-field>\n    </div>\n    <div class=\"w-full\">\n        <label *ngIf=\"form.controls.conditions.value?.length\">Conditions</label>\n        <div\n            class=\"fieldset\"\n            *ngFor=\"let condition of form.controls.conditions.value\"\n        >\n            <div class=\"field\">\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"url\"\n                        [(ngModel)]=\"condition[0]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"Condition Field\"\n                        i18n-placeholder=\"@@conditionPlaceholder\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        [(ngModel)]=\"condition[1]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"Operation\"\n                    >\n                        <mat-option\n                            *ngFor=\"let type of condition_ops\"\n                            [value]=\"type\"\n                        >\n                            <span class=\"capitalize\">{{ type }}</span>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"value\"\n                        [disabled]=\"\n                            condition[1] === 'truthy' ||\n                            condition[1] === 'falsy'\n                        \"\n                        [(ngModel)]=\"condition[2]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"Condition Value\"\n                        i18n-placeholder=\"@@conditionValuePlaceholder\"\n                    />\n                </mat-form-field>\n            </div>\n            <button btn icon (click)=\"removeCondition(condition)\">\n                <app-icon [icon]=\"{ class: 'backoffice-cross' }\"></app-icon>\n            </button>\n        </div>\n        <button btn class=\"w-full\" (click)=\"addCondition()\">\n            Add Condition\n        </button>\n    </div>\n</main>\n<footer\n    class=\"border-t border-gray-200 flex items-center justify-end space-x-2 p-4\"\n    *ngIf=\"!loading\"\n>\n    <button btn class=\"w-32 inverse\" mat-dialog-close>Cancel</button>\n    <button btn class=\"w-32\" type=\"submit\" (click)=\"submit()\">\n        {{ item ? 'Save' : 'Add' }} [S]\n    </button>\n</footer>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">Processing request...</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from 'apps/backoffice/src/app/common/base.class';\nimport { HotkeysService } from 'apps/backoffice/src/app/common/hotkeys.service';\nimport { DialogEvent } from 'apps/backoffice/src/app/common/types';\n\nimport { BackofficeExtension } from '../extensions.component';\n\n@Component({\n    selector: 'extension-modal',\n    templateUrl: './extension-modal.component.html',\n    styleUrls: ['./extension-modal.component.scss'],\n})\nexport class ExtensionModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly available_types = [\n        'admin',\n        'systems',\n        'modules',\n        'zones',\n        'drivers',\n        'repositories',\n        'triggers',\n        'users',\n        'domains',\n    ];\n    public readonly condition_ops = ['includes', 'equals', 'truthy', 'falsy'];\n    public readonly item = this._data.item;\n    public loading = false;\n    public form = new FormGroup({\n        type: new FormControl('systems', [Validators.required]),\n        name: new FormControl('', [Validators.required]),\n        url: new FormControl('', [Validators.required]),\n        conditions: new FormControl([]),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: BackofficeExtension },\n        private _hotkey: HotkeysService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'save',\n            this._hotkey.listen(['KeyS'], () => this.submit())\n        );\n        this.form.patchValue(this.item);\n    }\n\n    public addCondition() {\n        const conditions = this.form.controls.conditions.value;\n        conditions.push(['', '', '']);\n    }\n\n    public removeCondition(condition: [string, string, any]) {\n        this.form.controls.conditions.setValue(\n            this.form.controls.conditions.value.filter((c) => c !== condition)\n        );\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (!this.form.valid) {\n            return;\n        }\n        const value = this.form.value;\n        value.conditions = value.conditions.filter((c) => c[0] && c[1]);\n        this.event.emit({ reason: 'done', metadata: value });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PlaceDomain, queryDomains, updateDomain } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { notifyError } from 'apps/backoffice/src/app/common/notifications';\nimport { ApplicationIcon } from 'apps/backoffice/src/app/common/types';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n} from 'apps/backoffice/src/app/overlays/confirm-modal.component';\nimport { ExtensionModalComponent } from './extension-modal/extension-modal.component';\n\nexport interface BackofficeExtension {\n    /** Section of backoffice to extend */\n    type:\n        | 'admin'\n        | 'systems'\n        | 'modules'\n        | 'zones'\n        | 'drivers'\n        | 'repositories'\n        | 'triggers'\n        | 'users'\n        | 'domains';\n    /** Display name of the extension */\n    name: string;\n    /** URL to the application to embed */\n    url: string;\n    /** Conditions for showing the extension */\n    conditions: [string, string, any][];\n    /** Icon to display next to the name */\n    icon: ApplicationIcon;\n}\n\n@Component({\n    selector: '[app-extensions]',\n    template: `\n        <h2 class=\"text-lg font-medium mb-4 mt-4\">Backoffice extensions</h2>\n        <div *ngIf=\"!loading; else load_state\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <label for=\"type\">Domain: </label>\n                <mat-form-field appearance=\"outline\" class=\"h-12\">\n                    <mat-select\n                        name=\"type\"\n                        [(ngModel)]=\"domain\"\n                        (ngModelChange)=\"setDomain($event)\"\n                        placeholder=\"Select Domain...\"\n                    >\n                        <mat-option\n                            *ngFor=\"let domain of domain_list\"\n                            [value]=\"domain\"\n                        >\n                            {{ domain.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <button btn (click)=\"editExtension()\">Add Extension</button>\n            </div>\n            <div\n                class=\"bg-info my-4 p-4 flex items-center rounded shadow space-x-4 text-sm text-white\"\n            >\n                <p>\n                    <strong>Note:</strong> Backoffice requires a full page\n                    refresh for extension changes and additions to apply\n                </p>\n            </div>\n            <div role=\"table\">\n                <div table-head>\n                    <div class=\"w-24 p-2\">Type</div>\n                    <div class=\"w-40 p-2\">Name</div>\n                    <div class=\"flex-1 p-2\">URL</div>\n                    <div class=\"w-28 p-2\">Conditions</div>\n                    <div class=\"w-24 p-2\"></div>\n                </div>\n                <div table-body>\n                    <div table-row *ngFor=\"let extension of extension_list\">\n                        <div class=\"w-24 p-2 capitalize\">\n                            {{ extension.type }}\n                        </div>\n                        <div class=\"w-40 p-2\">{{ extension.name }}</div>\n                        <div class=\"flex-1 p-2\">{{ extension.url }}</div>\n                        <div class=\"w-28 p-2\">\n                            {{ extension.conditions.length }}\n                        </div>\n                        <div class=\"w-24 flex items-center justify-center\">\n                            <button btn icon (click)=\"editExtension(extension)\">\n                                <app-icon\n                                    [icon]=\"{ class: 'backoffice-edit' }\"\n                                ></app-icon>\n                            </button>\n                            <button\n                                btn\n                                icon\n                                (click)=\"removeExtension(extension)\"\n                            >\n                                <app-icon\n                                    [icon]=\"{ class: 'backoffice-trash' }\"\n                                ></app-icon>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div class=\"info-block\">\n                <div class=\"icon\">\n                    <mat-spinner [diameter]=\"32\"></mat-spinner>\n                </div>\n                <div class=\"text\">{{ loading }}</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class PlaceExtensionsComponent implements OnInit {\n    /** Loading state */\n    public loading: string = '';\n    /** List of available domains */\n    public domain_list: PlaceDomain[];\n    /** Currently active domain */\n    public domain: PlaceDomain;\n    /** List of extension available on the current domain */\n    public extension_list: BackofficeExtension[] = [];\n\n    constructor(private _dialog: MatDialog) {}\n\n    public async ngOnInit() {\n        this.loading = 'Loading domains...';\n        this.domain_list = await queryDomains()\n            .pipe(map((r) => r.data))\n            .toPromise();\n        this.setDomain(this.domain_list[0]);\n        this.loading = '';\n    }\n\n    public setDomain(domain: PlaceDomain) {\n        this.domain = domain;\n        const config = this.domain.config?.backoffice?.extend || {};\n        const extensions: BackofficeExtension[] = [];\n        for (const type in config) {\n            if (!config[type]) {\n                continue;\n            }\n            for (const name in config[type]) {\n                if (!config[type][name]) {\n                    continue;\n                }\n                extensions.push({\n                    ...config[type][name],\n                    name,\n                    type,\n                });\n            }\n        }\n        this.extension_list = extensions;\n        this.extension_list.sort(\n            (a, b) =>\n                a.type.localeCompare(b.type) || a.name.localeCompare(b.name)\n        );\n    }\n\n    public editExtension(item?: BackofficeExtension) {\n        const ref = this._dialog.open(ExtensionModalComponent, {\n            data: { item: item ? JSON.parse(JSON.stringify(item)) : undefined },\n        });\n        ref.componentInstance.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe(async (event) => {\n                ref.componentInstance.loading = true;\n                if (item) {\n                    this.extension_list = this.extension_list.filter(\n                        (i) => i !== item\n                    );\n                }\n                this.extension_list.push(event.metadata);\n                await this.updateDomain();\n                ref.componentInstance.loading = false;\n                ref.close();\n            });\n    }\n\n    public async removeExtension(item: BackofficeExtension) {\n        const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n            ConfirmModalComponent,\n            {\n                data: {\n                    title: 'Remove extension',\n                    content: `Are you sure you want to remove the extension \"${item.name}\" from ${item.type}?`,\n                    icon: { class: 'backoffice-trash' },\n                },\n            }\n        );\n        ref.componentInstance.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe(async (_) => {\n                ref.componentInstance.loading = 'Removing extension...';\n                this.extension_list = this.extension_list.filter(\n                    (i) => i !== item\n                );\n                await this.updateDomain().catch((e) =>\n                    notifyError(`Error removing extension: ${e}`)\n                );\n                ref.componentInstance.loading = '';\n                ref.close();\n            });\n    }\n\n    public async updateDomain() {\n        const extensions = {};\n        for (const ext of this.extension_list) {\n            if (!extensions[ext.type]) {\n                extensions[ext.type] = {};\n            }\n            const data = { ...ext };\n            delete data.type;\n            delete data.name;\n            extensions[ext.type][ext.name] = data;\n        }\n        const updated = new PlaceDomain({\n            ...this.domain,\n            config: {\n                ...this.domain.config,\n                backoffice: {\n                    ...(this.domain.config.backoffice || {}),\n                    extend: extensions,\n                },\n            },\n        });\n        const domain = await updateDomain(this.domain.id, updated).toPromise();\n        this.setDomain(domain);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { post } from '@placeos/ts-client';\nimport { notifyError, notifySuccess } from '../common/notifications';\nimport { StaffTenantModalData } from './staff-tenant-modal.component';\n\n@Component({\n    selector: 'booking-limits-modal',\n    template: ` <header>\n            <h3>Edit Tenant Booking Limits</h3>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!loading\" btn icon mat-dialog-close>\n                <app-icon className=\"backoffice-cross\"></app-icon>\n            </button>\n        </header>\n        <main\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto w-[512px] max-w-[100vw]\"\n        >\n            <div class=\"flex flex-col\">\n                <object-list-field\n                    formControlName=\"booking_limits\"\n                    [fields]=\"['type', 'amount']\"\n                ></object-list-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"p-2 border-t border-gray-200 flex justify-center\"\n        >\n            <button btn class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col p-8 items-center justify-center\">\n                <mat-spinner class=\"mb-4\" [diameter]=\"48\"></mat-spinner>\n                <p>Saving booking limits for Staff API tenant...</p>\n            </main>\n        </ng-template>`,\n    styles: [``],\n})\nexport class BookingLimitsModalComponent {\n    public readonly tenant = this._data.tenant;\n    public readonly domain = this._data.domain;\n\n    public form = new FormGroup({\n        booking_limits: new FormControl<{ type: string; amount: string }[]>([]),\n    });\n\n    public loading = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: StaffTenantModalData,\n        private _dialog_ref: MatDialogRef<BookingLimitsModalComponent>\n    ) {\n        const limits = this.tenant?.booking_limits || {};\n        this.form.patchValue({\n            booking_limits: Object.keys(limits).map((k) => ({\n                type: k,\n                amount: `${limits[k]}`,\n            })),\n        });\n    }\n\n    public async save() {\n        this.form.markAllAsTouched();\n        if (!this.form.valid) return;\n        this._dialog_ref.disableClose = true;\n        this.loading = true;\n        const limits: { type: string; amount: string }[] =\n            this.form.value.booking_limits || [];\n        const booking_limits = {};\n        for (const { type, amount } of limits) {\n            booking_limits[type] = +amount || 0;\n        }\n        const call = post(\n            `/api/staff/v1/tenants/${this.tenant.id}/limits`,\n            booking_limits\n        );\n        const resp = await call.toPromise().catch((_) => null);\n        this.loading = false;\n        this._dialog_ref.disableClose = false;\n        if (!resp) return notifyError('Error adding new tenant.');\n        notifySuccess('Successfully added new tenant.');\n        this._dialog_ref.close({ ...this.tenant, booking_limits: resp });\n    }\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { cleanObject, PlaceDomain, post, put } from '@placeos/ts-client';\nimport { getInvalidFields } from '../common/general';\nimport { notifyError, notifySuccess } from '../common/notifications';\nimport { DialogEvent, HashMap } from '../common/types';\nimport { PlaceTenant } from './staff-api.component';\n\nconst FIELD_NAME_MAPPING: HashMap<string> = {\n    issuer: 'Service Account Email',\n    conference_type: 'Conference Type',\n    signing_key: 'Private Key',\n    sub: 'Service User',\n    client_id: 'Client ID',\n    client_secret: 'Client Secret',\n    domain: 'Domain',\n    scopes: 'Scopes',\n    user_agent: 'User Agent',\n};\n\nexport interface StaffTenantModalData {\n    tenant?: PlaceTenant;\n    domain?: PlaceDomain;\n}\n\n@Component({\n    selector: 'staff-tenant-modal',\n    template: `\n        <header>\n            <h3>{{ tenant ? 'Edit' : 'New' }} Tenant</h3>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!loading\" btn icon mat-dialog-close>\n                <app-icon className=\"backoffice-cross\"></app-icon>\n            </button>\n        </header>\n        <main\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto p-4\"\n        >\n            <div class=\"flex items-center flex-wrap space-x-0 sm:space-x-2\">\n                <div class=\"flex flex-col flex-1\">\n                    <label>Name<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            formControlName=\"name\"\n                            placeholder=\"Tenant Name\"\n                        />\n                        <mat-error>A tenant name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <label>Platform<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select formControlName=\"platform\">\n                            <mat-option value=\"google\">Google</mat-option>\n                            <mat-option value=\"office365\">Office365</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label>Email Domain:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        formControlName=\"email_domain\"\n                        placeholder=\"Domain of user's email for this tenant\"\n                    />\n                    <mat-error>A domain is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex items-center flex-wrap space-x-0 sm:space-x-2\"\n                *ngIf=\"\n                    form.value.platform !== 'google' && !form.value.delegated\n                \"\n            >\n                <div class=\"flex flex-col flex-1\">\n                    <label>Service Account:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            formControlName=\"service_account\"\n                            placeholder=\"Service Account\"\n                        />\n                        <mat-error>\n                            Service account should be a valid email address\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center mb-4\">\n                <mat-checkbox formControlName=\"delegated\">\n                    Delegated\n                </mat-checkbox>\n            </div>\n            <form *ngIf=\"credentials\" [formGroup]=\"credentials\">\n                <ng-container\n                    *ngFor=\"let item of credentials.controls | keyvalue\"\n                >\n                    <div\n                        class=\"flex flex-col\"\n                        [class.hidden]=\"item.value?.disabled\"\n                    >\n                        <label class=\"capitalize\">\n                            {{ name_map[item.key] || item.key }}\n                            <span\n                                *ngIf=\"\n                                    item.key !== 'conference_type' &&\n                                    !form.value.id\n                                \"\n                                >*</span\n                            >:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <ng-container [ngSwitch]=\"item.key\">\n                                <input\n                                    matInput\n                                    *ngSwitchDefault\n                                    [formControlName]=\"item.key\"\n                                    [placeholder]=\"\n                                        name_map[item.key] || item.key\n                                    \"\n                                />\n                                <textarea\n                                    matInput\n                                    *ngSwitchCase=\"'signing_key'\"\n                                    [formControlName]=\"item.key\"\n                                    [placeholder]=\"\n                                        name_map[item.key] || item.key\n                                    \"\n                                ></textarea>\n                            </ng-container>\n                            <mat-error>A {{ item.key }} is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </ng-container>\n            </form>\n            <div\n                class=\"flex items-center mb-4\"\n                *ngIf=\"form.value.platform === 'office365'\"\n            >\n                <mat-checkbox\n                    [(ngModel)]=\"show_outlook\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Configure Outlook Plugin\n                </mat-checkbox>\n            </div>\n            <form\n                *ngIf=\"show_outlook && form.get('outlook_config')\"\n                formGroupName=\"outlook_config\"\n            >\n                <div class=\"flex items-center flex-wrap space-x-0 sm:space-x-2\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label>Outlook App ID<span>*</span>:</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                formControlName=\"app_id\"\n                                placeholder=\"Application ID\"\n                            />\n                            <mat-error>An application ID is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label>Outlook App Domain:</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                formControlName=\"app_domain\"\n                                placeholder=\"Application Domain\"\n                            />\n                            <mat-error>\n                                An application domain is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center flex-wrap space-x-0 sm:space-x-2\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label>Outlook App Resource:</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                formControlName=\"app_resource\"\n                                placeholder=\"Application ID\"\n                            />\n                            <mat-error>\n                                An application resource is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label>Outlook Source Location:</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                formControlName=\"source_location\"\n                                placeholder=\"Source Location\"\n                            />\n                            <mat-error>A source location is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center flex-wrap space-x-0 sm:space-x-2\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label>Outlook Base Path:</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                formControlName=\"base_path\"\n                                placeholder=\"outlook\"\n                            />\n                            <mat-error>\n                                Base path to the application root folder is\n                                required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </form>\n            <div class=\"flex flex-col space-y-2\">\n                <label>Booking Limits</label>\n                <object-list-field\n                    formControlName=\"booking_limits\"\n                    [fields]=\"['type', 'amount']\"\n                ></object-list-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"p-2 border-t border-gray-200 flex justify-center\"\n        >\n            <button btn class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col p-8 items-center justify-center\">\n                <mat-spinner class=\"mb-4\" [diameter]=\"48\"></mat-spinner>\n                <p>Saving staff API tenant...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 32rem;\n                max-width: calc(100vw - 5rem);\n                max-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class StaffTenantModalComponent implements OnInit {\n    @Output() public readonly event = new EventEmitter<DialogEvent>();\n\n    public readonly tenant = this._data.tenant;\n    public readonly domain = this._data.domain;\n\n    public show_outlook = false;\n\n    public form = new FormGroup({\n        id: new FormControl(this.tenant?.id || ''),\n        domain: new FormControl(\n            this.domain?.domain || this.tenant?.domain || 'localhost'\n        ),\n        name: new FormControl(this.tenant?.name || '', [Validators.required]),\n        email_domain: new FormControl(this.tenant?.email_domain || ''),\n        delegated: new FormControl(this.tenant?.delegated ?? false),\n        platform: new FormControl(this.tenant?.platform || 'google', [\n            Validators.required,\n        ]),\n        service_account: new FormControl(this.tenant?.service_account, [\n            Validators.email,\n        ]),\n        booking_limits: new FormControl([]),\n        credentials:\n            this.tenant?.platform === 'office365'\n                ? this.office_form\n                : this.google_form,\n    });\n\n    public loading = false;\n\n    public readonly name_map = FIELD_NAME_MAPPING;\n\n    public get office_form() {\n        return new FormGroup({\n            tenant: new FormControl('', [Validators.required]),\n            client_id: new FormControl('', [Validators.required]),\n            client_secret: new FormControl('', [Validators.required]),\n            conference_type: new FormControl(''),\n        });\n    }\n\n    public get google_form() {\n        return new FormGroup({\n            issuer: new FormControl('', [Validators.required]),\n            signing_key: new FormControl('', [Validators.required]),\n            scopes: new FormControl('', [Validators.required]),\n            domain: new FormControl('', [Validators.required]),\n            sub: new FormControl('', [Validators.required]),\n            user_agent: new FormControl('PlaceOS', [Validators.required]),\n            conference_type: new FormControl(''),\n        });\n    }\n\n    public get credentials(): FormGroup {\n        return this.form?.controls.credentials as any;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: StaffTenantModalData,\n        private _dialog_ref: MatDialogRef<StaffTenantModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        const limits = this.tenant?.booking_limits || {};\n        const fields = [\n            'tenant',\n            'client_id',\n            'client_secret',\n            'issuer',\n            'signing_key',\n            'scopes',\n            'sub',\n            'domain',\n            'user_agent',\n        ];\n        const handleDelegation = (delegated) => {\n            if (delegated) {\n                for (const field of fields) {\n                    this.form.get('credentials')?.get(field)?.disable();\n                    this.form.get('credentials')?.get(field)?.setValidators([]);\n                }\n            } else {\n                const id = this.form.value.id;\n                for (const field of fields) {\n                    this.form.get('credentials')?.get(field)?.enable();\n                    this.form\n                        .get('credentials')\n                        ?.get(field)\n                        ?.setValidators(id ? [] : [Validators.required]);\n                }\n            }\n            this.form.updateValueAndValidity();\n        };\n        this.form.controls.platform.valueChanges.subscribe((platform) => {\n            const credentials = this.form.value.credentials;\n            this.form.removeControl('credentials');\n            this.form.addControl(\n                'credentials',\n                platform === 'office365' ? this.office_form : this.google_form\n            );\n            if (platform === 'office365') {\n                (this.form as any).addControl(\n                    'outlook_config',\n                    new FormGroup({\n                        app_id: new FormControl(''),\n                        app_domain: new FormControl(''),\n                        app_resource: new FormControl(''),\n                        source_location: new FormControl(''),\n                        base_path: new FormControl(''),\n                    })\n                );\n            } else {\n                (this.form as any).removeControl('outlook_config');\n            }\n            handleDelegation(this.form.value.delegated);\n            this.form.patchValue({ credentials });\n        });\n        handleDelegation(this.form.value.delegated);\n        this.form.controls.delegated.valueChanges.subscribe(handleDelegation);\n        this.form.patchValue({\n            ...(this.tenant || {}),\n            domain: this.tenant?.domain || this._data.domain?.domain,\n            booking_limits: Object.keys(limits).map((k) => ({\n                type: k,\n                amount: limits[k],\n            })),\n        });\n    }\n\n    public async save() {\n        this.form.markAllAsTouched();\n        if (!this.form.valid) {\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form)}]`\n            );\n        }\n        this._dialog_ref.disableClose = true;\n        this.loading = true;\n        const limits: { type: string; amount: string }[] =\n            this.form.value.booking_limits || [];\n        const booking_limits = limits.reduce(\n            (m, { type, amount }) => (m[type] = +amount),\n            {}\n        );\n        const value = this.form.value;\n        if (!value.credentials.conference_type)\n            delete value.credentials.conference_type;\n        if (!this.show_outlook) {\n            delete (value as any).outlook_config;\n        } else {\n            for (const key in (value as any).outlook_config) {\n                if ((value as any).outlook_config[key] == null) {\n                    delete (value as any).outlook_config[key];\n                }\n            }\n        }\n        for (const key in (value as any).credentials) {\n            if ((value as any).credentials[key] == null) {\n                delete (value as any).credentials[key];\n            }\n        }\n        if (!Object.keys(value.credentials).length) {\n            delete value.credentials;\n        }\n        const data = cleanObject(\n            {\n                ...(this.tenant || {}),\n                ...value,\n                booking_limits,\n            },\n            ['', null, undefined]\n        );\n        const call = this.tenant?.id\n            ? put(`/api/staff/v1/tenants/${this.tenant.id}`, data)\n            : post('/api/staff/v1/tenants', data);\n        const tenant = await call.toPromise().catch((_) => null);\n        this.loading = false;\n        this._dialog_ref.disableClose = false;\n        if (!tenant) return notifyError('Error adding new tenant.');\n        notifySuccess('Successfully added new tenant.');\n        this._dialog_ref.close();\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { del, get, PlaceDomain, queryDomains } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { openConfirmModal } from '../common/general';\nimport { notifyError, notifySuccess } from '../common/notifications';\nimport { HashMap } from '../common/types';\nimport { BookingLimitsModalComponent } from './booking-limits-modal.component';\nimport { StaffTenantModalComponent } from './staff-tenant-modal.component';\n\nexport interface PlaceTenant {\n    id: string;\n    name: string;\n    domain: string;\n    email_domain: string;\n    platform: string;\n    delegated?: boolean;\n    service_account?: string;\n    booking_limits: Record<string, number>;\n    credentials?: HashMap<string>;\n}\n\n@Component({\n    selector: 'staff-api',\n    template: `\n        <div class=\"flex items-center space-x-2 my-4\">\n            <label for=\"type\">Domain: </label>\n            <mat-form-field class=\"h-12\" appearance=\"outline\">\n                <mat-select\n                    name=\"type\"\n                    [ngModel]=\"domain | async\"\n                    (ngModelChange)=\"domain.next($event)\"\n                    placeholder=\"Select Domain...\"\n                >\n                    <mat-option\n                        *ngFor=\"let domain of domain_list\"\n                        [value]=\"domain\"\n                    >\n                        {{ domain.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <button btn (click)=\"editTenant()\">Add Tenant</button>\n        </div>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"w-full\"\n                *ngIf=\"(tenants | async)?.length; else empty_state\"\n            >\n                <div table-head>\n                    <div class=\"w-1/2 p-2\">Name</div>\n                    <div class=\"flex-1 p-2\">Platform</div>\n                    <div class=\"w-24 p-2 h-10\"></div>\n                    <div class=\"w-24 p-2 h-10\"></div>\n                </div>\n                <div table-body>\n                    <div table-row *ngFor=\"let item of tenants | async\">\n                        <div class=\"w-1/2 p-2 truncate\">{{ item.name }}</div>\n                        <div class=\"flex-1 p-2 truncate\">\n                            {{ item.platform }}\n                        </div>\n                        <div class=\"w-24 p-2 truncate\">\n                            <button\n                                btn\n                                class=\"clear underline\"\n                                (click)=\"editLimits(item)\"\n                            >\n                                Edit Limits\n                            </button>\n                        </div>\n                        <div class=\"w-24 px-2 flex items-center justify-end \">\n                            <button\n                                btn\n                                icon\n                                class=\"h-10 w-10\"\n                                (click)=\"editTenant(item)\"\n                            >\n                                <app-icon\n                                    className=\"backoffice-edit\"\n                                ></app-icon>\n                            </button>\n                            <button\n                                btn\n                                icon\n                                class=\"h-10 w-10\"\n                                (click)=\"removeTenant(item)\"\n                            >\n                                <app-icon\n                                    className=\"backoffice-trash\"\n                                ></app-icon>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center justify-center\">\n                <p>No tenants for selected domain</p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div class=\"w-full flex flex-col items-center justify-center\">\n                <mat-spinner class=\"mb-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class PlaceStaffAPIComponent implements OnInit {\n    /** Loading state */\n    public loading: string = '';\n    /** List of available domains */\n    public domain_list: PlaceDomain[];\n    /** Currently active domain */\n    public readonly domain = new BehaviorSubject<PlaceDomain>(null);\n\n    public readonly tenants = this.domain.pipe(\n        switchMap(() => {\n            this.loading = 'Loading tenants for domain...';\n            return get('/api/staff/v1/tenants');\n        }),\n        catchError((_) => []),\n        map((tenants) => {\n            this.loading = '';\n            return tenants.filter(\n                (t) => t.domain === this.domain.getValue().domain\n            );\n        }),\n        shareReplay()\n    );\n\n    constructor(private _dialog: MatDialog) {}\n\n    public async ngOnInit() {\n        this.loading = 'Loading domains...';\n        this.domain_list = await queryDomains()\n            .pipe(map((r) => r.data))\n            .toPromise();\n        this.domain.next(this.domain_list[0]);\n        this.loading = '';\n    }\n\n    public editTenant(tenant?: PlaceTenant) {\n        const ref = this._dialog.open(StaffTenantModalComponent, {\n            data: { tenant, domain: this.domain.getValue() },\n        });\n        ref.afterClosed().subscribe((_) =>\n            this.domain.next(this.domain.getValue())\n        );\n    }\n\n    public editLimits(tenant: PlaceTenant) {\n        const ref = this._dialog.open(BookingLimitsModalComponent, {\n            data: { tenant, domain: this.domain.getValue() },\n        });\n        ref.afterClosed().subscribe((_) =>\n            this.domain.next(this.domain.getValue())\n        );\n    }\n\n    public async removeTenant(tenant: PlaceTenant) {\n        const details = await openConfirmModal(\n            {\n                title: 'Remove tenant?',\n                content: `Remove <strong>${tenant.name}</strong> from this domain?<br>You or your users may lose access to some data.`,\n                icon: { type: 'icon', class: 'backoffice-trash' },\n            },\n            this._dialog\n        );\n        if (!details || !details.reason) return;\n        details.loading('Removing tenant from domain...');\n        const system = await del(`/api/staff/v1/tenants/${tenant.id}`)\n            .toPromise()\n            .catch((err) => {\n                notifyError(\n                    `Error removing module ${tenant.id} from domain. Error: ${\n                        err.statusText || err.message || err\n                    }`\n                );\n                return true;\n            });\n        details.close();\n        if (system) return;\n        notifySuccess(`Successfully removed tenant from domain.`);\n        this.domain.next(this.domain.getValue());\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addEdge, PlaceEdge, updateEdge } from '@placeos/ts-client';\nimport { notifyError, notifySuccess } from '../common/notifications';\nimport { DialogEvent } from '../common/types';\n\nexport interface EdgeModalData {\n    edge: PlaceEdge;\n}\n\n@Component({\n    selector: 'edge-modal',\n    template: `\n        <header>\n            <h3>{{ edge ? 'Edit' : 'New' }} Edge</h3>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!loading\" btn icon mat-dialog-close>\n                <app-icon className=\"backoffice-cross\"></app-icon>\n            </button>\n        </header>\n        <main\n            [formGroup]=\"form\"\n            *ngIf=\"!loading && form; else load_state\"\n            class=\"overflow-auto p-4\"\n        >\n            <div class=\"flex flex-col flex-1\">\n                <label>Name<span>*</span>:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        formControlName=\"name\"\n                        placeholder=\"Edge Name\"\n                    />\n                    <mat-error>A edge name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label>Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        formControlName=\"description\"\n                        placeholder=\"Edge description...\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"p-2 border-t border-gray-200 flex justify-center\"\n        >\n            <button btn class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col p-8 items-center justify-center\">\n                <mat-spinner class=\"mb-4\" [diameter]=\"48\"></mat-spinner>\n                <p>Saving edge...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 32rem;\n                max-width: calc(100vw - 5rem);\n                max-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class EdgeModalComponent {\n    @Output() public readonly event = new EventEmitter<DialogEvent>();\n\n    public readonly edge = this._data.edge;\n\n    public form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        description: new FormControl(''),\n    });\n\n    public loading = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: EdgeModalData,\n        private _dialog_ref: MatDialogRef<EdgeModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.form.patchValue(this.edge);\n    }\n\n    public async save() {\n        this.form.markAllAsTouched();\n        if (!this.form.valid) return;\n        this._dialog_ref.disableClose = true;\n        this.loading = true;\n        const edge = { ...this.edge, ...this.form.value };\n        const method = edge.id ? updateEdge(edge.id, edge) : addEdge(edge);\n        const new_edge = await method.toPromise().catch((_) => null);\n        this.loading = false;\n        this._dialog_ref.disableClose = false;\n        if (!new_edge) return notifyError('Error adding new edge.');\n        edge.id\n            ? notifySuccess('Successfully updated edge.')\n            : notifySuccess(\n                  'Successfully added new edge. Please make sure to save the API key as you will not be able to view it again in the future.'\n              );\n        this._dialog_ref.close(new_edge);\n    }\n}\n","import { Clipboard } from '@angular/cdk/clipboard';\nimport { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    PlaceEdge,\n    queryEdges,\n    removeEdge,\n    retrieveEdgeToken,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounce,\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { copyToClipboard, openConfirmModal } from '../common/general';\nimport {\n    notifyError,\n    notifyInfo,\n    notifySuccess,\n} from '../common/notifications';\nimport { EdgeModalComponent } from './edge-modal.component';\n\n@Component({\n    selector: '[admin-edge]',\n    template: `\n        <button btn class=\"w-full sm:w-32 my-4\" (click)=\"edit()\">\n            Add New Edge\n        </button>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <div\n                table\n                class=\"w-full min-w-[48rem]\"\n                *ngIf=\"(edges | async)?.length; else empty_state\"\n            >\n                <div table-head>\n                    <div class=\"w-32 p-2\">ID</div>\n                    <div class=\"w-32 p-2\">Name</div>\n                    <div class=\"flex-1 p-2\">Description</div>\n                    <div class=\"w-24 p-2 h-10\"></div>\n                </div>\n                <div table-body>\n                    <div table-row *ngFor=\"let item of edges | async\">\n                        <div class=\"w-32 p-2 truncate text-xs font-mono\">\n                            {{ item.id }}\n                        </div>\n                        <div class=\"w-32 p-2 truncate\">{{ item.name }}</div>\n                        <div class=\"flex-1 w-1/4 p-2 truncate\">\n                            {{ item.description }}\n                        </div>\n                        <div class=\"w-24 px-2 flex items-center justify-end \">\n                            <button\n                                btn\n                                icon\n                                class=\"h-10 w-10\"\n                                (click)=\"edit(item)\"\n                            >\n                                <app-icon\n                                    className=\"backoffice-edit\"\n                                ></app-icon>\n                            </button>\n                            <button\n                                btn\n                                icon\n                                class=\"h-10 w-10\"\n                                (click)=\"remove(item)\"\n                            >\n                                <app-icon\n                                    className=\"backoffice-trash\"\n                                ></app-icon>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n        <div\n            *ngIf=\"(last_change | async)?.x_api_key\"\n            (click)=\"copyKey(item.x_api_key)\"\n            matRipple\n            [matTooltip]=\"'Copy API Key for ' + item.name\"\n            class=\"absolute flex rounded cursor-pointer items-center right-4 top-4 bg-white dark:bg-neutral-700 shadow border border-gray-200 dark:border-neutral-500 max-w-[calc(100%-11rem)] overflow-hidden\"\n        >\n            <div\n                class=\"p-2 flex-1 w-1/2 flex h-full items-center border-r border-gray-200 dark:border-neutral-500 \"\n            >\n                <code class=\"flex-1 truncate\">{{ item.x_api_key }}</code>\n            </div>\n            <button btn icon class=\"rounded-none\">\n                <app-icon className=\"backoffice-copy\"></app-icon>\n            </button>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center justify-center\">\n                <p>No edges</p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div class=\"w-full flex flex-col items-center justify-center\">\n                <mat-spinner class=\"mb-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n                min-height: 10rem;\n            }\n        `,\n    ],\n})\nexport class PlaceEdgeComponent {\n    public loading: string = '';\n\n    private _change = new BehaviorSubject<number>(0);\n    private _hide = new BehaviorSubject<string>('');\n    public last_change = new BehaviorSubject<PlaceEdge>(null);\n\n    public get item() {\n        return this.last_change.getValue();\n    }\n\n    private _edge_list: Observable<PlaceEdge[]> = this._change.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = 'Loading Edges...';\n            return queryEdges();\n        }),\n        catchError((_) => of({})),\n        map((details?: { data: PlaceEdge[] }) => {\n            this.loading = '';\n            return (details?.data || []).sort((a, b) =>\n                a.id?.localeCompare(b.id)\n            );\n        }),\n        shareReplay()\n    );\n\n    public readonly edges = combineLatest([this._edge_list, this._hide]).pipe(\n        debounceTime(500),\n        map(([list, hide]) => {\n            if (!hide) return list;\n            const edges = list.filter((_) => _.id !== hide);\n            return edges.sort((a, b) => a.id?.localeCompare(b.id));\n        })\n    );\n\n    public readonly token = async (edge: PlaceEdge) => {\n        const details = await retrieveEdgeToken(edge.id).toPromise();\n        copyToClipboard(details.token);\n        notifyInfo(`Token copied to clickboard.`);\n    };\n\n    public readonly edit = async (edge?: PlaceEdge) => {\n        const ref = this._dialog.open(EdgeModalComponent, { data: { edge } });\n        ref.afterClosed().subscribe((_) => {\n            sessionStorage.setItem('BACKOFFICE.last_edge', JSON.stringify(_));\n            this.last_change.next(_);\n            this._change.next(Date.now());\n        });\n    };\n\n    public readonly remove = async (i: PlaceEdge) => {\n        const details = await openConfirmModal(\n            {\n                title: 'Remove edge?',\n                content: `Remove <strong>${i.name}</strong>?<br>You or your users may lose access to some data.`,\n                icon: { type: 'icon', class: 'backoffice-trash' },\n            },\n            this._dialog\n        );\n        if (!details) return;\n        details.loading('Removing edge...');\n        const err = await removeEdge(i.id)\n            .toPromise()\n            .catch((_) => _);\n        details.close();\n        if (err)\n            return notifyError(\n                `Error removing edge. Error: ${\n                    err.statusText || err.message || err\n                }`\n            );\n        sessionStorage.removeItem('BACKOFFICE.last_edge');\n        this.last_change.next(null);\n        notifySuccess('Successfully removed Edge.');\n        this._hide.next(i.id);\n    };\n\n    constructor(private _dialog: MatDialog, private _clipboard: Clipboard) {}\n\n    public ngOnInit() {\n        const edge_data = sessionStorage.getItem('BACKOFFICE.last_edge');\n        try {\n            this.last_change.next(JSON.parse(edge_data) || null);\n        } catch {}\n    }\n\n    public copyKey(key: string) {\n        if (key && this._clipboard.copy(key)) {\n            notifySuccess('Edge API Key copied to clipboard.');\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { map, shareReplay, take } from 'rxjs/operators';\nimport { randomInt } from '../common/general';\nimport { JsonSchema, SchemaStateService } from './schema-state.service';\n\n@Component({\n    selector: 'admin-schemas',\n    template: `\n        <div class=\"flex items-center space-x-2 my-4\">\n            <div class=\"flex flex-col\">\n                <label for=\"type\">Schema: </label>\n                <mat-form-field class=\"h-12\" appearance=\"outline\">\n                    <mat-select\n                        name=\"type\"\n                        [(ngModel)]=\"active_schema\"\n                        (ngModelChange)=\"copySchema()\"\n                        placeholder=\"Select Schema...\"\n                    >\n                        <mat-option\n                            *ngFor=\"let schema of schema_list | async\"\n                            [value]=\"schema\"\n                        >\n                            {{ schema.name }}\n                        </mat-option>\n                        <mat-option\n                            (click)=\"newSchema(); $event.preventDefault()\"\n                        >\n                            <span class=\"italic font-sans\">New Schema</span>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <button btn class=\"mt-6\" (click)=\"newSchema()\">Add Schema</button>\n        </div>\n        <div class=\"flex items-center space-x-2 mb-4\" *ngIf=\"schema_copy\">\n            <div class=\"flex flex-col\">\n                <label for=\"type\">Schema Name: </label>\n                <mat-form-field class=\"h-12\" appearance=\"outline\">\n                    <input matInput [(ngModel)]=\"schema_copy.name\" />\n                </mat-form-field>\n            </div>\n            <button btn class=\"mt-6\" (click)=\"saveSchema()\">Save Schema</button>\n        </div>\n        <div class=\"relative flex-1 h-1/2\">\n            <ng-container *ngIf=\"schema_copy; else empty_state\">\n                <settings-form-field\n                    [(ngModel)]=\"schema_copy.schema\"\n                    lang=\"json\"\n                    [readonly]=\"false\"\n                ></settings-form-field>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <p class=\"p-8\">Select a schema to edit</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 1rem;\n                right: 1rem;\n                bottom: 0;\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n})\nexport class AdminSchemasComponent {\n    public active_schema: JsonSchema;\n    public schema_copy: JsonSchema;\n\n    public readonly schema_list = this._state.schemas.pipe(shareReplay(1));\n    constructor(private _state: SchemaStateService) {}\n\n    public copySchema() {\n        if (!this.active_schema) return;\n        this.schema_copy = JSON.parse(JSON.stringify(this.active_schema));\n    }\n\n    public async newSchema() {\n        this.active_schema = {\n            name: 'New Schema',\n            schema: '{}',\n        };\n        this.copySchema();\n    }\n\n    public saveSchema() {\n        this._state.saveSchema(this.schema_copy);\n        this.active_schema = null;\n        this.schema_copy = null;\n    }\n}\n","import getTime from \"../getTime/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getUnixTime\n * @category Timestamp Helpers\n * @summary Get the seconds timestamp of the given date.\n *\n * @description\n * Get the seconds timestamp of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05 CET:\n * const result = getUnixTime(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 1330512305\n */\nexport default function getUnixTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  return Math.floor(getTime(dirtyDate) / 1000);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getTime\n * @category Timestamp Helpers\n * @summary Get the milliseconds timestamp of the given date.\n *\n * @description\n * Get the milliseconds timestamp of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05.123:\n * const result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 1330515905123\n */\nexport default function getTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  return timestamp;\n}","import { getUnixTime } from 'date-fns';\n\nexport class PlaceAPIKeyDetails {\n    public readonly id: string;\n    public readonly name: string;\n    public readonly user_id: string;\n    public readonly authority_id: string;\n    public readonly description: string;\n    public readonly scopes: string[];\n    public readonly permissions: null | 'user' | 'support' | 'admin';\n    public readonly created_at: number;\n    public readonly updated_at: number;\n    public readonly secret?: string;\n    public readonly x_api_key?: string;\n\n    constructor(_data: Partial<PlaceAPIKeyDetails>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.user_id = _data.user_id || '';\n        this.authority_id = _data.authority_id || '';\n        this.description = _data.description || '';\n        this.permissions = _data.permissions || 'user';\n        this.created_at = _data.created_at || getUnixTime(new Date());\n        this.updated_at = _data.updated_at || getUnixTime(new Date());\n        this.secret = _data.secret;\n        this.x_api_key = _data.x_api_key || '';\n        this.scopes = _data.scopes || [];\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Output,\n    ViewChild,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { addChipItem, removeChipItem } from '../../common/forms';\nimport { getInvalidFields } from '../../common/general';\nimport { notifyError } from '../../common/notifications';\nimport { DialogEvent } from '../../common/types';\nimport { APIKeyService } from './api-keys.service';\n\n@Component({\n    selector: 'api-key-modal',\n    template: `\n        <header class=\"h-12 flex items-center justify-between p-4\">\n            <h2>New API Key</h2>\n            <button btn icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon className=\"backoffice-cross\"></app-icon>\n            </button>\n        </header>\n        <main\n            class=\"w-[32rem] max-w-[calc(100vw-2rem)] p-4\"\n            *ngIf=\"!loading && form; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\">\n                <label for=\"name\">Name<span>*</span></label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"name\"\n                        formControlName=\"name\"\n                        placeholder=\"Name\"\n                        matInput\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"name\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        name=\"description\"\n                        formControlName=\"description\"\n                        placeholder=\"Description\"\n                        matInput\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"scope\">Scopes<span>*</span></label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-list #chipList aria-label=\"Scopes\">\n                        <mat-chip\n                            *ngFor=\"let scope of scope_list\"\n                            [selectable]=\"true\"\n                            [removable]=\"true\"\n                            (removed)=\"removeScope(scope)\"\n                        >\n                            {{ scope }}\n                            <app-icon\n                                matChipRemove\n                                class=\"dark:text-black\"\n                                className=\"backoffice-cross\"\n                            ></app-icon>\n                        </mat-chip>\n                        <input\n                            matInput\n                            placeholder=\"Scopes...\"\n                            i18n-placeholder=\"@@apiScopePlaceholder\"\n                            [matChipInputFor]=\"chipList\"\n                            [matChipInputSeparatorKeyCodes]=\"separators\"\n                            [matChipInputAddOnBlur]=\"true\"\n                            (matChipInputTokenEnd)=\"addScope($event)\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                    </mat-chip-list>\n                    <mat-error>At least one scope is required</mat-error>\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option\n                            *ngFor=\"let option of scopes | async\"\n                            (click)=\"addScope({ input: {}, value: option })\"\n                        >\n                            {{ option }}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"user\">User<span>*</span></label>\n                <an-action-field\n                    [matMenuTriggerFor]=\"menu\"\n                    yPosition=\"below\"\n                    class=\"mb-8\"\n                    (click)=\"focusInput()\"\n                >\n                    <div [class.opacity-30]=\"!form.value.user?.id\">\n                        {{ form.value.user?.name || 'Select user' }}\n                    </div>\n                </an-action-field>\n                <mat-menu #menu=\"matMenu\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"px-2 h-12\"\n                        (click)=\"\n                            $event.preventDefault(); $event.stopPropagation()\n                        \"\n                    >\n                        <input\n                            matInput\n                            #input\n                            ngModel\n                            (ngModelChange)=\"setSearch($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Search users...\"\n                        />\n                    </mat-form-field>\n                    <button\n                        mat-menu-item\n                        *ngFor=\"let item of users | async | slice: 0:10\"\n                        (click)=\"\n                            form.patchValue({ user: item, user_id: item.id });\n                            setSearch('')\n                        \"\n                        [class.text-primary]=\"form.value.user?.id === item.id\"\n                    >\n                        {{ item.name }}\n                    </button>\n                </mat-menu>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"permissions\">Permissions</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"permissions\"\n                        formControlName=\"permissions\"\n                        placeholder=\"None\"\n                    >\n                        <mat-option [value]=\"null\">None</mat-option>\n                        <mat-option value=\"user\">User</mat-option>\n                        <mat-option value=\"support\">Support</mat-option>\n                        <mat-option value=\"admin\">Admin</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"p-4 flex items-center justify-center border-t border-gray-100 dark:border-gray-100/20\"\n        >\n            <button btn class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 w-[24rem] h-64\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class APIKeyModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        user: new FormControl(null),\n        user_id: new FormControl('', [Validators.required]),\n        description: new FormControl(''),\n        scopes: new FormControl(\n            [],\n            [Validators.required, Validators.minLength(1)]\n        ),\n        permissions: new FormControl(''),\n    });\n    public loading: string;\n    public readonly search_str = new BehaviorSubject('');\n    public readonly scopes = this._service.available_scopes;\n\n    @ViewChild('input') public _input_el: ElementRef<HTMLInputElement>;\n\n    public readonly users = combineLatest([\n        this._service.users,\n        this.form.valueChanges,\n    ]).pipe(\n        map(([users, { permissions }]) => {\n            if (permissions === 'admin')\n                return users.filter((_) => _.sys_admin);\n            if (permissions === 'support')\n                return users.filter((_) => _.support || _.sys_admin);\n            return users.sort((a, b) => a.name?.localeCompare(b.name));\n        })\n    );\n\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    public readonly focusInput = () =>\n        setTimeout(() => this._input_el?.nativeElement?.focus(), 100);\n    public readonly setSearch = (s) => this._service.setSearch(s);\n\n    public readonly addScope = (e) =>\n        addChipItem(this.form.controls.scopes as any, e);\n    public readonly removeScope = (i) =>\n        removeChipItem(this.form.controls.scopes as any, i);\n\n    constructor(private _service: APIKeyService) {\n        setTimeout(() => this.form.patchValue({ permissions: null }), 100);\n    }\n\n    public get scope_list(): string[] {\n        return this.form.controls.scopes.value;\n    }\n\n    public save() {\n        this.form.markAllAsTouched();\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const data = { ...this.form.value };\n        delete data.user;\n        this.event.emit({ reason: 'done', metadata: this.form.value });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    create,\n    get,\n    PlaceDomain,\n    PlaceUser,\n    query,\n    queryDomains,\n    queryUsers,\n    remove,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { debounceTime, first, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { openConfirmModal } from '../../common/general';\nimport { notifyError, notifySuccess } from '../../common/notifications';\nimport { PlaceAPIKeyDetails } from './api-key-details.class';\nimport { APIKeyModalComponent } from './api-key-modal.component';\n\n@Injectable()\nexport class APIKeyService {\n    private _search = new BehaviorSubject<string>('');\n    private _domain = new BehaviorSubject<PlaceDomain>(null);\n    private _last_key = new BehaviorSubject<PlaceAPIKeyDetails>(null);\n    private _change = new BehaviorSubject<number>(0);\n\n    public readonly last_key = this._last_key.asObservable();\n    public readonly active_domain = this._domain.asObservable();\n\n    public readonly available_domains = queryDomains({ limit: 500 }).pipe(\n        map((_) => _.data),\n        shareReplay(1)\n    );\n\n    public readonly available_scopes: Observable<string[]> = get('/api/engine/v2/scopes').pipe(\n        map(_ => _ as any),\n        shareReplay(1)\n    );\n\n    public readonly available_keys = combineLatest([\n        this._domain,\n        this._change,\n    ]).pipe(\n        switchMap(([domain]) => {\n            return domain\n                ? query({\n                      query_params: { authority_id: domain.id },\n                      fn: (d) => new PlaceAPIKeyDetails(d),\n                      path: 'api_keys',\n                  }).pipe(map((_) => _.data as PlaceAPIKeyDetails[]))\n                : of([] as PlaceAPIKeyDetails[]);\n        }),\n        shareReplay(1)\n    );\n\n    public readonly users = combineLatest([\n        this._domain,\n        this._search,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([domain, q]) => {\n            return domain\n                ? queryUsers({ authority_id: domain.id, q }).pipe(\n                      map((_) => _.data as PlaceUser[])\n                  )\n                : of([] as PlaceUser[]);\n        }),\n        shareReplay(1)\n    );\n\n    constructor(private _dialog: MatDialog) {}\n\n    public setDomain(domain: PlaceDomain) {\n        this._domain.next(domain);\n    }\n\n    public setSearch(s: string) {\n        this._search.next(s);\n    }\n\n    public async newKey() {\n        const ref = this._dialog.open(APIKeyModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Creating new API key...';\n        const domain = this._domain.getValue();\n        const key = await create({\n            query_params: {},\n            fn: (d) => new PlaceAPIKeyDetails(d),\n            path: 'api_keys',\n            form_data: {\n                ...details.metadata,\n                authority_id: domain.id,\n            },\n        })\n            .toPromise()\n            .catch((_) => {\n                ref.close();\n                notifyError(_);\n                throw _;\n            });\n        this._last_key.next(key as any);\n        this._change.next(Date.now());\n        notifySuccess('Successfully created new API key.');\n        ref.close();\n    }\n\n    public async removeKey(key: PlaceAPIKeyDetails) {\n        const details = await openConfirmModal(\n            {\n                title: 'Remove API Key',\n                content: `Are you sure you wish to remove this API key?\n                    Removing this key may result in applications using this key to stop working.`,\n                icon: { content: 'delete' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') return;\n        details.loading('Removing API key...');\n        await remove({\n            id: key.id,\n            query_params: {},\n            path: 'api_keys',\n        }).toPromise();\n        details.close();\n        notifySuccess('Successfully removed API key.');\n    }\n}\n","import { Component } from '@angular/core';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { take } from 'rxjs/operators';\nimport { APIKeyService } from './api-keys.service';\nimport { notifyInfo } from '../../common/notifications';\n\n@Component({\n    selector: 'admin-api-keys',\n    template: `\n        <div class=\"flex items-start space-x-2 my-4\">\n            <div class=\"flex flex-col space-y-1\">\n                <label for=\"type\">Domain: </label>\n                <mat-form-field appearance=\"outline\" class=\"h-12\">\n                    <mat-select\n                        name=\"type\"\n                        [ngModel]=\"domain | async\"\n                        (ngModelChange)=\"setDomain($event)\"\n                        placeholder=\"Select Domain...\"\n                    >\n                        <mat-option\n                            *ngFor=\"let domain of domain_list | async\"\n                            [value]=\"domain\"\n                        >\n                            {{ domain.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <button\n                btn\n                class=\"mt-8 min-w-[8rem]\"\n                [disabled]=\"!(domain | async)\"\n                (click)=\"newKey()\"\n            >\n                Add API Key\n            </button>\n            <div\n                *ngIf=\"last_key | async\"\n                class=\"rounded shadow border border-gray-100 min-w-[24rem]\"\n            >\n                <div class=\"border-b px-2 pb-1 border-gray-200 !w-full\">\n                    <label class=\"p-0 m-0\">\n                        Last API Key Details ({{\n                            (last_key | async)?.name || 'Unanamed API Key'\n                        }})\n                    </label>\n                </div>\n                <div class=\"p-2\">\n                    <div\n                        class=\"select-all text-xs opacity-60 mono break-words cursor-pointer\"\n                        (click)=\"copyKey()\"\n                    >\n                        {{ (last_key | async)?.x_api_key }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div\n            role=\"table\"\n            class=\"min-w-[60rem]\"\n            *ngIf=\"(key_list | async)?.length; else load_state\"\n        >\n            <div table-head>\n                <div class=\"w-32 p-2\">Name</div>\n                <div class=\"flex-1 p-2\">Description</div>\n                <div class=\"w-32 p-2 truncate\">Scopes</div>\n                <div class=\"w-28 p-2\">Permissions</div>\n                <div class=\"w-32 p-2\">Created</div>\n                <div class=\"w-16 p-2\"></div>\n            </div>\n            <div table-body>\n                <div table-row *ngFor=\"let item of key_list | async\">\n                    <div class=\"w-32 p-2\">{{ item.name }}</div>\n                    <div class=\"flex-1 p-2\">{{ item.description }}</div>\n                    <div class=\"w-32 p-2 truncate\">\n                        <span\n                            class=\"m-1 px-2 py-1 bg-gray-400 rounded text-xs text-white\"\n                            *ngFor=\"let scope of item.scopes\"\n                        >\n                            {{ scope }}\n                        </span>\n                    </div>\n                    <div class=\"w-28 p-2\">{{ item.permissions || 'None' }}</div>\n                    <div class=\"w-32 p-2\">\n                        {{ item.created_at * 1000 | dateFrom }}\n                    </div>\n                    <div class=\"w-16 p-2 flex items-center\">\n                        <button btn icon (click)=\"deleteKey(item)\">\n                            <app-icon className=\"backoffice-trash\"></app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center\">\n                <p>No API Keys</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AdminAPIKeysComponent {\n    public readonly domain = this._service.active_domain;\n    public readonly domain_list = this._service.available_domains;\n    public readonly key_list = this._service.available_keys;\n    public readonly last_key = this._service.last_key;\n\n    public readonly setDomain = (d) => this._service.setDomain(d);\n    public readonly newKey = () => this._service.newKey();\n    public readonly deleteKey = (k) => this._service.removeKey(k);\n\n    constructor(\n        private _service: APIKeyService,\n        private _clipboard: Clipboard\n    ) {}\n\n    public async copyKey() {\n        const key = await this.last_key.pipe(take(1)).toPromise();\n        if (!key?.x_api_key) return;\n        this._clipboard.copy(key.x_api_key);\n        notifyInfo('Copied API key to clipboard.');\n    }\n}\n","import { Routes } from '@angular/router';\n\nimport { AuthorisedAdminGuard } from 'apps/backoffice/src/app/ui/guards/authorised-admin.guard';\n\nimport { PlaceComponent } from './admin.component';\nimport { PlaceDatabaseDetailsComponent } from './database-details.component';\nimport { PlaceDetailsComponent } from './details.component';\nimport { PlaceClusterDetailsComponent } from './cluster-details/cluster-details.component';\nimport { AdminInterfacesComponent } from './interfaces.component';\nimport { AdminBrokersComponent } from './brokers.component';\nimport { ExtensionOutletComponent } from '../ui/extension-outlet.component';\nimport { PlaceExtensionsComponent } from './extensions.component';\nimport { PlaceStaffAPIComponent } from './staff-api.component';\nimport { PlaceEdgeComponent } from './edge.component';\nimport { AdminSchemasComponent } from './schemas.component';\nimport { AdminAPIKeysComponent } from './api-keys/api-keys.component';\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        component: PlaceComponent,\n        canActivate: [AuthorisedAdminGuard],\n        children: [\n            { path: 'about', component: PlaceDetailsComponent },\n            { path: 'database', component: PlaceDatabaseDetailsComponent },\n            { path: 'clusters', component: PlaceClusterDetailsComponent },\n            { path: 'interfaces', component: AdminInterfacesComponent },\n            { path: 'brokers', component: AdminBrokersComponent },\n            { path: 'edge', component: PlaceEdgeComponent },\n            { path: 'edge/:id', component: PlaceEdgeComponent },\n            { path: 'extensions', component: PlaceExtensionsComponent },\n            { path: 'staff-api', component: PlaceStaffAPIComponent },\n            { path: 'schemas', component: AdminSchemasComponent },\n            { path: 'api-keys', component: AdminAPIKeysComponent },\n            { path: 'extend/:id', component: ExtensionOutletComponent },\n            { path: '**', redirectTo: 'about' },\n        ],\n    },\n    { path: '**', redirectTo: '' },\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ROUTES } from './admin.routes';\nimport { SharedContentModule } from 'apps/backoffice/src/app/ui/ui.module';\n\nimport { PlaceComponent } from './admin.component';\nimport { PlaceDatabaseDetailsComponent } from './database-details.component';\nimport { PlaceDetailsComponent } from './details.component';\nimport { PlaceClusterDetailsComponent } from './cluster-details/cluster-details.component';\nimport { PlaceClusterItemComponent } from './cluster-details/cluster-item.component';\nimport { PlaceClusterTaskListComponent } from './cluster-details/cluster-task-list.component';\nimport { AdminInterfacesComponent } from './interfaces.component';\nimport { AdminBrokersComponent } from './brokers.component';\nimport { PlaceExtensionsComponent } from './extensions.component';\nimport { ExtensionModalComponent } from './extension-modal/extension-modal.component';\nimport { PlaceStaffAPIComponent } from './staff-api.component';\nimport { StaffTenantModalComponent } from './staff-tenant-modal.component';\nimport { PlaceEdgeComponent } from './edge.component';\nimport { EdgeModalComponent } from './edge-modal.component';\nimport { AdminClusterNodeComponent } from './cluster-details/cluster-node.component';\nimport { AdminSchemasComponent } from './schemas.component';\nimport { AdminAPIKeysComponent } from './api-keys/api-keys.component';\nimport { APIKeyModalComponent } from './api-keys/api-key-modal.component';\nimport { APIKeyService } from './api-keys/api-keys.service';\nimport { BookingLimitsModalComponent } from './booking-limits-modal.component';\n\n@NgModule({\n    declarations: [\n        PlaceComponent,\n        PlaceDatabaseDetailsComponent,\n        PlaceDetailsComponent,\n        PlaceClusterDetailsComponent,\n        PlaceClusterItemComponent,\n        PlaceClusterTaskListComponent,\n        PlaceExtensionsComponent,\n        AdminInterfacesComponent,\n        AdminBrokersComponent,\n        ExtensionModalComponent,\n        PlaceStaffAPIComponent,\n        StaffTenantModalComponent,\n        PlaceEdgeComponent,\n        EdgeModalComponent,\n        AdminClusterNodeComponent,\n        AdminSchemasComponent,\n        AdminAPIKeysComponent,\n        APIKeyModalComponent,\n        BookingLimitsModalComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n    ],\n    providers: [\n        APIKeyService\n    ]\n})\nexport class AppPlaceModule {}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period = 0, scheduler = async) {\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber, counter: 0, period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, counter, period } = state;\n    subscriber.next(counter);\n    this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n"],"x_google_ignoreList":[19,20,27]}